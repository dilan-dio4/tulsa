{
	"id": 0,
	"name": "@tulsa/core",
	"kind": 1,
	"kindString": "Project",
	"flags": {},
	"originalName": "",
	"children": [
		{
			"id": 16,
			"name": "IButtonCounter",
			"kind": 256,
			"kindString": "Interface",
			"flags": {},
			"children": [
				{
					"id": 17,
					"name": "children",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Sets the number to display. Cast a numbers to a string."
							}
						],
						"blockTags": [
							{
								"tag": "@example",
								"content": [
									{
										"kind": "code",
										"text": "```jsx\n<Button.Counter>{\"\" + 2}</Button.Counter>\n```"
									}
								]
							},
							{
								"tag": "@required",
								"content": []
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/core/src/Button/index.tsx",
							"line": 195,
							"character": 4,
							"url": "https://github.com/dilan-dio4/tulsa/blob/3f22e3f/packages/core/src/Button/index.tsx#L195"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						17
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/core/src/Button/index.tsx",
					"line": 185,
					"character": 17,
					"url": "https://github.com/dilan-dio4/tulsa/blob/3f22e3f/packages/core/src/Button/index.tsx#L185"
				}
			]
		},
		{
			"id": 6,
			"name": "IButtonProps",
			"kind": 256,
			"kindString": "Interface",
			"flags": {},
			"children": [
				{
					"id": 13,
					"name": "as",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Controls the root element that is used by the button. Can be an HTML element string or a React component."
							}
						],
						"blockTags": [
							{
								"tag": "@default",
								"content": [
									{
										"kind": "text",
										"text": "\"button\""
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/core/src/Button/index.tsx",
							"line": 105,
							"character": 4,
							"url": "https://github.com/dilan-dio4/tulsa/blob/3f22e3f/packages/core/src/Button/index.tsx#L105"
						}
					],
					"type": {
						"type": "reference",
						"id": 15,
						"name": "T"
					}
				},
				{
					"id": 7,
					"name": "leadingVisual",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An element that will appear before the button's content"
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/core/src/Button/index.tsx",
							"line": 68,
							"character": 4,
							"url": "https://github.com/dilan-dio4/tulsa/blob/3f22e3f/packages/core/src/Button/index.tsx#L68"
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "any"
							},
							{
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "JSXElementConstructor",
										"qualifiedName": "React.JSXElementConstructor",
										"package": "@types/react"
									}
								]
							}
						],
						"name": "ReactElement",
						"qualifiedName": "React.ReactElement",
						"package": "@types/react"
					}
				},
				{
					"id": 8,
					"name": "leadingVisualProps",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Props that will be applied to the root component of the leading visual\n\nOperates _similarly_ to this diagram:\n"
							},
							{
								"kind": "code",
								"text": "```\n<span {...tulsaDefaultProps} {...leadingVisualProps}>{leadingVisual}</span>\n```"
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/core/src/Button/index.tsx",
							"line": 77,
							"character": 4,
							"url": "https://github.com/dilan-dio4/tulsa/blob/3f22e3f/packages/core/src/Button/index.tsx#L77"
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "HTMLSpanElement",
												"qualifiedName": "HTMLSpanElement",
												"package": "typescript"
											}
										],
										"name": "HTMLAttributes",
										"qualifiedName": "React.HTMLAttributes",
										"package": "@types/react"
									},
									{
										"type": "reference",
										"name": "HTMLSpanElement",
										"qualifiedName": "HTMLSpanElement",
										"package": "typescript"
									}
								],
								"name": "DetailedHTMLProps",
								"qualifiedName": "React.DetailedHTMLProps",
								"package": "@types/react"
							}
						],
						"name": "Partial",
						"qualifiedName": "Partial",
						"package": "typescript"
					}
				},
				{
					"id": 14,
					"name": "selected",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Sets whether or not the button is displayed as selected or not. Particularly useful in a "
							},
							{
								"kind": "code",
								"text": "`ButtonGroup`"
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/core/src/Button/index.tsx",
							"line": 109,
							"character": 4,
							"url": "https://github.com/dilan-dio4/tulsa/blob/3f22e3f/packages/core/src/Button/index.tsx#L109"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 11,
					"name": "size",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Controls the relative size of the button"
							}
						],
						"blockTags": [
							{
								"tag": "@default",
								"content": [
									{
										"kind": "text",
										"text": "\"md\""
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/core/src/Button/index.tsx",
							"line": 95,
							"character": 4,
							"url": "https://github.com/dilan-dio4/tulsa/blob/3f22e3f/packages/core/src/Button/index.tsx#L95"
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": "xs"
							},
							{
								"type": "literal",
								"value": "sm"
							},
							{
								"type": "literal",
								"value": "md"
							},
							{
								"type": "literal",
								"value": "lg"
							}
						]
					}
				},
				{
					"id": 9,
					"name": "trailingVisual",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An element that will appear after the button's content"
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/core/src/Button/index.tsx",
							"line": 81,
							"character": 4,
							"url": "https://github.com/dilan-dio4/tulsa/blob/3f22e3f/packages/core/src/Button/index.tsx#L81"
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "any"
							},
							{
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "JSXElementConstructor",
										"qualifiedName": "React.JSXElementConstructor",
										"package": "@types/react"
									}
								]
							}
						],
						"name": "ReactElement",
						"qualifiedName": "React.ReactElement",
						"package": "@types/react"
					}
				},
				{
					"id": 10,
					"name": "trailingVisualProps",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Props that will be applied to the root component of the trailing visual\n\nOperates _similarly_ to this diagram:\n"
							},
							{
								"kind": "code",
								"text": "```\n<span {...tulsaDefaultProps} {...trailingVisualProps}>{trailingVisual}</span>\n```"
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/core/src/Button/index.tsx",
							"line": 90,
							"character": 4,
							"url": "https://github.com/dilan-dio4/tulsa/blob/3f22e3f/packages/core/src/Button/index.tsx#L90"
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "HTMLSpanElement",
												"qualifiedName": "HTMLSpanElement",
												"package": "typescript"
											}
										],
										"name": "HTMLAttributes",
										"qualifiedName": "React.HTMLAttributes",
										"package": "@types/react"
									},
									{
										"type": "reference",
										"name": "HTMLSpanElement",
										"qualifiedName": "HTMLSpanElement",
										"package": "typescript"
									}
								],
								"name": "DetailedHTMLProps",
								"qualifiedName": "React.DetailedHTMLProps",
								"package": "@types/react"
							}
						],
						"name": "Partial",
						"qualifiedName": "Partial",
						"package": "typescript"
					}
				},
				{
					"id": 12,
					"name": "variant",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Controls the look & feel of the button"
							}
						],
						"blockTags": [
							{
								"tag": "@default",
								"content": [
									{
										"kind": "text",
										"text": "\"Primary\""
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/core/src/Button/index.tsx",
							"line": 100,
							"character": 4,
							"url": "https://github.com/dilan-dio4/tulsa/blob/3f22e3f/packages/core/src/Button/index.tsx#L100"
						}
					],
					"type": {
						"type": "reference",
						"id": 5,
						"name": "Variant"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						13,
						7,
						8,
						14,
						11,
						9,
						10,
						12
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/core/src/Button/index.tsx",
					"line": 64,
					"character": 17,
					"url": "https://github.com/dilan-dio4/tulsa/blob/3f22e3f/packages/core/src/Button/index.tsx#L64"
				}
			],
			"typeParameters": [
				{
					"id": 15,
					"name": "T",
					"kind": 131072,
					"kindString": "Type parameter",
					"flags": {},
					"type": {
						"type": "reference",
						"name": "ElementType",
						"qualifiedName": "React.ElementType",
						"package": "@types/react"
					}
				}
			]
		},
		{
			"id": 324,
			"name": "IFormControl",
			"kind": 256,
			"kindString": "Interface",
			"flags": {},
			"children": [
				{
					"id": 327,
					"name": "as",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Controls the root element that is used by the FormControl. Can be an HTML element string or a React component."
							}
						],
						"blockTags": [
							{
								"tag": "@default",
								"content": [
									{
										"kind": "text",
										"text": "\"div\""
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/core/src/FormControl/index.tsx",
							"line": 21,
							"character": 4,
							"url": "https://github.com/dilan-dio4/tulsa/blob/3f22e3f/packages/core/src/FormControl/index.tsx#L21"
						}
					],
					"type": {
						"type": "reference",
						"id": 328,
						"name": "T"
					}
				},
				{
					"id": 326,
					"name": "id",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Manually sets the id and accessibility of the "
							},
							{
								"kind": "code",
								"text": "`for`"
							},
							{
								"kind": "text",
								"text": " attribute of the form."
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/core/src/FormControl/index.tsx",
							"line": 16,
							"character": 4,
							"url": "https://github.com/dilan-dio4/tulsa/blob/3f22e3f/packages/core/src/FormControl/index.tsx#L16"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 325,
					"name": "status",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Controls the look and feel of the form."
							}
						],
						"blockTags": [
							{
								"tag": "@default",
								"content": [
									{
										"kind": "text",
										"text": "\"neutral\""
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/core/src/FormControl/index.tsx",
							"line": 12,
							"character": 4,
							"url": "https://github.com/dilan-dio4/tulsa/blob/3f22e3f/packages/core/src/FormControl/index.tsx#L12"
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": "error"
							},
							{
								"type": "literal",
								"value": "success"
							},
							{
								"type": "literal",
								"value": "neutral"
							}
						]
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						327,
						326,
						325
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/core/src/FormControl/index.tsx",
					"line": 6,
					"character": 17,
					"url": "https://github.com/dilan-dio4/tulsa/blob/3f22e3f/packages/core/src/FormControl/index.tsx#L6"
				}
			],
			"typeParameters": [
				{
					"id": 328,
					"name": "T",
					"kind": 131072,
					"kindString": "Type parameter",
					"flags": {},
					"type": {
						"type": "reference",
						"name": "ElementType",
						"qualifiedName": "React.ElementType",
						"package": "@types/react"
					}
				}
			]
		},
		{
			"id": 22,
			"name": "IIconButtonProps",
			"kind": 256,
			"kindString": "Interface",
			"flags": {},
			"children": [
				{
					"id": 27,
					"name": "as",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Controls the root element that is used by the button. Can be an HTML element string or a React component."
							}
						],
						"blockTags": [
							{
								"tag": "@default",
								"content": [
									{
										"kind": "text",
										"text": "\"button\""
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/core/src/Button/index.tsx",
							"line": 236,
							"character": 4,
							"url": "https://github.com/dilan-dio4/tulsa/blob/3f22e3f/packages/core/src/Button/index.tsx#L236"
						}
					],
					"type": {
						"type": "reference",
						"id": 29,
						"name": "T"
					}
				},
				{
					"id": 25,
					"name": "circle",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "If true, makes the IconButton appear as a circle as opposed to a rounded square."
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/core/src/Button/index.tsx",
							"line": 226,
							"character": 4,
							"url": "https://github.com/dilan-dio4/tulsa/blob/3f22e3f/packages/core/src/Button/index.tsx#L226"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 23,
					"name": "icon",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Controls the icon that is displayed. Must be a React Element."
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/core/src/Button/index.tsx",
							"line": 217,
							"character": 4,
							"url": "https://github.com/dilan-dio4/tulsa/blob/3f22e3f/packages/core/src/Button/index.tsx#L217"
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "any"
							},
							{
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "JSXElementConstructor",
										"qualifiedName": "React.JSXElementConstructor",
										"package": "@types/react"
									}
								]
							}
						],
						"name": "ReactElement",
						"qualifiedName": "React.ReactElement",
						"package": "@types/react"
					}
				},
				{
					"id": 28,
					"name": "selected",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Sets whether or not the button is displayed as selected or not. Particularly useful in a "
							},
							{
								"kind": "code",
								"text": "`ButtonGroup`"
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/core/src/Button/index.tsx",
							"line": 240,
							"character": 4,
							"url": "https://github.com/dilan-dio4/tulsa/blob/3f22e3f/packages/core/src/Button/index.tsx#L240"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 24,
					"name": "size",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Controls the relative size of the button"
							}
						],
						"blockTags": [
							{
								"tag": "@default",
								"content": [
									{
										"kind": "text",
										"text": "\"sm\""
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/core/src/Button/index.tsx",
							"line": 222,
							"character": 4,
							"url": "https://github.com/dilan-dio4/tulsa/blob/3f22e3f/packages/core/src/Button/index.tsx#L222"
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": "xs"
							},
							{
								"type": "literal",
								"value": "sm"
							},
							{
								"type": "literal",
								"value": "lg"
							}
						]
					}
				},
				{
					"id": 26,
					"name": "variant",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Controls the look & feel of the button"
							}
						],
						"blockTags": [
							{
								"tag": "@default",
								"content": [
									{
										"kind": "text",
										"text": "\"Primary\""
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/core/src/Button/index.tsx",
							"line": 231,
							"character": 4,
							"url": "https://github.com/dilan-dio4/tulsa/blob/3f22e3f/packages/core/src/Button/index.tsx#L231"
						}
					],
					"type": {
						"type": "reference",
						"id": 5,
						"name": "Variant"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						27,
						25,
						23,
						28,
						24,
						26
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/core/src/Button/index.tsx",
					"line": 213,
					"character": 17,
					"url": "https://github.com/dilan-dio4/tulsa/blob/3f22e3f/packages/core/src/Button/index.tsx#L213"
				}
			],
			"typeParameters": [
				{
					"id": 29,
					"name": "T",
					"kind": 131072,
					"kindString": "Type parameter",
					"flags": {},
					"type": {
						"type": "reference",
						"name": "ElementType",
						"qualifiedName": "React.ElementType",
						"package": "@types/react"
					}
				}
			]
		},
		{
			"id": 34,
			"name": "IInput",
			"kind": 256,
			"kindString": "Interface",
			"flags": {},
			"children": [
				{
					"id": 43,
					"name": "as",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Controls the root element that is used by the input. Can be an HTML element string or a React component."
							}
						],
						"blockTags": [
							{
								"tag": "@default",
								"content": [
									{
										"kind": "text",
										"text": "\"input\""
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/core/src/TextInput/index.tsx",
							"line": 52,
							"character": 4,
							"url": "https://github.com/dilan-dio4/tulsa/blob/3f22e3f/packages/core/src/TextInput/index.tsx#L52"
						}
					],
					"type": {
						"type": "reference",
						"id": 44,
						"name": "T"
					}
				},
				{
					"id": 39,
					"name": "leadingAddon",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An element that will appear before the input's content"
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/core/src/TextInput/index.tsx",
							"line": 35,
							"character": 4,
							"url": "https://github.com/dilan-dio4/tulsa/blob/3f22e3f/packages/core/src/TextInput/index.tsx#L35"
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "any"
							},
							{
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "JSXElementConstructor",
										"qualifiedName": "React.JSXElementConstructor",
										"package": "@types/react"
									}
								]
							}
						],
						"name": "ReactElement",
						"qualifiedName": "React.ReactElement",
						"package": "@types/react"
					}
				},
				{
					"id": 35,
					"name": "leadingVisual",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An element that will appear on the left side of the input"
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/core/src/TextInput/index.tsx",
							"line": 9,
							"character": 4,
							"url": "https://github.com/dilan-dio4/tulsa/blob/3f22e3f/packages/core/src/TextInput/index.tsx#L9"
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "any"
									},
									{
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "reference",
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"name": "JSXElementConstructor",
												"qualifiedName": "React.JSXElementConstructor",
												"package": "@types/react"
											}
										]
									}
								],
								"name": "ReactElement",
								"qualifiedName": "React.ReactElement",
								"package": "@types/react"
							}
						]
					}
				},
				{
					"id": 36,
					"name": "leadingVisualProps",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Props that will be applied to the root component of the leading visual\n\nOperates _similarly_ to this diagram:\n"
							},
							{
								"kind": "code",
								"text": "```\n<span {...tulsaDefaultProps} {...leadingVisualProps}>{leadingVisual}</span>\n```"
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/core/src/TextInput/index.tsx",
							"line": 18,
							"character": 4,
							"url": "https://github.com/dilan-dio4/tulsa/blob/3f22e3f/packages/core/src/TextInput/index.tsx#L18"
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "HTMLSpanElement",
												"qualifiedName": "HTMLSpanElement",
												"package": "typescript"
											}
										],
										"name": "HTMLAttributes",
										"qualifiedName": "React.HTMLAttributes",
										"package": "@types/react"
									},
									{
										"type": "reference",
										"name": "HTMLSpanElement",
										"qualifiedName": "HTMLSpanElement",
										"package": "typescript"
									}
								],
								"name": "DetailedHTMLProps",
								"qualifiedName": "React.DetailedHTMLProps",
								"package": "@types/react"
							}
						],
						"name": "Partial",
						"qualifiedName": "Partial",
						"package": "typescript"
					}
				},
				{
					"id": 42,
					"name": "loading",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Controls whether a spinner is displayed"
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/core/src/TextInput/index.tsx",
							"line": 47,
							"character": 4,
							"url": "https://github.com/dilan-dio4/tulsa/blob/3f22e3f/packages/core/src/TextInput/index.tsx#L47"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 41,
					"name": "rootProps",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Props that are applied to the root of the input."
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/core/src/TextInput/index.tsx",
							"line": 43,
							"character": 4,
							"url": "https://github.com/dilan-dio4/tulsa/blob/3f22e3f/packages/core/src/TextInput/index.tsx#L43"
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "HTMLSpanElement",
												"qualifiedName": "HTMLSpanElement",
												"package": "typescript"
											}
										],
										"name": "HTMLAttributes",
										"qualifiedName": "React.HTMLAttributes",
										"package": "@types/react"
									},
									{
										"type": "reference",
										"name": "HTMLSpanElement",
										"qualifiedName": "HTMLSpanElement",
										"package": "typescript"
									}
								],
								"name": "DetailedHTMLProps",
								"qualifiedName": "React.DetailedHTMLProps",
								"package": "@types/react"
							}
						],
						"name": "Partial",
						"qualifiedName": "Partial",
						"package": "typescript"
					}
				},
				{
					"id": 40,
					"name": "trailingAddon",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An element that will appear after the button's content"
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/core/src/TextInput/index.tsx",
							"line": 39,
							"character": 4,
							"url": "https://github.com/dilan-dio4/tulsa/blob/3f22e3f/packages/core/src/TextInput/index.tsx#L39"
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "any"
							},
							{
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "JSXElementConstructor",
										"qualifiedName": "React.JSXElementConstructor",
										"package": "@types/react"
									}
								]
							}
						],
						"name": "ReactElement",
						"qualifiedName": "React.ReactElement",
						"package": "@types/react"
					}
				},
				{
					"id": 37,
					"name": "trailingVisual",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An element that will appear on the right side of the input"
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/core/src/TextInput/index.tsx",
							"line": 22,
							"character": 4,
							"url": "https://github.com/dilan-dio4/tulsa/blob/3f22e3f/packages/core/src/TextInput/index.tsx#L22"
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "any"
									},
									{
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "reference",
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"name": "JSXElementConstructor",
												"qualifiedName": "React.JSXElementConstructor",
												"package": "@types/react"
											}
										]
									}
								],
								"name": "ReactElement",
								"qualifiedName": "React.ReactElement",
								"package": "@types/react"
							}
						]
					}
				},
				{
					"id": 38,
					"name": "trailingVisualProps",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Props that will be applied to the root component of the trailing visual\n\nOperates _similarly_ to this diagram:\n"
							},
							{
								"kind": "code",
								"text": "```\n<span {...tulsaDefaultProps} {...trailingVisualProps}>{trailingVisual}</span>\n```"
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/core/src/TextInput/index.tsx",
							"line": 31,
							"character": 4,
							"url": "https://github.com/dilan-dio4/tulsa/blob/3f22e3f/packages/core/src/TextInput/index.tsx#L31"
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "HTMLSpanElement",
												"qualifiedName": "HTMLSpanElement",
												"package": "typescript"
											}
										],
										"name": "HTMLAttributes",
										"qualifiedName": "React.HTMLAttributes",
										"package": "@types/react"
									},
									{
										"type": "reference",
										"name": "HTMLSpanElement",
										"qualifiedName": "HTMLSpanElement",
										"package": "typescript"
									}
								],
								"name": "DetailedHTMLProps",
								"qualifiedName": "React.DetailedHTMLProps",
								"package": "@types/react"
							}
						],
						"name": "Partial",
						"qualifiedName": "Partial",
						"package": "typescript"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						43,
						39,
						35,
						36,
						42,
						41,
						40,
						37,
						38
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/core/src/TextInput/index.tsx",
					"line": 5,
					"character": 17,
					"url": "https://github.com/dilan-dio4/tulsa/blob/3f22e3f/packages/core/src/TextInput/index.tsx#L5"
				}
			],
			"typeParameters": [
				{
					"id": 44,
					"name": "T",
					"kind": 131072,
					"kindString": "Type parameter",
					"flags": {},
					"type": {
						"type": "reference",
						"name": "ElementType",
						"qualifiedName": "React.ElementType",
						"package": "@types/react"
					}
				}
			]
		},
		{
			"id": 1125,
			"name": "IMenuProps",
			"kind": 256,
			"kindString": "Interface",
			"flags": {},
			"children": [
				{
					"id": 1154,
					"name": "about",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1881,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "ComponentPropsWithoutRef.about"
					}
				},
				{
					"id": 1135,
					"name": "accessKey",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1856,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "ComponentPropsWithoutRef.accessKey"
					}
				},
				{
					"id": 1173,
					"name": "aria-activedescendant",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Identifies the currently active element when DOM focus is on a composite widget, textbox, group, or application."
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1590,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "ComponentPropsWithoutRef.aria-activedescendant"
					}
				},
				{
					"id": 1174,
					"name": "aria-atomic",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Indicates whether assistive technologies will present all, or only parts of, the changed region based on the change notifications defined by the aria-relevant attribute."
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1592,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"name": "Booleanish",
						"qualifiedName": "Booleanish",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "ComponentPropsWithoutRef.aria-atomic"
					}
				},
				{
					"id": 1175,
					"name": "aria-autocomplete",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Indicates whether inputting text could trigger display of one or more predictions of the user's intended value for an input and specifies how predictions would be\npresented if they are made."
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1597,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": "inline"
							},
							{
								"type": "literal",
								"value": "both"
							},
							{
								"type": "literal",
								"value": "none"
							},
							{
								"type": "literal",
								"value": "list"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "ComponentPropsWithoutRef.aria-autocomplete"
					}
				},
				{
					"id": 1176,
					"name": "aria-busy",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Indicates an element is being modified and that assistive technologies MAY want to wait until the modifications are complete before exposing them to the user."
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1599,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"name": "Booleanish",
						"qualifiedName": "Booleanish",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "ComponentPropsWithoutRef.aria-busy"
					}
				},
				{
					"id": 1177,
					"name": "aria-checked",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Indicates the current \"checked\" state of checkboxes, radio buttons, and other widgets."
							}
						],
						"blockTags": [
							{
								"tag": "@see",
								"content": [
									{
										"kind": "text",
										"text": " - "
									},
									{
										"kind": "text",
										"text": "aria-pressed"
									},
									{
										"kind": "text",
										"text": "\n"
									},
									{
										"kind": "text",
										"text": " - "
									},
									{
										"kind": "text",
										"text": "aria-selected."
									},
									{
										"kind": "text",
										"text": "\n"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1604,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "boolean"
							},
							{
								"type": "literal",
								"value": "mixed"
							},
							{
								"type": "literal",
								"value": "false"
							},
							{
								"type": "literal",
								"value": "true"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "ComponentPropsWithoutRef.aria-checked"
					}
				},
				{
					"id": 1178,
					"name": "aria-colcount",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Defines the total number of columns in a table, grid, or treegrid."
							}
						],
						"blockTags": [
							{
								"tag": "@see",
								"content": [
									{
										"kind": "text",
										"text": "aria-colindex."
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1609,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "ComponentPropsWithoutRef.aria-colcount"
					}
				},
				{
					"id": 1179,
					"name": "aria-colindex",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Defines an element's column index or position with respect to the total number of columns within a table, grid, or treegrid."
							}
						],
						"blockTags": [
							{
								"tag": "@see",
								"content": [
									{
										"kind": "text",
										"text": " - "
									},
									{
										"kind": "text",
										"text": "aria-colcount"
									},
									{
										"kind": "text",
										"text": "\n"
									},
									{
										"kind": "text",
										"text": " - "
									},
									{
										"kind": "text",
										"text": "aria-colspan."
									},
									{
										"kind": "text",
										"text": "\n"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1614,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "ComponentPropsWithoutRef.aria-colindex"
					}
				},
				{
					"id": 1180,
					"name": "aria-colspan",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Defines the number of columns spanned by a cell or gridcell within a table, grid, or treegrid."
							}
						],
						"blockTags": [
							{
								"tag": "@see",
								"content": [
									{
										"kind": "text",
										"text": " - "
									},
									{
										"kind": "text",
										"text": "aria-colindex"
									},
									{
										"kind": "text",
										"text": "\n"
									},
									{
										"kind": "text",
										"text": " - "
									},
									{
										"kind": "text",
										"text": "aria-rowspan."
									},
									{
										"kind": "text",
										"text": "\n"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1619,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "ComponentPropsWithoutRef.aria-colspan"
					}
				},
				{
					"id": 1181,
					"name": "aria-controls",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Identifies the element (or elements) whose contents or presence are controlled by the current element."
							}
						],
						"blockTags": [
							{
								"tag": "@see",
								"content": [
									{
										"kind": "text",
										"text": "aria-owns."
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1624,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "ComponentPropsWithoutRef.aria-controls"
					}
				},
				{
					"id": 1182,
					"name": "aria-current",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Indicates the element that represents the current item within a container or set of related elements."
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1626,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "boolean"
							},
							{
								"type": "literal",
								"value": "location"
							},
							{
								"type": "literal",
								"value": "time"
							},
							{
								"type": "literal",
								"value": "page"
							},
							{
								"type": "literal",
								"value": "false"
							},
							{
								"type": "literal",
								"value": "true"
							},
							{
								"type": "literal",
								"value": "step"
							},
							{
								"type": "literal",
								"value": "date"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "ComponentPropsWithoutRef.aria-current"
					}
				},
				{
					"id": 1183,
					"name": "aria-describedby",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Identifies the element (or elements) that describes the object."
							}
						],
						"blockTags": [
							{
								"tag": "@see",
								"content": [
									{
										"kind": "text",
										"text": "aria-labelledby"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1631,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "ComponentPropsWithoutRef.aria-describedby"
					}
				},
				{
					"id": 1184,
					"name": "aria-details",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Identifies the element that provides a detailed, extended description for the object."
							}
						],
						"blockTags": [
							{
								"tag": "@see",
								"content": [
									{
										"kind": "text",
										"text": "aria-describedby."
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1636,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "ComponentPropsWithoutRef.aria-details"
					}
				},
				{
					"id": 1185,
					"name": "aria-disabled",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Indicates that the element is perceivable but disabled, so it is not editable or otherwise operable."
							}
						],
						"blockTags": [
							{
								"tag": "@see",
								"content": [
									{
										"kind": "text",
										"text": " - "
									},
									{
										"kind": "text",
										"text": "aria-hidden"
									},
									{
										"kind": "text",
										"text": "\n"
									},
									{
										"kind": "text",
										"text": " - "
									},
									{
										"kind": "text",
										"text": "aria-readonly."
									},
									{
										"kind": "text",
										"text": "\n"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1641,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"name": "Booleanish",
						"qualifiedName": "Booleanish",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "ComponentPropsWithoutRef.aria-disabled"
					}
				},
				{
					"id": 1186,
					"name": "aria-dropeffect",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Indicates what functions can be performed when a dragged object is released on the drop target."
							}
						],
						"blockTags": [
							{
								"tag": "@deprecated",
								"content": [
									{
										"kind": "text",
										"text": "in ARIA 1.1"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1646,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": "link"
							},
							{
								"type": "literal",
								"value": "none"
							},
							{
								"type": "literal",
								"value": "copy"
							},
							{
								"type": "literal",
								"value": "move"
							},
							{
								"type": "literal",
								"value": "execute"
							},
							{
								"type": "literal",
								"value": "popup"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "ComponentPropsWithoutRef.aria-dropeffect"
					}
				},
				{
					"id": 1187,
					"name": "aria-errormessage",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Identifies the element that provides an error message for the object."
							}
						],
						"blockTags": [
							{
								"tag": "@see",
								"content": [
									{
										"kind": "text",
										"text": " - "
									},
									{
										"kind": "text",
										"text": "aria-invalid"
									},
									{
										"kind": "text",
										"text": "\n"
									},
									{
										"kind": "text",
										"text": " - "
									},
									{
										"kind": "text",
										"text": "aria-describedby."
									},
									{
										"kind": "text",
										"text": "\n"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1651,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "ComponentPropsWithoutRef.aria-errormessage"
					}
				},
				{
					"id": 1188,
					"name": "aria-expanded",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Indicates whether the element, or another grouping element it controls, is currently expanded or collapsed."
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1653,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"name": "Booleanish",
						"qualifiedName": "Booleanish",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "ComponentPropsWithoutRef.aria-expanded"
					}
				},
				{
					"id": 1189,
					"name": "aria-flowto",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Identifies the next element (or elements) in an alternate reading order of content which, at the user's discretion,\nallows assistive technology to override the general default of reading in document source order."
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1658,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "ComponentPropsWithoutRef.aria-flowto"
					}
				},
				{
					"id": 1190,
					"name": "aria-grabbed",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Indicates an element's \"grabbed\" state in a drag-and-drop operation."
							}
						],
						"blockTags": [
							{
								"tag": "@deprecated",
								"content": [
									{
										"kind": "text",
										"text": "in ARIA 1.1"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1663,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"name": "Booleanish",
						"qualifiedName": "Booleanish",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "ComponentPropsWithoutRef.aria-grabbed"
					}
				},
				{
					"id": 1191,
					"name": "aria-haspopup",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Indicates the availability and type of interactive popup element, such as menu or dialog, that can be triggered by an element."
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1665,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "boolean"
							},
							{
								"type": "literal",
								"value": "grid"
							},
							{
								"type": "literal",
								"value": "dialog"
							},
							{
								"type": "literal",
								"value": "menu"
							},
							{
								"type": "literal",
								"value": "listbox"
							},
							{
								"type": "literal",
								"value": "false"
							},
							{
								"type": "literal",
								"value": "true"
							},
							{
								"type": "literal",
								"value": "tree"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "ComponentPropsWithoutRef.aria-haspopup"
					}
				},
				{
					"id": 1192,
					"name": "aria-hidden",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Indicates whether the element is exposed to an accessibility API."
							}
						],
						"blockTags": [
							{
								"tag": "@see",
								"content": [
									{
										"kind": "text",
										"text": "aria-disabled."
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1670,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"name": "Booleanish",
						"qualifiedName": "Booleanish",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "ComponentPropsWithoutRef.aria-hidden"
					}
				},
				{
					"id": 1193,
					"name": "aria-invalid",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Indicates the entered value does not conform to the format expected by the application."
							}
						],
						"blockTags": [
							{
								"tag": "@see",
								"content": [
									{
										"kind": "text",
										"text": "aria-errormessage."
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1675,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "boolean"
							},
							{
								"type": "literal",
								"value": "false"
							},
							{
								"type": "literal",
								"value": "true"
							},
							{
								"type": "literal",
								"value": "grammar"
							},
							{
								"type": "literal",
								"value": "spelling"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "ComponentPropsWithoutRef.aria-invalid"
					}
				},
				{
					"id": 1194,
					"name": "aria-keyshortcuts",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Indicates keyboard shortcuts that an author has implemented to activate or give focus to an element."
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1677,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "ComponentPropsWithoutRef.aria-keyshortcuts"
					}
				},
				{
					"id": 1195,
					"name": "aria-label",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Defines a string value that labels the current element."
							}
						],
						"blockTags": [
							{
								"tag": "@see",
								"content": [
									{
										"kind": "text",
										"text": "aria-labelledby."
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1682,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "ComponentPropsWithoutRef.aria-label"
					}
				},
				{
					"id": 1196,
					"name": "aria-labelledby",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Identifies the element (or elements) that labels the current element."
							}
						],
						"blockTags": [
							{
								"tag": "@see",
								"content": [
									{
										"kind": "text",
										"text": "aria-describedby."
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1687,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "ComponentPropsWithoutRef.aria-labelledby"
					}
				},
				{
					"id": 1197,
					"name": "aria-level",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Defines the hierarchical level of an element within a structure."
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1689,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "ComponentPropsWithoutRef.aria-level"
					}
				},
				{
					"id": 1198,
					"name": "aria-live",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Indicates that an element will be updated, and describes the types of updates the user agents, assistive technologies, and user can expect from the live region."
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1691,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": "off"
							},
							{
								"type": "literal",
								"value": "assertive"
							},
							{
								"type": "literal",
								"value": "polite"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "ComponentPropsWithoutRef.aria-live"
					}
				},
				{
					"id": 1199,
					"name": "aria-modal",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Indicates whether an element is modal when displayed."
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1693,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"name": "Booleanish",
						"qualifiedName": "Booleanish",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "ComponentPropsWithoutRef.aria-modal"
					}
				},
				{
					"id": 1200,
					"name": "aria-multiline",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Indicates whether a text box accepts multiple lines of input or only a single line."
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1695,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"name": "Booleanish",
						"qualifiedName": "Booleanish",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "ComponentPropsWithoutRef.aria-multiline"
					}
				},
				{
					"id": 1201,
					"name": "aria-multiselectable",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Indicates that the user may select more than one item from the current selectable descendants."
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1697,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"name": "Booleanish",
						"qualifiedName": "Booleanish",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "ComponentPropsWithoutRef.aria-multiselectable"
					}
				},
				{
					"id": 1202,
					"name": "aria-orientation",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Indicates whether the element's orientation is horizontal, vertical, or unknown/ambiguous."
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1699,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": "horizontal"
							},
							{
								"type": "literal",
								"value": "vertical"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "ComponentPropsWithoutRef.aria-orientation"
					}
				},
				{
					"id": 1203,
					"name": "aria-owns",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Identifies an element (or elements) in order to define a visual, functional, or contextual parent/child relationship\nbetween DOM elements where the DOM hierarchy cannot be used to represent the relationship."
							}
						],
						"blockTags": [
							{
								"tag": "@see",
								"content": [
									{
										"kind": "text",
										"text": "aria-controls."
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1705,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "ComponentPropsWithoutRef.aria-owns"
					}
				},
				{
					"id": 1204,
					"name": "aria-placeholder",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Defines a short hint (a word or short phrase) intended to aid the user with data entry when the control has no value.\nA hint could be a sample value or a brief description of the expected format."
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1710,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "ComponentPropsWithoutRef.aria-placeholder"
					}
				},
				{
					"id": 1205,
					"name": "aria-posinset",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Defines an element's number or position in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM."
							}
						],
						"blockTags": [
							{
								"tag": "@see",
								"content": [
									{
										"kind": "text",
										"text": "aria-setsize."
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1715,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "ComponentPropsWithoutRef.aria-posinset"
					}
				},
				{
					"id": 1206,
					"name": "aria-pressed",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Indicates the current \"pressed\" state of toggle buttons."
							}
						],
						"blockTags": [
							{
								"tag": "@see",
								"content": [
									{
										"kind": "text",
										"text": " - "
									},
									{
										"kind": "text",
										"text": "aria-checked"
									},
									{
										"kind": "text",
										"text": "\n"
									},
									{
										"kind": "text",
										"text": " - "
									},
									{
										"kind": "text",
										"text": "aria-selected."
									},
									{
										"kind": "text",
										"text": "\n"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1720,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "boolean"
							},
							{
								"type": "literal",
								"value": "mixed"
							},
							{
								"type": "literal",
								"value": "false"
							},
							{
								"type": "literal",
								"value": "true"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "ComponentPropsWithoutRef.aria-pressed"
					}
				},
				{
					"id": 1207,
					"name": "aria-readonly",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Indicates that the element is not editable, but is otherwise operable."
							}
						],
						"blockTags": [
							{
								"tag": "@see",
								"content": [
									{
										"kind": "text",
										"text": "aria-disabled."
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1725,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"name": "Booleanish",
						"qualifiedName": "Booleanish",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "ComponentPropsWithoutRef.aria-readonly"
					}
				},
				{
					"id": 1208,
					"name": "aria-relevant",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Indicates what notifications the user agent will trigger when the accessibility tree within a live region is modified."
							}
						],
						"blockTags": [
							{
								"tag": "@see",
								"content": [
									{
										"kind": "text",
										"text": "aria-atomic."
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1730,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": "all"
							},
							{
								"type": "literal",
								"value": "text"
							},
							{
								"type": "literal",
								"value": "additions"
							},
							{
								"type": "literal",
								"value": "additions removals"
							},
							{
								"type": "literal",
								"value": "additions text"
							},
							{
								"type": "literal",
								"value": "removals"
							},
							{
								"type": "literal",
								"value": "removals additions"
							},
							{
								"type": "literal",
								"value": "removals text"
							},
							{
								"type": "literal",
								"value": "text additions"
							},
							{
								"type": "literal",
								"value": "text removals"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "ComponentPropsWithoutRef.aria-relevant"
					}
				},
				{
					"id": 1209,
					"name": "aria-required",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Indicates that user input is required on the element before a form may be submitted."
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1732,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"name": "Booleanish",
						"qualifiedName": "Booleanish",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "ComponentPropsWithoutRef.aria-required"
					}
				},
				{
					"id": 1210,
					"name": "aria-roledescription",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Defines a human-readable, author-localized description for the role of an element."
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1734,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "ComponentPropsWithoutRef.aria-roledescription"
					}
				},
				{
					"id": 1211,
					"name": "aria-rowcount",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Defines the total number of rows in a table, grid, or treegrid."
							}
						],
						"blockTags": [
							{
								"tag": "@see",
								"content": [
									{
										"kind": "text",
										"text": "aria-rowindex."
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1739,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "ComponentPropsWithoutRef.aria-rowcount"
					}
				},
				{
					"id": 1212,
					"name": "aria-rowindex",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Defines an element's row index or position with respect to the total number of rows within a table, grid, or treegrid."
							}
						],
						"blockTags": [
							{
								"tag": "@see",
								"content": [
									{
										"kind": "text",
										"text": " - "
									},
									{
										"kind": "text",
										"text": "aria-rowcount"
									},
									{
										"kind": "text",
										"text": "\n"
									},
									{
										"kind": "text",
										"text": " - "
									},
									{
										"kind": "text",
										"text": "aria-rowspan."
									},
									{
										"kind": "text",
										"text": "\n"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1744,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "ComponentPropsWithoutRef.aria-rowindex"
					}
				},
				{
					"id": 1213,
					"name": "aria-rowspan",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Defines the number of rows spanned by a cell or gridcell within a table, grid, or treegrid."
							}
						],
						"blockTags": [
							{
								"tag": "@see",
								"content": [
									{
										"kind": "text",
										"text": " - "
									},
									{
										"kind": "text",
										"text": "aria-rowindex"
									},
									{
										"kind": "text",
										"text": "\n"
									},
									{
										"kind": "text",
										"text": " - "
									},
									{
										"kind": "text",
										"text": "aria-colspan."
									},
									{
										"kind": "text",
										"text": "\n"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1749,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "ComponentPropsWithoutRef.aria-rowspan"
					}
				},
				{
					"id": 1214,
					"name": "aria-selected",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Indicates the current \"selected\" state of various widgets."
							}
						],
						"blockTags": [
							{
								"tag": "@see",
								"content": [
									{
										"kind": "text",
										"text": " - "
									},
									{
										"kind": "text",
										"text": "aria-checked"
									},
									{
										"kind": "text",
										"text": "\n"
									},
									{
										"kind": "text",
										"text": " - "
									},
									{
										"kind": "text",
										"text": "aria-pressed."
									},
									{
										"kind": "text",
										"text": "\n"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1754,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"name": "Booleanish",
						"qualifiedName": "Booleanish",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "ComponentPropsWithoutRef.aria-selected"
					}
				},
				{
					"id": 1215,
					"name": "aria-setsize",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Defines the number of items in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM."
							}
						],
						"blockTags": [
							{
								"tag": "@see",
								"content": [
									{
										"kind": "text",
										"text": "aria-posinset."
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1759,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "ComponentPropsWithoutRef.aria-setsize"
					}
				},
				{
					"id": 1216,
					"name": "aria-sort",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Indicates if items in a table or grid are sorted in ascending or descending order."
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1761,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": "none"
							},
							{
								"type": "literal",
								"value": "ascending"
							},
							{
								"type": "literal",
								"value": "descending"
							},
							{
								"type": "literal",
								"value": "other"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "ComponentPropsWithoutRef.aria-sort"
					}
				},
				{
					"id": 1217,
					"name": "aria-valuemax",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Defines the maximum allowed value for a range widget."
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1763,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "ComponentPropsWithoutRef.aria-valuemax"
					}
				},
				{
					"id": 1218,
					"name": "aria-valuemin",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Defines the minimum allowed value for a range widget."
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1765,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "ComponentPropsWithoutRef.aria-valuemin"
					}
				},
				{
					"id": 1219,
					"name": "aria-valuenow",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Defines the current value for a range widget."
							}
						],
						"blockTags": [
							{
								"tag": "@see",
								"content": [
									{
										"kind": "text",
										"text": "aria-valuetext."
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1770,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "ComponentPropsWithoutRef.aria-valuenow"
					}
				},
				{
					"id": 1220,
					"name": "aria-valuetext",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Defines the human readable text alternative of aria-valuenow for a range widget."
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1772,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "ComponentPropsWithoutRef.aria-valuetext"
					}
				},
				{
					"id": 1161,
					"name": "autoCapitalize",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1891,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "ComponentPropsWithoutRef.autoCapitalize"
					}
				},
				{
					"id": 1162,
					"name": "autoCorrect",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1892,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "ComponentPropsWithoutRef.autoCorrect"
					}
				},
				{
					"id": 1163,
					"name": "autoSave",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1893,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "ComponentPropsWithoutRef.autoSave"
					}
				},
				{
					"id": 1140,
					"name": "children",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1376,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"name": "ReactNode",
						"qualifiedName": "React.ReactNode",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "ComponentPropsWithoutRef.children"
					}
				},
				{
					"id": 1138,
					"name": "className",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1857,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "ComponentPropsWithoutRef.className"
					}
				},
				{
					"id": 1128,
					"name": "color",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1894,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "ComponentPropsWithoutRef.color"
					}
				},
				{
					"id": 1141,
					"name": "contentEditable",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1858,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": "inherit"
							},
							{
								"type": "reference",
								"name": "Booleanish",
								"qualifiedName": "Booleanish",
								"package": "@types/react"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "ComponentPropsWithoutRef.contentEditable"
					}
				},
				{
					"id": 1149,
					"name": "contextMenu",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1859,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "ComponentPropsWithoutRef.contextMenu"
					}
				},
				{
					"id": 1221,
					"name": "dangerouslySetInnerHTML",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1377,
							"character": 8
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 1222,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 1223,
									"name": "__html",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isExternal": true
									},
									"sources": [
										{
											"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
											"line": 1378,
											"character": 12
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										1223
									]
								}
							],
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
									"line": 1377,
									"character": 34
								}
							]
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "ComponentPropsWithoutRef.dangerouslySetInnerHTML"
					}
				},
				{
					"id": 1155,
					"name": "datatype",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1882,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "ComponentPropsWithoutRef.datatype"
					}
				},
				{
					"id": 1145,
					"name": "defaultChecked",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1850,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "ComponentPropsWithoutRef.defaultChecked"
					}
				},
				{
					"id": 1146,
					"name": "defaultValue",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1851,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "number"
							},
							{
								"type": "typeOperator",
								"operator": "readonly",
								"target": {
									"type": "array",
									"elementType": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "ComponentPropsWithoutRef.defaultValue"
					}
				},
				{
					"id": 1134,
					"name": "dir",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1860,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "ComponentPropsWithoutRef.dir"
					}
				},
				{
					"id": 1136,
					"name": "draggable",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1861,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"name": "Booleanish",
						"qualifiedName": "Booleanish",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "ComponentPropsWithoutRef.draggable"
					}
				},
				{
					"id": 1130,
					"name": "hidden",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1862,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "ComponentPropsWithoutRef.hidden"
					}
				},
				{
					"id": 1127,
					"name": "id",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1863,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "ComponentPropsWithoutRef.id"
					}
				},
				{
					"id": 1156,
					"name": "inlist",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1883,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "ComponentPropsWithoutRef.inlist"
					}
				},
				{
					"id": 1142,
					"name": "inputMode",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Hints at the type of data that might be entered by the user while editing the element or its contents"
							}
						],
						"blockTags": [
							{
								"tag": "@see",
								"content": [
									{
										"kind": "text",
										"text": "https://html.spec.whatwg.org/multipage/interaction.html#input-modalities:-the-inputmode-attribute"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1909,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": "search"
							},
							{
								"type": "literal",
								"value": "numeric"
							},
							{
								"type": "literal",
								"value": "none"
							},
							{
								"type": "literal",
								"value": "url"
							},
							{
								"type": "literal",
								"value": "text"
							},
							{
								"type": "literal",
								"value": "tel"
							},
							{
								"type": "literal",
								"value": "email"
							},
							{
								"type": "literal",
								"value": "decimal"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "ComponentPropsWithoutRef.inputMode"
					}
				},
				{
					"id": 1172,
					"name": "is",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Specify that a standard HTML element should behave like a defined custom built-in element"
							}
						],
						"blockTags": [
							{
								"tag": "@see",
								"content": [
									{
										"kind": "text",
										"text": "https://html.spec.whatwg.org/multipage/custom-elements.html#attr-is"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1914,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "ComponentPropsWithoutRef.is"
					}
				},
				{
					"id": 1167,
					"name": "itemID",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1898,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "ComponentPropsWithoutRef.itemID"
					}
				},
				{
					"id": 1164,
					"name": "itemProp",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1895,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "ComponentPropsWithoutRef.itemProp"
					}
				},
				{
					"id": 1168,
					"name": "itemRef",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1899,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "ComponentPropsWithoutRef.itemRef"
					}
				},
				{
					"id": 1165,
					"name": "itemScope",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1896,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "ComponentPropsWithoutRef.itemScope"
					}
				},
				{
					"id": 1166,
					"name": "itemType",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1897,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "ComponentPropsWithoutRef.itemType"
					}
				},
				{
					"id": 1126,
					"name": "key",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 132,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"name": "Key",
						"qualifiedName": "React.Key",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "ComponentPropsWithoutRef.key"
					}
				},
				{
					"id": 1137,
					"name": "lang",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1864,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "ComponentPropsWithoutRef.lang"
					}
				},
				{
					"id": 1143,
					"name": "nonce",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1865,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "ComponentPropsWithoutRef.nonce"
					}
				},
				{
					"id": 1262,
					"name": "onAbort",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1434,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLUListElement",
								"qualifiedName": "HTMLUListElement",
								"package": "typescript"
							}
						],
						"name": "ReactEventHandler",
						"qualifiedName": "React.ReactEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "ComponentPropsWithoutRef.onAbort"
					}
				},
				{
					"id": 1263,
					"name": "onAbortCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1435,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLUListElement",
								"qualifiedName": "HTMLUListElement",
								"package": "typescript"
							}
						],
						"name": "ReactEventHandler",
						"qualifiedName": "React.ReactEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "ComponentPropsWithoutRef.onAbortCapture"
					}
				},
				{
					"id": 1380,
					"name": "onAnimationEnd",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1566,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLUListElement",
								"qualifiedName": "HTMLUListElement",
								"package": "typescript"
							}
						],
						"name": "AnimationEventHandler",
						"qualifiedName": "React.AnimationEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "ComponentPropsWithoutRef.onAnimationEnd"
					}
				},
				{
					"id": 1381,
					"name": "onAnimationEndCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1567,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLUListElement",
								"qualifiedName": "HTMLUListElement",
								"package": "typescript"
							}
						],
						"name": "AnimationEventHandler",
						"qualifiedName": "React.AnimationEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "ComponentPropsWithoutRef.onAnimationEndCapture"
					}
				},
				{
					"id": 1382,
					"name": "onAnimationIteration",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1568,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLUListElement",
								"qualifiedName": "HTMLUListElement",
								"package": "typescript"
							}
						],
						"name": "AnimationEventHandler",
						"qualifiedName": "React.AnimationEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "ComponentPropsWithoutRef.onAnimationIteration"
					}
				},
				{
					"id": 1383,
					"name": "onAnimationIterationCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1569,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLUListElement",
								"qualifiedName": "HTMLUListElement",
								"package": "typescript"
							}
						],
						"name": "AnimationEventHandler",
						"qualifiedName": "React.AnimationEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "ComponentPropsWithoutRef.onAnimationIterationCapture"
					}
				},
				{
					"id": 1378,
					"name": "onAnimationStart",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1564,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLUListElement",
								"qualifiedName": "HTMLUListElement",
								"package": "typescript"
							}
						],
						"name": "AnimationEventHandler",
						"qualifiedName": "React.AnimationEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "ComponentPropsWithoutRef.onAnimationStart"
					}
				},
				{
					"id": 1379,
					"name": "onAnimationStartCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1565,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLUListElement",
								"qualifiedName": "HTMLUListElement",
								"package": "typescript"
							}
						],
						"name": "AnimationEventHandler",
						"qualifiedName": "React.AnimationEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "ComponentPropsWithoutRef.onAnimationStartCapture"
					}
				},
				{
					"id": 1308,
					"name": "onAuxClick",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1482,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLUListElement",
								"qualifiedName": "HTMLUListElement",
								"package": "typescript"
							}
						],
						"name": "MouseEventHandler",
						"qualifiedName": "React.MouseEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "ComponentPropsWithoutRef.onAuxClick"
					}
				},
				{
					"id": 1309,
					"name": "onAuxClickCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1483,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLUListElement",
								"qualifiedName": "HTMLUListElement",
								"package": "typescript"
							}
						],
						"name": "MouseEventHandler",
						"qualifiedName": "React.MouseEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "ComponentPropsWithoutRef.onAuxClickCapture"
					}
				},
				{
					"id": 1242,
					"name": "onBeforeInput",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1406,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLUListElement",
								"qualifiedName": "HTMLUListElement",
								"package": "typescript"
							}
						],
						"name": "FormEventHandler",
						"qualifiedName": "React.FormEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "ComponentPropsWithoutRef.onBeforeInput"
					}
				},
				{
					"id": 1243,
					"name": "onBeforeInputCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1407,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLUListElement",
								"qualifiedName": "HTMLUListElement",
								"package": "typescript"
							}
						],
						"name": "FormEventHandler",
						"qualifiedName": "React.FormEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "ComponentPropsWithoutRef.onBeforeInputCapture"
					}
				},
				{
					"id": 1238,
					"name": "onBlur",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1400,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLUListElement",
								"qualifiedName": "HTMLUListElement",
								"package": "typescript"
							}
						],
						"name": "FocusEventHandler",
						"qualifiedName": "React.FocusEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "ComponentPropsWithoutRef.onBlur"
					}
				},
				{
					"id": 1239,
					"name": "onBlurCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1401,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLUListElement",
								"qualifiedName": "HTMLUListElement",
								"package": "typescript"
							}
						],
						"name": "FocusEventHandler",
						"qualifiedName": "React.FocusEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "ComponentPropsWithoutRef.onBlurCapture"
					}
				},
				{
					"id": 1264,
					"name": "onCanPlay",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1436,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLUListElement",
								"qualifiedName": "HTMLUListElement",
								"package": "typescript"
							}
						],
						"name": "ReactEventHandler",
						"qualifiedName": "React.ReactEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "ComponentPropsWithoutRef.onCanPlay"
					}
				},
				{
					"id": 1265,
					"name": "onCanPlayCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1437,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLUListElement",
								"qualifiedName": "HTMLUListElement",
								"package": "typescript"
							}
						],
						"name": "ReactEventHandler",
						"qualifiedName": "React.ReactEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "ComponentPropsWithoutRef.onCanPlayCapture"
					}
				},
				{
					"id": 1266,
					"name": "onCanPlayThrough",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1438,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLUListElement",
								"qualifiedName": "HTMLUListElement",
								"package": "typescript"
							}
						],
						"name": "ReactEventHandler",
						"qualifiedName": "React.ReactEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "ComponentPropsWithoutRef.onCanPlayThrough"
					}
				},
				{
					"id": 1267,
					"name": "onCanPlayThroughCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1439,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLUListElement",
								"qualifiedName": "HTMLUListElement",
								"package": "typescript"
							}
						],
						"name": "ReactEventHandler",
						"qualifiedName": "React.ReactEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "ComponentPropsWithoutRef.onCanPlayThroughCapture"
					}
				},
				{
					"id": 1240,
					"name": "onChange",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1404,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLUListElement",
								"qualifiedName": "HTMLUListElement",
								"package": "typescript"
							}
						],
						"name": "FormEventHandler",
						"qualifiedName": "React.FormEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "ComponentPropsWithoutRef.onChange"
					}
				},
				{
					"id": 1241,
					"name": "onChangeCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1405,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLUListElement",
								"qualifiedName": "HTMLUListElement",
								"package": "typescript"
							}
						],
						"name": "FormEventHandler",
						"qualifiedName": "React.FormEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "ComponentPropsWithoutRef.onChangeCapture"
					}
				},
				{
					"id": 1310,
					"name": "onClick",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1484,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLUListElement",
								"qualifiedName": "HTMLUListElement",
								"package": "typescript"
							}
						],
						"name": "MouseEventHandler",
						"qualifiedName": "React.MouseEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "ComponentPropsWithoutRef.onClick"
					}
				},
				{
					"id": 1311,
					"name": "onClickCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1485,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLUListElement",
								"qualifiedName": "HTMLUListElement",
								"package": "typescript"
							}
						],
						"name": "MouseEventHandler",
						"qualifiedName": "React.MouseEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "ComponentPropsWithoutRef.onClickCapture"
					}
				},
				{
					"id": 1230,
					"name": "onCompositionEnd",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1390,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLUListElement",
								"qualifiedName": "HTMLUListElement",
								"package": "typescript"
							}
						],
						"name": "CompositionEventHandler",
						"qualifiedName": "React.CompositionEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "ComponentPropsWithoutRef.onCompositionEnd"
					}
				},
				{
					"id": 1231,
					"name": "onCompositionEndCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1391,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLUListElement",
								"qualifiedName": "HTMLUListElement",
								"package": "typescript"
							}
						],
						"name": "CompositionEventHandler",
						"qualifiedName": "React.CompositionEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "ComponentPropsWithoutRef.onCompositionEndCapture"
					}
				},
				{
					"id": 1232,
					"name": "onCompositionStart",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1392,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLUListElement",
								"qualifiedName": "HTMLUListElement",
								"package": "typescript"
							}
						],
						"name": "CompositionEventHandler",
						"qualifiedName": "React.CompositionEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "ComponentPropsWithoutRef.onCompositionStart"
					}
				},
				{
					"id": 1233,
					"name": "onCompositionStartCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1393,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLUListElement",
								"qualifiedName": "HTMLUListElement",
								"package": "typescript"
							}
						],
						"name": "CompositionEventHandler",
						"qualifiedName": "React.CompositionEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "ComponentPropsWithoutRef.onCompositionStartCapture"
					}
				},
				{
					"id": 1234,
					"name": "onCompositionUpdate",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1394,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLUListElement",
								"qualifiedName": "HTMLUListElement",
								"package": "typescript"
							}
						],
						"name": "CompositionEventHandler",
						"qualifiedName": "React.CompositionEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "ComponentPropsWithoutRef.onCompositionUpdate"
					}
				},
				{
					"id": 1235,
					"name": "onCompositionUpdateCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1395,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLUListElement",
								"qualifiedName": "HTMLUListElement",
								"package": "typescript"
							}
						],
						"name": "CompositionEventHandler",
						"qualifiedName": "React.CompositionEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "ComponentPropsWithoutRef.onCompositionUpdateCapture"
					}
				},
				{
					"id": 1312,
					"name": "onContextMenu",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1486,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLUListElement",
								"qualifiedName": "HTMLUListElement",
								"package": "typescript"
							}
						],
						"name": "MouseEventHandler",
						"qualifiedName": "React.MouseEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "ComponentPropsWithoutRef.onContextMenu"
					}
				},
				{
					"id": 1313,
					"name": "onContextMenuCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1487,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLUListElement",
								"qualifiedName": "HTMLUListElement",
								"package": "typescript"
							}
						],
						"name": "MouseEventHandler",
						"qualifiedName": "React.MouseEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "ComponentPropsWithoutRef.onContextMenuCapture"
					}
				},
				{
					"id": 1224,
					"name": "onCopy",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1382,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLUListElement",
								"qualifiedName": "HTMLUListElement",
								"package": "typescript"
							}
						],
						"name": "ClipboardEventHandler",
						"qualifiedName": "React.ClipboardEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "ComponentPropsWithoutRef.onCopy"
					}
				},
				{
					"id": 1225,
					"name": "onCopyCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1383,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLUListElement",
								"qualifiedName": "HTMLUListElement",
								"package": "typescript"
							}
						],
						"name": "ClipboardEventHandler",
						"qualifiedName": "React.ClipboardEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "ComponentPropsWithoutRef.onCopyCapture"
					}
				},
				{
					"id": 1226,
					"name": "onCut",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1384,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLUListElement",
								"qualifiedName": "HTMLUListElement",
								"package": "typescript"
							}
						],
						"name": "ClipboardEventHandler",
						"qualifiedName": "React.ClipboardEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "ComponentPropsWithoutRef.onCut"
					}
				},
				{
					"id": 1227,
					"name": "onCutCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1385,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLUListElement",
								"qualifiedName": "HTMLUListElement",
								"package": "typescript"
							}
						],
						"name": "ClipboardEventHandler",
						"qualifiedName": "React.ClipboardEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "ComponentPropsWithoutRef.onCutCapture"
					}
				},
				{
					"id": 1314,
					"name": "onDoubleClick",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1488,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLUListElement",
								"qualifiedName": "HTMLUListElement",
								"package": "typescript"
							}
						],
						"name": "MouseEventHandler",
						"qualifiedName": "React.MouseEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "ComponentPropsWithoutRef.onDoubleClick"
					}
				},
				{
					"id": 1315,
					"name": "onDoubleClickCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1489,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLUListElement",
								"qualifiedName": "HTMLUListElement",
								"package": "typescript"
							}
						],
						"name": "MouseEventHandler",
						"qualifiedName": "React.MouseEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "ComponentPropsWithoutRef.onDoubleClickCapture"
					}
				},
				{
					"id": 1316,
					"name": "onDrag",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1490,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLUListElement",
								"qualifiedName": "HTMLUListElement",
								"package": "typescript"
							}
						],
						"name": "DragEventHandler",
						"qualifiedName": "React.DragEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "ComponentPropsWithoutRef.onDrag"
					}
				},
				{
					"id": 1317,
					"name": "onDragCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1491,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLUListElement",
								"qualifiedName": "HTMLUListElement",
								"package": "typescript"
							}
						],
						"name": "DragEventHandler",
						"qualifiedName": "React.DragEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "ComponentPropsWithoutRef.onDragCapture"
					}
				},
				{
					"id": 1318,
					"name": "onDragEnd",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1492,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLUListElement",
								"qualifiedName": "HTMLUListElement",
								"package": "typescript"
							}
						],
						"name": "DragEventHandler",
						"qualifiedName": "React.DragEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "ComponentPropsWithoutRef.onDragEnd"
					}
				},
				{
					"id": 1319,
					"name": "onDragEndCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1493,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLUListElement",
								"qualifiedName": "HTMLUListElement",
								"package": "typescript"
							}
						],
						"name": "DragEventHandler",
						"qualifiedName": "React.DragEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "ComponentPropsWithoutRef.onDragEndCapture"
					}
				},
				{
					"id": 1320,
					"name": "onDragEnter",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1494,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLUListElement",
								"qualifiedName": "HTMLUListElement",
								"package": "typescript"
							}
						],
						"name": "DragEventHandler",
						"qualifiedName": "React.DragEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "ComponentPropsWithoutRef.onDragEnter"
					}
				},
				{
					"id": 1321,
					"name": "onDragEnterCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1495,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLUListElement",
								"qualifiedName": "HTMLUListElement",
								"package": "typescript"
							}
						],
						"name": "DragEventHandler",
						"qualifiedName": "React.DragEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "ComponentPropsWithoutRef.onDragEnterCapture"
					}
				},
				{
					"id": 1322,
					"name": "onDragExit",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1496,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLUListElement",
								"qualifiedName": "HTMLUListElement",
								"package": "typescript"
							}
						],
						"name": "DragEventHandler",
						"qualifiedName": "React.DragEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "ComponentPropsWithoutRef.onDragExit"
					}
				},
				{
					"id": 1323,
					"name": "onDragExitCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1497,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLUListElement",
								"qualifiedName": "HTMLUListElement",
								"package": "typescript"
							}
						],
						"name": "DragEventHandler",
						"qualifiedName": "React.DragEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "ComponentPropsWithoutRef.onDragExitCapture"
					}
				},
				{
					"id": 1324,
					"name": "onDragLeave",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1498,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLUListElement",
								"qualifiedName": "HTMLUListElement",
								"package": "typescript"
							}
						],
						"name": "DragEventHandler",
						"qualifiedName": "React.DragEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "ComponentPropsWithoutRef.onDragLeave"
					}
				},
				{
					"id": 1325,
					"name": "onDragLeaveCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1499,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLUListElement",
								"qualifiedName": "HTMLUListElement",
								"package": "typescript"
							}
						],
						"name": "DragEventHandler",
						"qualifiedName": "React.DragEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "ComponentPropsWithoutRef.onDragLeaveCapture"
					}
				},
				{
					"id": 1326,
					"name": "onDragOver",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1500,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLUListElement",
								"qualifiedName": "HTMLUListElement",
								"package": "typescript"
							}
						],
						"name": "DragEventHandler",
						"qualifiedName": "React.DragEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "ComponentPropsWithoutRef.onDragOver"
					}
				},
				{
					"id": 1327,
					"name": "onDragOverCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1501,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLUListElement",
								"qualifiedName": "HTMLUListElement",
								"package": "typescript"
							}
						],
						"name": "DragEventHandler",
						"qualifiedName": "React.DragEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "ComponentPropsWithoutRef.onDragOverCapture"
					}
				},
				{
					"id": 1328,
					"name": "onDragStart",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1502,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLUListElement",
								"qualifiedName": "HTMLUListElement",
								"package": "typescript"
							}
						],
						"name": "DragEventHandler",
						"qualifiedName": "React.DragEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "ComponentPropsWithoutRef.onDragStart"
					}
				},
				{
					"id": 1329,
					"name": "onDragStartCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1503,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLUListElement",
								"qualifiedName": "HTMLUListElement",
								"package": "typescript"
							}
						],
						"name": "DragEventHandler",
						"qualifiedName": "React.DragEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "ComponentPropsWithoutRef.onDragStartCapture"
					}
				},
				{
					"id": 1330,
					"name": "onDrop",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1504,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLUListElement",
								"qualifiedName": "HTMLUListElement",
								"package": "typescript"
							}
						],
						"name": "DragEventHandler",
						"qualifiedName": "React.DragEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "ComponentPropsWithoutRef.onDrop"
					}
				},
				{
					"id": 1331,
					"name": "onDropCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1505,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLUListElement",
								"qualifiedName": "HTMLUListElement",
								"package": "typescript"
							}
						],
						"name": "DragEventHandler",
						"qualifiedName": "React.DragEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "ComponentPropsWithoutRef.onDropCapture"
					}
				},
				{
					"id": 1268,
					"name": "onDurationChange",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1440,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLUListElement",
								"qualifiedName": "HTMLUListElement",
								"package": "typescript"
							}
						],
						"name": "ReactEventHandler",
						"qualifiedName": "React.ReactEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "ComponentPropsWithoutRef.onDurationChange"
					}
				},
				{
					"id": 1269,
					"name": "onDurationChangeCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1441,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLUListElement",
								"qualifiedName": "HTMLUListElement",
								"package": "typescript"
							}
						],
						"name": "ReactEventHandler",
						"qualifiedName": "React.ReactEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "ComponentPropsWithoutRef.onDurationChangeCapture"
					}
				},
				{
					"id": 1270,
					"name": "onEmptied",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1442,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLUListElement",
								"qualifiedName": "HTMLUListElement",
								"package": "typescript"
							}
						],
						"name": "ReactEventHandler",
						"qualifiedName": "React.ReactEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "ComponentPropsWithoutRef.onEmptied"
					}
				},
				{
					"id": 1271,
					"name": "onEmptiedCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1443,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLUListElement",
								"qualifiedName": "HTMLUListElement",
								"package": "typescript"
							}
						],
						"name": "ReactEventHandler",
						"qualifiedName": "React.ReactEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "ComponentPropsWithoutRef.onEmptiedCapture"
					}
				},
				{
					"id": 1272,
					"name": "onEncrypted",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1444,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLUListElement",
								"qualifiedName": "HTMLUListElement",
								"package": "typescript"
							}
						],
						"name": "ReactEventHandler",
						"qualifiedName": "React.ReactEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "ComponentPropsWithoutRef.onEncrypted"
					}
				},
				{
					"id": 1273,
					"name": "onEncryptedCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1445,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLUListElement",
								"qualifiedName": "HTMLUListElement",
								"package": "typescript"
							}
						],
						"name": "ReactEventHandler",
						"qualifiedName": "React.ReactEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "ComponentPropsWithoutRef.onEncryptedCapture"
					}
				},
				{
					"id": 1274,
					"name": "onEnded",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1446,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLUListElement",
								"qualifiedName": "HTMLUListElement",
								"package": "typescript"
							}
						],
						"name": "ReactEventHandler",
						"qualifiedName": "React.ReactEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "ComponentPropsWithoutRef.onEnded"
					}
				},
				{
					"id": 1275,
					"name": "onEndedCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1447,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLUListElement",
								"qualifiedName": "HTMLUListElement",
								"package": "typescript"
							}
						],
						"name": "ReactEventHandler",
						"qualifiedName": "React.ReactEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "ComponentPropsWithoutRef.onEndedCapture"
					}
				},
				{
					"id": 1254,
					"name": "onError",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1420,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLUListElement",
								"qualifiedName": "HTMLUListElement",
								"package": "typescript"
							}
						],
						"name": "ReactEventHandler",
						"qualifiedName": "React.ReactEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "ComponentPropsWithoutRef.onError"
					}
				},
				{
					"id": 1255,
					"name": "onErrorCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1421,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLUListElement",
								"qualifiedName": "HTMLUListElement",
								"package": "typescript"
							}
						],
						"name": "ReactEventHandler",
						"qualifiedName": "React.ReactEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "ComponentPropsWithoutRef.onErrorCapture"
					}
				},
				{
					"id": 1236,
					"name": "onFocus",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1398,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLUListElement",
								"qualifiedName": "HTMLUListElement",
								"package": "typescript"
							}
						],
						"name": "FocusEventHandler",
						"qualifiedName": "React.FocusEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "ComponentPropsWithoutRef.onFocus"
					}
				},
				{
					"id": 1237,
					"name": "onFocusCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1399,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLUListElement",
								"qualifiedName": "HTMLUListElement",
								"package": "typescript"
							}
						],
						"name": "FocusEventHandler",
						"qualifiedName": "React.FocusEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "ComponentPropsWithoutRef.onFocusCapture"
					}
				},
				{
					"id": 1370,
					"name": "onGotPointerCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1550,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLUListElement",
								"qualifiedName": "HTMLUListElement",
								"package": "typescript"
							}
						],
						"name": "PointerEventHandler",
						"qualifiedName": "React.PointerEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "ComponentPropsWithoutRef.onGotPointerCapture"
					}
				},
				{
					"id": 1371,
					"name": "onGotPointerCaptureCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1551,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLUListElement",
								"qualifiedName": "HTMLUListElement",
								"package": "typescript"
							}
						],
						"name": "PointerEventHandler",
						"qualifiedName": "React.PointerEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "ComponentPropsWithoutRef.onGotPointerCaptureCapture"
					}
				},
				{
					"id": 1244,
					"name": "onInput",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1408,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLUListElement",
								"qualifiedName": "HTMLUListElement",
								"package": "typescript"
							}
						],
						"name": "FormEventHandler",
						"qualifiedName": "React.FormEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "ComponentPropsWithoutRef.onInput"
					}
				},
				{
					"id": 1245,
					"name": "onInputCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1409,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLUListElement",
								"qualifiedName": "HTMLUListElement",
								"package": "typescript"
							}
						],
						"name": "FormEventHandler",
						"qualifiedName": "React.FormEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "ComponentPropsWithoutRef.onInputCapture"
					}
				},
				{
					"id": 1250,
					"name": "onInvalid",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1414,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLUListElement",
								"qualifiedName": "HTMLUListElement",
								"package": "typescript"
							}
						],
						"name": "FormEventHandler",
						"qualifiedName": "React.FormEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "ComponentPropsWithoutRef.onInvalid"
					}
				},
				{
					"id": 1251,
					"name": "onInvalidCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1415,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLUListElement",
								"qualifiedName": "HTMLUListElement",
								"package": "typescript"
							}
						],
						"name": "FormEventHandler",
						"qualifiedName": "React.FormEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "ComponentPropsWithoutRef.onInvalidCapture"
					}
				},
				{
					"id": 1256,
					"name": "onKeyDown",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1424,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLUListElement",
								"qualifiedName": "HTMLUListElement",
								"package": "typescript"
							}
						],
						"name": "KeyboardEventHandler",
						"qualifiedName": "React.KeyboardEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "ComponentPropsWithoutRef.onKeyDown"
					}
				},
				{
					"id": 1257,
					"name": "onKeyDownCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1425,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLUListElement",
								"qualifiedName": "HTMLUListElement",
								"package": "typescript"
							}
						],
						"name": "KeyboardEventHandler",
						"qualifiedName": "React.KeyboardEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "ComponentPropsWithoutRef.onKeyDownCapture"
					}
				},
				{
					"id": 1258,
					"name": "onKeyPress",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"summary": [],
						"blockTags": [
							{
								"tag": "@deprecated",
								"content": []
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1427,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLUListElement",
								"qualifiedName": "HTMLUListElement",
								"package": "typescript"
							}
						],
						"name": "KeyboardEventHandler",
						"qualifiedName": "React.KeyboardEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "ComponentPropsWithoutRef.onKeyPress"
					}
				},
				{
					"id": 1259,
					"name": "onKeyPressCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"summary": [],
						"blockTags": [
							{
								"tag": "@deprecated",
								"content": []
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1429,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLUListElement",
								"qualifiedName": "HTMLUListElement",
								"package": "typescript"
							}
						],
						"name": "KeyboardEventHandler",
						"qualifiedName": "React.KeyboardEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "ComponentPropsWithoutRef.onKeyPressCapture"
					}
				},
				{
					"id": 1260,
					"name": "onKeyUp",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1430,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLUListElement",
								"qualifiedName": "HTMLUListElement",
								"package": "typescript"
							}
						],
						"name": "KeyboardEventHandler",
						"qualifiedName": "React.KeyboardEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "ComponentPropsWithoutRef.onKeyUp"
					}
				},
				{
					"id": 1261,
					"name": "onKeyUpCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1431,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLUListElement",
								"qualifiedName": "HTMLUListElement",
								"package": "typescript"
							}
						],
						"name": "KeyboardEventHandler",
						"qualifiedName": "React.KeyboardEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "ComponentPropsWithoutRef.onKeyUpCapture"
					}
				},
				{
					"id": 1252,
					"name": "onLoad",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1418,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLUListElement",
								"qualifiedName": "HTMLUListElement",
								"package": "typescript"
							}
						],
						"name": "ReactEventHandler",
						"qualifiedName": "React.ReactEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "ComponentPropsWithoutRef.onLoad"
					}
				},
				{
					"id": 1253,
					"name": "onLoadCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1419,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLUListElement",
								"qualifiedName": "HTMLUListElement",
								"package": "typescript"
							}
						],
						"name": "ReactEventHandler",
						"qualifiedName": "React.ReactEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "ComponentPropsWithoutRef.onLoadCapture"
					}
				},
				{
					"id": 1280,
					"name": "onLoadStart",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1452,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLUListElement",
								"qualifiedName": "HTMLUListElement",
								"package": "typescript"
							}
						],
						"name": "ReactEventHandler",
						"qualifiedName": "React.ReactEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "ComponentPropsWithoutRef.onLoadStart"
					}
				},
				{
					"id": 1281,
					"name": "onLoadStartCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1453,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLUListElement",
								"qualifiedName": "HTMLUListElement",
								"package": "typescript"
							}
						],
						"name": "ReactEventHandler",
						"qualifiedName": "React.ReactEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "ComponentPropsWithoutRef.onLoadStartCapture"
					}
				},
				{
					"id": 1276,
					"name": "onLoadedData",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1448,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLUListElement",
								"qualifiedName": "HTMLUListElement",
								"package": "typescript"
							}
						],
						"name": "ReactEventHandler",
						"qualifiedName": "React.ReactEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "ComponentPropsWithoutRef.onLoadedData"
					}
				},
				{
					"id": 1277,
					"name": "onLoadedDataCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1449,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLUListElement",
								"qualifiedName": "HTMLUListElement",
								"package": "typescript"
							}
						],
						"name": "ReactEventHandler",
						"qualifiedName": "React.ReactEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "ComponentPropsWithoutRef.onLoadedDataCapture"
					}
				},
				{
					"id": 1278,
					"name": "onLoadedMetadata",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1450,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLUListElement",
								"qualifiedName": "HTMLUListElement",
								"package": "typescript"
							}
						],
						"name": "ReactEventHandler",
						"qualifiedName": "React.ReactEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "ComponentPropsWithoutRef.onLoadedMetadata"
					}
				},
				{
					"id": 1279,
					"name": "onLoadedMetadataCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1451,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLUListElement",
								"qualifiedName": "HTMLUListElement",
								"package": "typescript"
							}
						],
						"name": "ReactEventHandler",
						"qualifiedName": "React.ReactEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "ComponentPropsWithoutRef.onLoadedMetadataCapture"
					}
				},
				{
					"id": 1372,
					"name": "onLostPointerCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1552,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLUListElement",
								"qualifiedName": "HTMLUListElement",
								"package": "typescript"
							}
						],
						"name": "PointerEventHandler",
						"qualifiedName": "React.PointerEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "ComponentPropsWithoutRef.onLostPointerCapture"
					}
				},
				{
					"id": 1373,
					"name": "onLostPointerCaptureCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1553,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLUListElement",
								"qualifiedName": "HTMLUListElement",
								"package": "typescript"
							}
						],
						"name": "PointerEventHandler",
						"qualifiedName": "React.PointerEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "ComponentPropsWithoutRef.onLostPointerCaptureCapture"
					}
				},
				{
					"id": 1332,
					"name": "onMouseDown",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1506,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLUListElement",
								"qualifiedName": "HTMLUListElement",
								"package": "typescript"
							}
						],
						"name": "MouseEventHandler",
						"qualifiedName": "React.MouseEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "ComponentPropsWithoutRef.onMouseDown"
					}
				},
				{
					"id": 1333,
					"name": "onMouseDownCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1507,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLUListElement",
								"qualifiedName": "HTMLUListElement",
								"package": "typescript"
							}
						],
						"name": "MouseEventHandler",
						"qualifiedName": "React.MouseEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "ComponentPropsWithoutRef.onMouseDownCapture"
					}
				},
				{
					"id": 1334,
					"name": "onMouseEnter",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1508,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLUListElement",
								"qualifiedName": "HTMLUListElement",
								"package": "typescript"
							}
						],
						"name": "MouseEventHandler",
						"qualifiedName": "React.MouseEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "ComponentPropsWithoutRef.onMouseEnter"
					}
				},
				{
					"id": 1335,
					"name": "onMouseLeave",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1509,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLUListElement",
								"qualifiedName": "HTMLUListElement",
								"package": "typescript"
							}
						],
						"name": "MouseEventHandler",
						"qualifiedName": "React.MouseEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "ComponentPropsWithoutRef.onMouseLeave"
					}
				},
				{
					"id": 1336,
					"name": "onMouseMove",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1510,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLUListElement",
								"qualifiedName": "HTMLUListElement",
								"package": "typescript"
							}
						],
						"name": "MouseEventHandler",
						"qualifiedName": "React.MouseEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "ComponentPropsWithoutRef.onMouseMove"
					}
				},
				{
					"id": 1337,
					"name": "onMouseMoveCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1511,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLUListElement",
								"qualifiedName": "HTMLUListElement",
								"package": "typescript"
							}
						],
						"name": "MouseEventHandler",
						"qualifiedName": "React.MouseEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "ComponentPropsWithoutRef.onMouseMoveCapture"
					}
				},
				{
					"id": 1338,
					"name": "onMouseOut",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1512,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLUListElement",
								"qualifiedName": "HTMLUListElement",
								"package": "typescript"
							}
						],
						"name": "MouseEventHandler",
						"qualifiedName": "React.MouseEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "ComponentPropsWithoutRef.onMouseOut"
					}
				},
				{
					"id": 1339,
					"name": "onMouseOutCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1513,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLUListElement",
								"qualifiedName": "HTMLUListElement",
								"package": "typescript"
							}
						],
						"name": "MouseEventHandler",
						"qualifiedName": "React.MouseEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "ComponentPropsWithoutRef.onMouseOutCapture"
					}
				},
				{
					"id": 1340,
					"name": "onMouseOver",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1514,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLUListElement",
								"qualifiedName": "HTMLUListElement",
								"package": "typescript"
							}
						],
						"name": "MouseEventHandler",
						"qualifiedName": "React.MouseEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "ComponentPropsWithoutRef.onMouseOver"
					}
				},
				{
					"id": 1341,
					"name": "onMouseOverCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1515,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLUListElement",
								"qualifiedName": "HTMLUListElement",
								"package": "typescript"
							}
						],
						"name": "MouseEventHandler",
						"qualifiedName": "React.MouseEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "ComponentPropsWithoutRef.onMouseOverCapture"
					}
				},
				{
					"id": 1342,
					"name": "onMouseUp",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1516,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLUListElement",
								"qualifiedName": "HTMLUListElement",
								"package": "typescript"
							}
						],
						"name": "MouseEventHandler",
						"qualifiedName": "React.MouseEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "ComponentPropsWithoutRef.onMouseUp"
					}
				},
				{
					"id": 1343,
					"name": "onMouseUpCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1517,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLUListElement",
								"qualifiedName": "HTMLUListElement",
								"package": "typescript"
							}
						],
						"name": "MouseEventHandler",
						"qualifiedName": "React.MouseEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "ComponentPropsWithoutRef.onMouseUpCapture"
					}
				},
				{
					"id": 1228,
					"name": "onPaste",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1386,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLUListElement",
								"qualifiedName": "HTMLUListElement",
								"package": "typescript"
							}
						],
						"name": "ClipboardEventHandler",
						"qualifiedName": "React.ClipboardEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "ComponentPropsWithoutRef.onPaste"
					}
				},
				{
					"id": 1229,
					"name": "onPasteCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1387,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLUListElement",
								"qualifiedName": "HTMLUListElement",
								"package": "typescript"
							}
						],
						"name": "ClipboardEventHandler",
						"qualifiedName": "React.ClipboardEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "ComponentPropsWithoutRef.onPasteCapture"
					}
				},
				{
					"id": 1282,
					"name": "onPause",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1454,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLUListElement",
								"qualifiedName": "HTMLUListElement",
								"package": "typescript"
							}
						],
						"name": "ReactEventHandler",
						"qualifiedName": "React.ReactEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "ComponentPropsWithoutRef.onPause"
					}
				},
				{
					"id": 1283,
					"name": "onPauseCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1455,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLUListElement",
								"qualifiedName": "HTMLUListElement",
								"package": "typescript"
							}
						],
						"name": "ReactEventHandler",
						"qualifiedName": "React.ReactEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "ComponentPropsWithoutRef.onPauseCapture"
					}
				},
				{
					"id": 1284,
					"name": "onPlay",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1456,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLUListElement",
								"qualifiedName": "HTMLUListElement",
								"package": "typescript"
							}
						],
						"name": "ReactEventHandler",
						"qualifiedName": "React.ReactEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "ComponentPropsWithoutRef.onPlay"
					}
				},
				{
					"id": 1285,
					"name": "onPlayCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1457,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLUListElement",
								"qualifiedName": "HTMLUListElement",
								"package": "typescript"
							}
						],
						"name": "ReactEventHandler",
						"qualifiedName": "React.ReactEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "ComponentPropsWithoutRef.onPlayCapture"
					}
				},
				{
					"id": 1286,
					"name": "onPlaying",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1458,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLUListElement",
								"qualifiedName": "HTMLUListElement",
								"package": "typescript"
							}
						],
						"name": "ReactEventHandler",
						"qualifiedName": "React.ReactEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "ComponentPropsWithoutRef.onPlaying"
					}
				},
				{
					"id": 1287,
					"name": "onPlayingCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1459,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLUListElement",
								"qualifiedName": "HTMLUListElement",
								"package": "typescript"
							}
						],
						"name": "ReactEventHandler",
						"qualifiedName": "React.ReactEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "ComponentPropsWithoutRef.onPlayingCapture"
					}
				},
				{
					"id": 1360,
					"name": "onPointerCancel",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1540,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLUListElement",
								"qualifiedName": "HTMLUListElement",
								"package": "typescript"
							}
						],
						"name": "PointerEventHandler",
						"qualifiedName": "React.PointerEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "ComponentPropsWithoutRef.onPointerCancel"
					}
				},
				{
					"id": 1361,
					"name": "onPointerCancelCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1541,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLUListElement",
								"qualifiedName": "HTMLUListElement",
								"package": "typescript"
							}
						],
						"name": "PointerEventHandler",
						"qualifiedName": "React.PointerEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "ComponentPropsWithoutRef.onPointerCancelCapture"
					}
				},
				{
					"id": 1354,
					"name": "onPointerDown",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1534,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLUListElement",
								"qualifiedName": "HTMLUListElement",
								"package": "typescript"
							}
						],
						"name": "PointerEventHandler",
						"qualifiedName": "React.PointerEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "ComponentPropsWithoutRef.onPointerDown"
					}
				},
				{
					"id": 1355,
					"name": "onPointerDownCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1535,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLUListElement",
								"qualifiedName": "HTMLUListElement",
								"package": "typescript"
							}
						],
						"name": "PointerEventHandler",
						"qualifiedName": "React.PointerEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "ComponentPropsWithoutRef.onPointerDownCapture"
					}
				},
				{
					"id": 1362,
					"name": "onPointerEnter",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1542,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLUListElement",
								"qualifiedName": "HTMLUListElement",
								"package": "typescript"
							}
						],
						"name": "PointerEventHandler",
						"qualifiedName": "React.PointerEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "ComponentPropsWithoutRef.onPointerEnter"
					}
				},
				{
					"id": 1363,
					"name": "onPointerEnterCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1543,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLUListElement",
								"qualifiedName": "HTMLUListElement",
								"package": "typescript"
							}
						],
						"name": "PointerEventHandler",
						"qualifiedName": "React.PointerEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "ComponentPropsWithoutRef.onPointerEnterCapture"
					}
				},
				{
					"id": 1364,
					"name": "onPointerLeave",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1544,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLUListElement",
								"qualifiedName": "HTMLUListElement",
								"package": "typescript"
							}
						],
						"name": "PointerEventHandler",
						"qualifiedName": "React.PointerEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "ComponentPropsWithoutRef.onPointerLeave"
					}
				},
				{
					"id": 1365,
					"name": "onPointerLeaveCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1545,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLUListElement",
								"qualifiedName": "HTMLUListElement",
								"package": "typescript"
							}
						],
						"name": "PointerEventHandler",
						"qualifiedName": "React.PointerEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "ComponentPropsWithoutRef.onPointerLeaveCapture"
					}
				},
				{
					"id": 1356,
					"name": "onPointerMove",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1536,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLUListElement",
								"qualifiedName": "HTMLUListElement",
								"package": "typescript"
							}
						],
						"name": "PointerEventHandler",
						"qualifiedName": "React.PointerEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "ComponentPropsWithoutRef.onPointerMove"
					}
				},
				{
					"id": 1357,
					"name": "onPointerMoveCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1537,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLUListElement",
								"qualifiedName": "HTMLUListElement",
								"package": "typescript"
							}
						],
						"name": "PointerEventHandler",
						"qualifiedName": "React.PointerEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "ComponentPropsWithoutRef.onPointerMoveCapture"
					}
				},
				{
					"id": 1368,
					"name": "onPointerOut",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1548,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLUListElement",
								"qualifiedName": "HTMLUListElement",
								"package": "typescript"
							}
						],
						"name": "PointerEventHandler",
						"qualifiedName": "React.PointerEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "ComponentPropsWithoutRef.onPointerOut"
					}
				},
				{
					"id": 1369,
					"name": "onPointerOutCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1549,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLUListElement",
								"qualifiedName": "HTMLUListElement",
								"package": "typescript"
							}
						],
						"name": "PointerEventHandler",
						"qualifiedName": "React.PointerEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "ComponentPropsWithoutRef.onPointerOutCapture"
					}
				},
				{
					"id": 1366,
					"name": "onPointerOver",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1546,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLUListElement",
								"qualifiedName": "HTMLUListElement",
								"package": "typescript"
							}
						],
						"name": "PointerEventHandler",
						"qualifiedName": "React.PointerEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "ComponentPropsWithoutRef.onPointerOver"
					}
				},
				{
					"id": 1367,
					"name": "onPointerOverCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1547,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLUListElement",
								"qualifiedName": "HTMLUListElement",
								"package": "typescript"
							}
						],
						"name": "PointerEventHandler",
						"qualifiedName": "React.PointerEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "ComponentPropsWithoutRef.onPointerOverCapture"
					}
				},
				{
					"id": 1358,
					"name": "onPointerUp",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1538,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLUListElement",
								"qualifiedName": "HTMLUListElement",
								"package": "typescript"
							}
						],
						"name": "PointerEventHandler",
						"qualifiedName": "React.PointerEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "ComponentPropsWithoutRef.onPointerUp"
					}
				},
				{
					"id": 1359,
					"name": "onPointerUpCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1539,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLUListElement",
								"qualifiedName": "HTMLUListElement",
								"package": "typescript"
							}
						],
						"name": "PointerEventHandler",
						"qualifiedName": "React.PointerEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "ComponentPropsWithoutRef.onPointerUpCapture"
					}
				},
				{
					"id": 1288,
					"name": "onProgress",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1460,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLUListElement",
								"qualifiedName": "HTMLUListElement",
								"package": "typescript"
							}
						],
						"name": "ReactEventHandler",
						"qualifiedName": "React.ReactEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "ComponentPropsWithoutRef.onProgress"
					}
				},
				{
					"id": 1289,
					"name": "onProgressCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1461,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLUListElement",
								"qualifiedName": "HTMLUListElement",
								"package": "typescript"
							}
						],
						"name": "ReactEventHandler",
						"qualifiedName": "React.ReactEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "ComponentPropsWithoutRef.onProgressCapture"
					}
				},
				{
					"id": 1290,
					"name": "onRateChange",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1462,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLUListElement",
								"qualifiedName": "HTMLUListElement",
								"package": "typescript"
							}
						],
						"name": "ReactEventHandler",
						"qualifiedName": "React.ReactEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "ComponentPropsWithoutRef.onRateChange"
					}
				},
				{
					"id": 1291,
					"name": "onRateChangeCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1463,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLUListElement",
								"qualifiedName": "HTMLUListElement",
								"package": "typescript"
							}
						],
						"name": "ReactEventHandler",
						"qualifiedName": "React.ReactEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "ComponentPropsWithoutRef.onRateChangeCapture"
					}
				},
				{
					"id": 1246,
					"name": "onReset",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1410,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLUListElement",
								"qualifiedName": "HTMLUListElement",
								"package": "typescript"
							}
						],
						"name": "FormEventHandler",
						"qualifiedName": "React.FormEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "ComponentPropsWithoutRef.onReset"
					}
				},
				{
					"id": 1247,
					"name": "onResetCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1411,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLUListElement",
								"qualifiedName": "HTMLUListElement",
								"package": "typescript"
							}
						],
						"name": "FormEventHandler",
						"qualifiedName": "React.FormEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "ComponentPropsWithoutRef.onResetCapture"
					}
				},
				{
					"id": 1292,
					"name": "onResize",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1464,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLUListElement",
								"qualifiedName": "HTMLUListElement",
								"package": "typescript"
							}
						],
						"name": "ReactEventHandler",
						"qualifiedName": "React.ReactEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "ComponentPropsWithoutRef.onResize"
					}
				},
				{
					"id": 1293,
					"name": "onResizeCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1465,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLUListElement",
								"qualifiedName": "HTMLUListElement",
								"package": "typescript"
							}
						],
						"name": "ReactEventHandler",
						"qualifiedName": "React.ReactEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "ComponentPropsWithoutRef.onResizeCapture"
					}
				},
				{
					"id": 1374,
					"name": "onScroll",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1556,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLUListElement",
								"qualifiedName": "HTMLUListElement",
								"package": "typescript"
							}
						],
						"name": "UIEventHandler",
						"qualifiedName": "React.UIEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "ComponentPropsWithoutRef.onScroll"
					}
				},
				{
					"id": 1375,
					"name": "onScrollCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1557,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLUListElement",
								"qualifiedName": "HTMLUListElement",
								"package": "typescript"
							}
						],
						"name": "UIEventHandler",
						"qualifiedName": "React.UIEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "ComponentPropsWithoutRef.onScrollCapture"
					}
				},
				{
					"id": 1294,
					"name": "onSeeked",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1466,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLUListElement",
								"qualifiedName": "HTMLUListElement",
								"package": "typescript"
							}
						],
						"name": "ReactEventHandler",
						"qualifiedName": "React.ReactEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "ComponentPropsWithoutRef.onSeeked"
					}
				},
				{
					"id": 1295,
					"name": "onSeekedCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1467,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLUListElement",
								"qualifiedName": "HTMLUListElement",
								"package": "typescript"
							}
						],
						"name": "ReactEventHandler",
						"qualifiedName": "React.ReactEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "ComponentPropsWithoutRef.onSeekedCapture"
					}
				},
				{
					"id": 1296,
					"name": "onSeeking",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1468,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLUListElement",
								"qualifiedName": "HTMLUListElement",
								"package": "typescript"
							}
						],
						"name": "ReactEventHandler",
						"qualifiedName": "React.ReactEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "ComponentPropsWithoutRef.onSeeking"
					}
				},
				{
					"id": 1297,
					"name": "onSeekingCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1469,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLUListElement",
								"qualifiedName": "HTMLUListElement",
								"package": "typescript"
							}
						],
						"name": "ReactEventHandler",
						"qualifiedName": "React.ReactEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "ComponentPropsWithoutRef.onSeekingCapture"
					}
				},
				{
					"id": 1344,
					"name": "onSelect",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1520,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLUListElement",
								"qualifiedName": "HTMLUListElement",
								"package": "typescript"
							}
						],
						"name": "ReactEventHandler",
						"qualifiedName": "React.ReactEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "ComponentPropsWithoutRef.onSelect"
					}
				},
				{
					"id": 1345,
					"name": "onSelectCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1521,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLUListElement",
								"qualifiedName": "HTMLUListElement",
								"package": "typescript"
							}
						],
						"name": "ReactEventHandler",
						"qualifiedName": "React.ReactEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "ComponentPropsWithoutRef.onSelectCapture"
					}
				},
				{
					"id": 1298,
					"name": "onStalled",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1470,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLUListElement",
								"qualifiedName": "HTMLUListElement",
								"package": "typescript"
							}
						],
						"name": "ReactEventHandler",
						"qualifiedName": "React.ReactEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "ComponentPropsWithoutRef.onStalled"
					}
				},
				{
					"id": 1299,
					"name": "onStalledCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1471,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLUListElement",
								"qualifiedName": "HTMLUListElement",
								"package": "typescript"
							}
						],
						"name": "ReactEventHandler",
						"qualifiedName": "React.ReactEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "ComponentPropsWithoutRef.onStalledCapture"
					}
				},
				{
					"id": 1248,
					"name": "onSubmit",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1412,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLUListElement",
								"qualifiedName": "HTMLUListElement",
								"package": "typescript"
							}
						],
						"name": "FormEventHandler",
						"qualifiedName": "React.FormEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "ComponentPropsWithoutRef.onSubmit"
					}
				},
				{
					"id": 1249,
					"name": "onSubmitCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1413,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLUListElement",
								"qualifiedName": "HTMLUListElement",
								"package": "typescript"
							}
						],
						"name": "FormEventHandler",
						"qualifiedName": "React.FormEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "ComponentPropsWithoutRef.onSubmitCapture"
					}
				},
				{
					"id": 1300,
					"name": "onSuspend",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1472,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLUListElement",
								"qualifiedName": "HTMLUListElement",
								"package": "typescript"
							}
						],
						"name": "ReactEventHandler",
						"qualifiedName": "React.ReactEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "ComponentPropsWithoutRef.onSuspend"
					}
				},
				{
					"id": 1301,
					"name": "onSuspendCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1473,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLUListElement",
								"qualifiedName": "HTMLUListElement",
								"package": "typescript"
							}
						],
						"name": "ReactEventHandler",
						"qualifiedName": "React.ReactEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "ComponentPropsWithoutRef.onSuspendCapture"
					}
				},
				{
					"id": 1302,
					"name": "onTimeUpdate",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1474,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLUListElement",
								"qualifiedName": "HTMLUListElement",
								"package": "typescript"
							}
						],
						"name": "ReactEventHandler",
						"qualifiedName": "React.ReactEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "ComponentPropsWithoutRef.onTimeUpdate"
					}
				},
				{
					"id": 1303,
					"name": "onTimeUpdateCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1475,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLUListElement",
								"qualifiedName": "HTMLUListElement",
								"package": "typescript"
							}
						],
						"name": "ReactEventHandler",
						"qualifiedName": "React.ReactEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "ComponentPropsWithoutRef.onTimeUpdateCapture"
					}
				},
				{
					"id": 1346,
					"name": "onTouchCancel",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1524,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLUListElement",
								"qualifiedName": "HTMLUListElement",
								"package": "typescript"
							}
						],
						"name": "TouchEventHandler",
						"qualifiedName": "React.TouchEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "ComponentPropsWithoutRef.onTouchCancel"
					}
				},
				{
					"id": 1347,
					"name": "onTouchCancelCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1525,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLUListElement",
								"qualifiedName": "HTMLUListElement",
								"package": "typescript"
							}
						],
						"name": "TouchEventHandler",
						"qualifiedName": "React.TouchEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "ComponentPropsWithoutRef.onTouchCancelCapture"
					}
				},
				{
					"id": 1348,
					"name": "onTouchEnd",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1526,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLUListElement",
								"qualifiedName": "HTMLUListElement",
								"package": "typescript"
							}
						],
						"name": "TouchEventHandler",
						"qualifiedName": "React.TouchEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "ComponentPropsWithoutRef.onTouchEnd"
					}
				},
				{
					"id": 1349,
					"name": "onTouchEndCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1527,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLUListElement",
								"qualifiedName": "HTMLUListElement",
								"package": "typescript"
							}
						],
						"name": "TouchEventHandler",
						"qualifiedName": "React.TouchEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "ComponentPropsWithoutRef.onTouchEndCapture"
					}
				},
				{
					"id": 1350,
					"name": "onTouchMove",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1528,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLUListElement",
								"qualifiedName": "HTMLUListElement",
								"package": "typescript"
							}
						],
						"name": "TouchEventHandler",
						"qualifiedName": "React.TouchEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "ComponentPropsWithoutRef.onTouchMove"
					}
				},
				{
					"id": 1351,
					"name": "onTouchMoveCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1529,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLUListElement",
								"qualifiedName": "HTMLUListElement",
								"package": "typescript"
							}
						],
						"name": "TouchEventHandler",
						"qualifiedName": "React.TouchEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "ComponentPropsWithoutRef.onTouchMoveCapture"
					}
				},
				{
					"id": 1352,
					"name": "onTouchStart",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1530,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLUListElement",
								"qualifiedName": "HTMLUListElement",
								"package": "typescript"
							}
						],
						"name": "TouchEventHandler",
						"qualifiedName": "React.TouchEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "ComponentPropsWithoutRef.onTouchStart"
					}
				},
				{
					"id": 1353,
					"name": "onTouchStartCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1531,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLUListElement",
								"qualifiedName": "HTMLUListElement",
								"package": "typescript"
							}
						],
						"name": "TouchEventHandler",
						"qualifiedName": "React.TouchEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "ComponentPropsWithoutRef.onTouchStartCapture"
					}
				},
				{
					"id": 1384,
					"name": "onTransitionEnd",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1572,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLUListElement",
								"qualifiedName": "HTMLUListElement",
								"package": "typescript"
							}
						],
						"name": "TransitionEventHandler",
						"qualifiedName": "React.TransitionEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "ComponentPropsWithoutRef.onTransitionEnd"
					}
				},
				{
					"id": 1385,
					"name": "onTransitionEndCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1573,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLUListElement",
								"qualifiedName": "HTMLUListElement",
								"package": "typescript"
							}
						],
						"name": "TransitionEventHandler",
						"qualifiedName": "React.TransitionEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "ComponentPropsWithoutRef.onTransitionEndCapture"
					}
				},
				{
					"id": 1304,
					"name": "onVolumeChange",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1476,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLUListElement",
								"qualifiedName": "HTMLUListElement",
								"package": "typescript"
							}
						],
						"name": "ReactEventHandler",
						"qualifiedName": "React.ReactEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "ComponentPropsWithoutRef.onVolumeChange"
					}
				},
				{
					"id": 1305,
					"name": "onVolumeChangeCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1477,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLUListElement",
								"qualifiedName": "HTMLUListElement",
								"package": "typescript"
							}
						],
						"name": "ReactEventHandler",
						"qualifiedName": "React.ReactEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "ComponentPropsWithoutRef.onVolumeChangeCapture"
					}
				},
				{
					"id": 1306,
					"name": "onWaiting",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1478,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLUListElement",
								"qualifiedName": "HTMLUListElement",
								"package": "typescript"
							}
						],
						"name": "ReactEventHandler",
						"qualifiedName": "React.ReactEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "ComponentPropsWithoutRef.onWaiting"
					}
				},
				{
					"id": 1307,
					"name": "onWaitingCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1479,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLUListElement",
								"qualifiedName": "HTMLUListElement",
								"package": "typescript"
							}
						],
						"name": "ReactEventHandler",
						"qualifiedName": "React.ReactEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "ComponentPropsWithoutRef.onWaitingCapture"
					}
				},
				{
					"id": 1376,
					"name": "onWheel",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1560,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLUListElement",
								"qualifiedName": "HTMLUListElement",
								"package": "typescript"
							}
						],
						"name": "WheelEventHandler",
						"qualifiedName": "React.WheelEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "ComponentPropsWithoutRef.onWheel"
					}
				},
				{
					"id": 1377,
					"name": "onWheelCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1561,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLUListElement",
								"qualifiedName": "HTMLUListElement",
								"package": "typescript"
							}
						],
						"name": "WheelEventHandler",
						"qualifiedName": "React.WheelEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "ComponentPropsWithoutRef.onWheelCapture"
					}
				},
				{
					"id": 1150,
					"name": "placeholder",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1866,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "ComponentPropsWithoutRef.placeholder"
					}
				},
				{
					"id": 1139,
					"name": "prefix",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1884,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "ComponentPropsWithoutRef.prefix"
					}
				},
				{
					"id": 1157,
					"name": "property",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1885,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "ComponentPropsWithoutRef.property"
					}
				},
				{
					"id": 1152,
					"name": "radioGroup",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1875,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "ComponentPropsWithoutRef.radioGroup"
					}
				},
				{
					"id": 1158,
					"name": "resource",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1886,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "ComponentPropsWithoutRef.resource"
					}
				},
				{
					"id": 1169,
					"name": "results",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1900,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "ComponentPropsWithoutRef.results"
					}
				},
				{
					"id": 1153,
					"name": "role",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1878,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"name": "AriaRole",
						"qualifiedName": "React.AriaRole",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "ComponentPropsWithoutRef.role"
					}
				},
				{
					"id": 1170,
					"name": "security",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1901,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "ComponentPropsWithoutRef.security"
					}
				},
				{
					"id": 1131,
					"name": "slot",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1867,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "ComponentPropsWithoutRef.slot"
					}
				},
				{
					"id": 1151,
					"name": "spellCheck",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1868,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"name": "Booleanish",
						"qualifiedName": "Booleanish",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "ComponentPropsWithoutRef.spellCheck"
					}
				},
				{
					"id": 1132,
					"name": "style",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1869,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"name": "CSSProperties",
						"qualifiedName": "React.CSSProperties",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "ComponentPropsWithoutRef.style"
					}
				},
				{
					"id": 1147,
					"name": "suppressContentEditableWarning",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1852,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "ComponentPropsWithoutRef.suppressContentEditableWarning"
					}
				},
				{
					"id": 1148,
					"name": "suppressHydrationWarning",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1853,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "ComponentPropsWithoutRef.suppressHydrationWarning"
					}
				},
				{
					"id": 1144,
					"name": "tabIndex",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1870,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "ComponentPropsWithoutRef.tabIndex"
					}
				},
				{
					"id": 1133,
					"name": "title",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1871,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "ComponentPropsWithoutRef.title"
					}
				},
				{
					"id": 1129,
					"name": "translate",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1872,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": "yes"
							},
							{
								"type": "literal",
								"value": "no"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "ComponentPropsWithoutRef.translate"
					}
				},
				{
					"id": 1159,
					"name": "typeof",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1887,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "ComponentPropsWithoutRef.typeof"
					}
				},
				{
					"id": 1171,
					"name": "unselectable",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1902,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": "on"
							},
							{
								"type": "literal",
								"value": "off"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "ComponentPropsWithoutRef.unselectable"
					}
				},
				{
					"id": 1160,
					"name": "vocab",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1888,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "ComponentPropsWithoutRef.vocab"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						1154,
						1135,
						1173,
						1174,
						1175,
						1176,
						1177,
						1178,
						1179,
						1180,
						1181,
						1182,
						1183,
						1184,
						1185,
						1186,
						1187,
						1188,
						1189,
						1190,
						1191,
						1192,
						1193,
						1194,
						1195,
						1196,
						1197,
						1198,
						1199,
						1200,
						1201,
						1202,
						1203,
						1204,
						1205,
						1206,
						1207,
						1208,
						1209,
						1210,
						1211,
						1212,
						1213,
						1214,
						1215,
						1216,
						1217,
						1218,
						1219,
						1220,
						1161,
						1162,
						1163,
						1140,
						1138,
						1128,
						1141,
						1149,
						1221,
						1155,
						1145,
						1146,
						1134,
						1136,
						1130,
						1127,
						1156,
						1142,
						1172,
						1167,
						1164,
						1168,
						1165,
						1166,
						1126,
						1137,
						1143,
						1262,
						1263,
						1380,
						1381,
						1382,
						1383,
						1378,
						1379,
						1308,
						1309,
						1242,
						1243,
						1238,
						1239,
						1264,
						1265,
						1266,
						1267,
						1240,
						1241,
						1310,
						1311,
						1230,
						1231,
						1232,
						1233,
						1234,
						1235,
						1312,
						1313,
						1224,
						1225,
						1226,
						1227,
						1314,
						1315,
						1316,
						1317,
						1318,
						1319,
						1320,
						1321,
						1322,
						1323,
						1324,
						1325,
						1326,
						1327,
						1328,
						1329,
						1330,
						1331,
						1268,
						1269,
						1270,
						1271,
						1272,
						1273,
						1274,
						1275,
						1254,
						1255,
						1236,
						1237,
						1370,
						1371,
						1244,
						1245,
						1250,
						1251,
						1256,
						1257,
						1258,
						1259,
						1260,
						1261,
						1252,
						1253,
						1280,
						1281,
						1276,
						1277,
						1278,
						1279,
						1372,
						1373,
						1332,
						1333,
						1334,
						1335,
						1336,
						1337,
						1338,
						1339,
						1340,
						1341,
						1342,
						1343,
						1228,
						1229,
						1282,
						1283,
						1284,
						1285,
						1286,
						1287,
						1360,
						1361,
						1354,
						1355,
						1362,
						1363,
						1364,
						1365,
						1356,
						1357,
						1368,
						1369,
						1366,
						1367,
						1358,
						1359,
						1288,
						1289,
						1290,
						1291,
						1246,
						1247,
						1292,
						1293,
						1374,
						1375,
						1294,
						1295,
						1296,
						1297,
						1344,
						1345,
						1298,
						1299,
						1248,
						1249,
						1300,
						1301,
						1302,
						1303,
						1346,
						1347,
						1348,
						1349,
						1350,
						1351,
						1352,
						1353,
						1384,
						1385,
						1304,
						1305,
						1306,
						1307,
						1376,
						1377,
						1150,
						1139,
						1157,
						1152,
						1158,
						1169,
						1153,
						1170,
						1131,
						1151,
						1132,
						1147,
						1148,
						1144,
						1133,
						1129,
						1159,
						1171,
						1160
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/core/src/Menu/index.tsx",
					"line": 6,
					"character": 17,
					"url": "https://github.com/dilan-dio4/tulsa/blob/3f22e3f/packages/core/src/Menu/index.tsx#L6"
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"typeArguments": [
						{
							"type": "literal",
							"value": "ul"
						}
					],
					"name": "ComponentPropsWithoutRef",
					"qualifiedName": "React.ComponentPropsWithoutRef",
					"package": "@types/react"
				}
			]
		},
		{
			"id": 336,
			"name": "ISpinner",
			"kind": 256,
			"kindString": "Interface",
			"flags": {},
			"children": [
				{
					"id": 355,
					"name": "accentHeight",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 2538,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "SVGProps.accentHeight"
					}
				},
				{
					"id": 356,
					"name": "accumulate",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 2539,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": "none"
							},
							{
								"type": "literal",
								"value": "sum"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "SVGProps.accumulate"
					}
				},
				{
					"id": 357,
					"name": "additive",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 2540,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": "replace"
							},
							{
								"type": "literal",
								"value": "sum"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "SVGProps.additive"
					}
				},
				{
					"id": 358,
					"name": "alignmentBaseline",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 2541,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": "auto"
							},
							{
								"type": "literal",
								"value": "inherit"
							},
							{
								"type": "literal",
								"value": "alphabetic"
							},
							{
								"type": "literal",
								"value": "hanging"
							},
							{
								"type": "literal",
								"value": "ideographic"
							},
							{
								"type": "literal",
								"value": "middle"
							},
							{
								"type": "literal",
								"value": "baseline"
							},
							{
								"type": "literal",
								"value": "after-edge"
							},
							{
								"type": "literal",
								"value": "before-edge"
							},
							{
								"type": "literal",
								"value": "central"
							},
							{
								"type": "literal",
								"value": "mathematical"
							},
							{
								"type": "literal",
								"value": "text-after-edge"
							},
							{
								"type": "literal",
								"value": "text-before-edge"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "SVGProps.alignmentBaseline"
					}
				},
				{
					"id": 359,
					"name": "allowReorder",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 2543,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": "yes"
							},
							{
								"type": "literal",
								"value": "no"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "SVGProps.allowReorder"
					}
				},
				{
					"id": 360,
					"name": "alphabetic",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 2544,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "SVGProps.alphabetic"
					}
				},
				{
					"id": 361,
					"name": "amplitude",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 2545,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "SVGProps.amplitude"
					}
				},
				{
					"id": 362,
					"name": "arabicForm",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 2546,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": "initial"
							},
							{
								"type": "literal",
								"value": "medial"
							},
							{
								"type": "literal",
								"value": "terminal"
							},
							{
								"type": "literal",
								"value": "isolated"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "SVGProps.arabicForm"
					}
				},
				{
					"id": 597,
					"name": "aria-activedescendant",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Identifies the currently active element when DOM focus is on a composite widget, textbox, group, or application."
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1590,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "SVGProps.aria-activedescendant"
					}
				},
				{
					"id": 598,
					"name": "aria-atomic",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Indicates whether assistive technologies will present all, or only parts of, the changed region based on the change notifications defined by the aria-relevant attribute."
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1592,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"name": "Booleanish",
						"qualifiedName": "Booleanish",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "SVGProps.aria-atomic"
					}
				},
				{
					"id": 599,
					"name": "aria-autocomplete",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Indicates whether inputting text could trigger display of one or more predictions of the user's intended value for an input and specifies how predictions would be\npresented if they are made."
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1597,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": "inline"
							},
							{
								"type": "literal",
								"value": "both"
							},
							{
								"type": "literal",
								"value": "none"
							},
							{
								"type": "literal",
								"value": "list"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "SVGProps.aria-autocomplete"
					}
				},
				{
					"id": 600,
					"name": "aria-busy",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Indicates an element is being modified and that assistive technologies MAY want to wait until the modifications are complete before exposing them to the user."
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1599,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"name": "Booleanish",
						"qualifiedName": "Booleanish",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "SVGProps.aria-busy"
					}
				},
				{
					"id": 601,
					"name": "aria-checked",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Indicates the current \"checked\" state of checkboxes, radio buttons, and other widgets."
							}
						],
						"blockTags": [
							{
								"tag": "@see",
								"content": [
									{
										"kind": "text",
										"text": " - "
									},
									{
										"kind": "text",
										"text": "aria-pressed"
									},
									{
										"kind": "text",
										"text": "\n"
									},
									{
										"kind": "text",
										"text": " - "
									},
									{
										"kind": "text",
										"text": "aria-selected."
									},
									{
										"kind": "text",
										"text": "\n"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1604,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "boolean"
							},
							{
								"type": "literal",
								"value": "mixed"
							},
							{
								"type": "literal",
								"value": "false"
							},
							{
								"type": "literal",
								"value": "true"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "SVGProps.aria-checked"
					}
				},
				{
					"id": 602,
					"name": "aria-colcount",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Defines the total number of columns in a table, grid, or treegrid."
							}
						],
						"blockTags": [
							{
								"tag": "@see",
								"content": [
									{
										"kind": "text",
										"text": "aria-colindex."
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1609,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "SVGProps.aria-colcount"
					}
				},
				{
					"id": 603,
					"name": "aria-colindex",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Defines an element's column index or position with respect to the total number of columns within a table, grid, or treegrid."
							}
						],
						"blockTags": [
							{
								"tag": "@see",
								"content": [
									{
										"kind": "text",
										"text": " - "
									},
									{
										"kind": "text",
										"text": "aria-colcount"
									},
									{
										"kind": "text",
										"text": "\n"
									},
									{
										"kind": "text",
										"text": " - "
									},
									{
										"kind": "text",
										"text": "aria-colspan."
									},
									{
										"kind": "text",
										"text": "\n"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1614,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "SVGProps.aria-colindex"
					}
				},
				{
					"id": 604,
					"name": "aria-colspan",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Defines the number of columns spanned by a cell or gridcell within a table, grid, or treegrid."
							}
						],
						"blockTags": [
							{
								"tag": "@see",
								"content": [
									{
										"kind": "text",
										"text": " - "
									},
									{
										"kind": "text",
										"text": "aria-colindex"
									},
									{
										"kind": "text",
										"text": "\n"
									},
									{
										"kind": "text",
										"text": " - "
									},
									{
										"kind": "text",
										"text": "aria-rowspan."
									},
									{
										"kind": "text",
										"text": "\n"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1619,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "SVGProps.aria-colspan"
					}
				},
				{
					"id": 605,
					"name": "aria-controls",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Identifies the element (or elements) whose contents or presence are controlled by the current element."
							}
						],
						"blockTags": [
							{
								"tag": "@see",
								"content": [
									{
										"kind": "text",
										"text": "aria-owns."
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1624,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "SVGProps.aria-controls"
					}
				},
				{
					"id": 606,
					"name": "aria-current",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Indicates the element that represents the current item within a container or set of related elements."
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1626,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "boolean"
							},
							{
								"type": "literal",
								"value": "location"
							},
							{
								"type": "literal",
								"value": "time"
							},
							{
								"type": "literal",
								"value": "page"
							},
							{
								"type": "literal",
								"value": "false"
							},
							{
								"type": "literal",
								"value": "true"
							},
							{
								"type": "literal",
								"value": "step"
							},
							{
								"type": "literal",
								"value": "date"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "SVGProps.aria-current"
					}
				},
				{
					"id": 607,
					"name": "aria-describedby",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Identifies the element (or elements) that describes the object."
							}
						],
						"blockTags": [
							{
								"tag": "@see",
								"content": [
									{
										"kind": "text",
										"text": "aria-labelledby"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1631,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "SVGProps.aria-describedby"
					}
				},
				{
					"id": 608,
					"name": "aria-details",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Identifies the element that provides a detailed, extended description for the object."
							}
						],
						"blockTags": [
							{
								"tag": "@see",
								"content": [
									{
										"kind": "text",
										"text": "aria-describedby."
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1636,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "SVGProps.aria-details"
					}
				},
				{
					"id": 609,
					"name": "aria-disabled",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Indicates that the element is perceivable but disabled, so it is not editable or otherwise operable."
							}
						],
						"blockTags": [
							{
								"tag": "@see",
								"content": [
									{
										"kind": "text",
										"text": " - "
									},
									{
										"kind": "text",
										"text": "aria-hidden"
									},
									{
										"kind": "text",
										"text": "\n"
									},
									{
										"kind": "text",
										"text": " - "
									},
									{
										"kind": "text",
										"text": "aria-readonly."
									},
									{
										"kind": "text",
										"text": "\n"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1641,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"name": "Booleanish",
						"qualifiedName": "Booleanish",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "SVGProps.aria-disabled"
					}
				},
				{
					"id": 610,
					"name": "aria-dropeffect",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Indicates what functions can be performed when a dragged object is released on the drop target."
							}
						],
						"blockTags": [
							{
								"tag": "@deprecated",
								"content": [
									{
										"kind": "text",
										"text": "in ARIA 1.1"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1646,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": "link"
							},
							{
								"type": "literal",
								"value": "none"
							},
							{
								"type": "literal",
								"value": "copy"
							},
							{
								"type": "literal",
								"value": "move"
							},
							{
								"type": "literal",
								"value": "execute"
							},
							{
								"type": "literal",
								"value": "popup"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "SVGProps.aria-dropeffect"
					}
				},
				{
					"id": 611,
					"name": "aria-errormessage",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Identifies the element that provides an error message for the object."
							}
						],
						"blockTags": [
							{
								"tag": "@see",
								"content": [
									{
										"kind": "text",
										"text": " - "
									},
									{
										"kind": "text",
										"text": "aria-invalid"
									},
									{
										"kind": "text",
										"text": "\n"
									},
									{
										"kind": "text",
										"text": " - "
									},
									{
										"kind": "text",
										"text": "aria-describedby."
									},
									{
										"kind": "text",
										"text": "\n"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1651,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "SVGProps.aria-errormessage"
					}
				},
				{
					"id": 612,
					"name": "aria-expanded",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Indicates whether the element, or another grouping element it controls, is currently expanded or collapsed."
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1653,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"name": "Booleanish",
						"qualifiedName": "Booleanish",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "SVGProps.aria-expanded"
					}
				},
				{
					"id": 613,
					"name": "aria-flowto",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Identifies the next element (or elements) in an alternate reading order of content which, at the user's discretion,\nallows assistive technology to override the general default of reading in document source order."
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1658,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "SVGProps.aria-flowto"
					}
				},
				{
					"id": 614,
					"name": "aria-grabbed",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Indicates an element's \"grabbed\" state in a drag-and-drop operation."
							}
						],
						"blockTags": [
							{
								"tag": "@deprecated",
								"content": [
									{
										"kind": "text",
										"text": "in ARIA 1.1"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1663,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"name": "Booleanish",
						"qualifiedName": "Booleanish",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "SVGProps.aria-grabbed"
					}
				},
				{
					"id": 615,
					"name": "aria-haspopup",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Indicates the availability and type of interactive popup element, such as menu or dialog, that can be triggered by an element."
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1665,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "boolean"
							},
							{
								"type": "literal",
								"value": "grid"
							},
							{
								"type": "literal",
								"value": "dialog"
							},
							{
								"type": "literal",
								"value": "menu"
							},
							{
								"type": "literal",
								"value": "listbox"
							},
							{
								"type": "literal",
								"value": "false"
							},
							{
								"type": "literal",
								"value": "true"
							},
							{
								"type": "literal",
								"value": "tree"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "SVGProps.aria-haspopup"
					}
				},
				{
					"id": 616,
					"name": "aria-hidden",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Indicates whether the element is exposed to an accessibility API."
							}
						],
						"blockTags": [
							{
								"tag": "@see",
								"content": [
									{
										"kind": "text",
										"text": "aria-disabled."
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1670,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"name": "Booleanish",
						"qualifiedName": "Booleanish",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "SVGProps.aria-hidden"
					}
				},
				{
					"id": 617,
					"name": "aria-invalid",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Indicates the entered value does not conform to the format expected by the application."
							}
						],
						"blockTags": [
							{
								"tag": "@see",
								"content": [
									{
										"kind": "text",
										"text": "aria-errormessage."
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1675,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "boolean"
							},
							{
								"type": "literal",
								"value": "false"
							},
							{
								"type": "literal",
								"value": "true"
							},
							{
								"type": "literal",
								"value": "grammar"
							},
							{
								"type": "literal",
								"value": "spelling"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "SVGProps.aria-invalid"
					}
				},
				{
					"id": 618,
					"name": "aria-keyshortcuts",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Indicates keyboard shortcuts that an author has implemented to activate or give focus to an element."
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1677,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "SVGProps.aria-keyshortcuts"
					}
				},
				{
					"id": 619,
					"name": "aria-label",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Defines a string value that labels the current element."
							}
						],
						"blockTags": [
							{
								"tag": "@see",
								"content": [
									{
										"kind": "text",
										"text": "aria-labelledby."
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1682,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "SVGProps.aria-label"
					}
				},
				{
					"id": 620,
					"name": "aria-labelledby",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Identifies the element (or elements) that labels the current element."
							}
						],
						"blockTags": [
							{
								"tag": "@see",
								"content": [
									{
										"kind": "text",
										"text": "aria-describedby."
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1687,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "SVGProps.aria-labelledby"
					}
				},
				{
					"id": 621,
					"name": "aria-level",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Defines the hierarchical level of an element within a structure."
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1689,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "SVGProps.aria-level"
					}
				},
				{
					"id": 622,
					"name": "aria-live",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Indicates that an element will be updated, and describes the types of updates the user agents, assistive technologies, and user can expect from the live region."
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1691,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": "off"
							},
							{
								"type": "literal",
								"value": "assertive"
							},
							{
								"type": "literal",
								"value": "polite"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "SVGProps.aria-live"
					}
				},
				{
					"id": 623,
					"name": "aria-modal",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Indicates whether an element is modal when displayed."
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1693,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"name": "Booleanish",
						"qualifiedName": "Booleanish",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "SVGProps.aria-modal"
					}
				},
				{
					"id": 624,
					"name": "aria-multiline",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Indicates whether a text box accepts multiple lines of input or only a single line."
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1695,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"name": "Booleanish",
						"qualifiedName": "Booleanish",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "SVGProps.aria-multiline"
					}
				},
				{
					"id": 625,
					"name": "aria-multiselectable",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Indicates that the user may select more than one item from the current selectable descendants."
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1697,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"name": "Booleanish",
						"qualifiedName": "Booleanish",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "SVGProps.aria-multiselectable"
					}
				},
				{
					"id": 626,
					"name": "aria-orientation",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Indicates whether the element's orientation is horizontal, vertical, or unknown/ambiguous."
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1699,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": "horizontal"
							},
							{
								"type": "literal",
								"value": "vertical"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "SVGProps.aria-orientation"
					}
				},
				{
					"id": 627,
					"name": "aria-owns",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Identifies an element (or elements) in order to define a visual, functional, or contextual parent/child relationship\nbetween DOM elements where the DOM hierarchy cannot be used to represent the relationship."
							}
						],
						"blockTags": [
							{
								"tag": "@see",
								"content": [
									{
										"kind": "text",
										"text": "aria-controls."
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1705,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "SVGProps.aria-owns"
					}
				},
				{
					"id": 628,
					"name": "aria-placeholder",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Defines a short hint (a word or short phrase) intended to aid the user with data entry when the control has no value.\nA hint could be a sample value or a brief description of the expected format."
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1710,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "SVGProps.aria-placeholder"
					}
				},
				{
					"id": 629,
					"name": "aria-posinset",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Defines an element's number or position in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM."
							}
						],
						"blockTags": [
							{
								"tag": "@see",
								"content": [
									{
										"kind": "text",
										"text": "aria-setsize."
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1715,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "SVGProps.aria-posinset"
					}
				},
				{
					"id": 630,
					"name": "aria-pressed",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Indicates the current \"pressed\" state of toggle buttons."
							}
						],
						"blockTags": [
							{
								"tag": "@see",
								"content": [
									{
										"kind": "text",
										"text": " - "
									},
									{
										"kind": "text",
										"text": "aria-checked"
									},
									{
										"kind": "text",
										"text": "\n"
									},
									{
										"kind": "text",
										"text": " - "
									},
									{
										"kind": "text",
										"text": "aria-selected."
									},
									{
										"kind": "text",
										"text": "\n"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1720,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "boolean"
							},
							{
								"type": "literal",
								"value": "mixed"
							},
							{
								"type": "literal",
								"value": "false"
							},
							{
								"type": "literal",
								"value": "true"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "SVGProps.aria-pressed"
					}
				},
				{
					"id": 631,
					"name": "aria-readonly",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Indicates that the element is not editable, but is otherwise operable."
							}
						],
						"blockTags": [
							{
								"tag": "@see",
								"content": [
									{
										"kind": "text",
										"text": "aria-disabled."
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1725,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"name": "Booleanish",
						"qualifiedName": "Booleanish",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "SVGProps.aria-readonly"
					}
				},
				{
					"id": 632,
					"name": "aria-relevant",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Indicates what notifications the user agent will trigger when the accessibility tree within a live region is modified."
							}
						],
						"blockTags": [
							{
								"tag": "@see",
								"content": [
									{
										"kind": "text",
										"text": "aria-atomic."
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1730,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": "all"
							},
							{
								"type": "literal",
								"value": "text"
							},
							{
								"type": "literal",
								"value": "additions"
							},
							{
								"type": "literal",
								"value": "additions removals"
							},
							{
								"type": "literal",
								"value": "additions text"
							},
							{
								"type": "literal",
								"value": "removals"
							},
							{
								"type": "literal",
								"value": "removals additions"
							},
							{
								"type": "literal",
								"value": "removals text"
							},
							{
								"type": "literal",
								"value": "text additions"
							},
							{
								"type": "literal",
								"value": "text removals"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "SVGProps.aria-relevant"
					}
				},
				{
					"id": 633,
					"name": "aria-required",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Indicates that user input is required on the element before a form may be submitted."
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1732,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"name": "Booleanish",
						"qualifiedName": "Booleanish",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "SVGProps.aria-required"
					}
				},
				{
					"id": 634,
					"name": "aria-roledescription",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Defines a human-readable, author-localized description for the role of an element."
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1734,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "SVGProps.aria-roledescription"
					}
				},
				{
					"id": 635,
					"name": "aria-rowcount",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Defines the total number of rows in a table, grid, or treegrid."
							}
						],
						"blockTags": [
							{
								"tag": "@see",
								"content": [
									{
										"kind": "text",
										"text": "aria-rowindex."
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1739,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "SVGProps.aria-rowcount"
					}
				},
				{
					"id": 636,
					"name": "aria-rowindex",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Defines an element's row index or position with respect to the total number of rows within a table, grid, or treegrid."
							}
						],
						"blockTags": [
							{
								"tag": "@see",
								"content": [
									{
										"kind": "text",
										"text": " - "
									},
									{
										"kind": "text",
										"text": "aria-rowcount"
									},
									{
										"kind": "text",
										"text": "\n"
									},
									{
										"kind": "text",
										"text": " - "
									},
									{
										"kind": "text",
										"text": "aria-rowspan."
									},
									{
										"kind": "text",
										"text": "\n"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1744,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "SVGProps.aria-rowindex"
					}
				},
				{
					"id": 637,
					"name": "aria-rowspan",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Defines the number of rows spanned by a cell or gridcell within a table, grid, or treegrid."
							}
						],
						"blockTags": [
							{
								"tag": "@see",
								"content": [
									{
										"kind": "text",
										"text": " - "
									},
									{
										"kind": "text",
										"text": "aria-rowindex"
									},
									{
										"kind": "text",
										"text": "\n"
									},
									{
										"kind": "text",
										"text": " - "
									},
									{
										"kind": "text",
										"text": "aria-colspan."
									},
									{
										"kind": "text",
										"text": "\n"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1749,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "SVGProps.aria-rowspan"
					}
				},
				{
					"id": 638,
					"name": "aria-selected",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Indicates the current \"selected\" state of various widgets."
							}
						],
						"blockTags": [
							{
								"tag": "@see",
								"content": [
									{
										"kind": "text",
										"text": " - "
									},
									{
										"kind": "text",
										"text": "aria-checked"
									},
									{
										"kind": "text",
										"text": "\n"
									},
									{
										"kind": "text",
										"text": " - "
									},
									{
										"kind": "text",
										"text": "aria-pressed."
									},
									{
										"kind": "text",
										"text": "\n"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1754,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"name": "Booleanish",
						"qualifiedName": "Booleanish",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "SVGProps.aria-selected"
					}
				},
				{
					"id": 639,
					"name": "aria-setsize",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Defines the number of items in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM."
							}
						],
						"blockTags": [
							{
								"tag": "@see",
								"content": [
									{
										"kind": "text",
										"text": "aria-posinset."
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1759,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "SVGProps.aria-setsize"
					}
				},
				{
					"id": 640,
					"name": "aria-sort",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Indicates if items in a table or grid are sorted in ascending or descending order."
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1761,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": "none"
							},
							{
								"type": "literal",
								"value": "ascending"
							},
							{
								"type": "literal",
								"value": "descending"
							},
							{
								"type": "literal",
								"value": "other"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "SVGProps.aria-sort"
					}
				},
				{
					"id": 641,
					"name": "aria-valuemax",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Defines the maximum allowed value for a range widget."
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1763,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "SVGProps.aria-valuemax"
					}
				},
				{
					"id": 642,
					"name": "aria-valuemin",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Defines the minimum allowed value for a range widget."
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1765,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "SVGProps.aria-valuemin"
					}
				},
				{
					"id": 643,
					"name": "aria-valuenow",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Defines the current value for a range widget."
							}
						],
						"blockTags": [
							{
								"tag": "@see",
								"content": [
									{
										"kind": "text",
										"text": "aria-valuetext."
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1770,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "SVGProps.aria-valuenow"
					}
				},
				{
					"id": 644,
					"name": "aria-valuetext",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Defines the human readable text alternative of aria-valuenow for a range widget."
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1772,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "SVGProps.aria-valuetext"
					}
				},
				{
					"id": 363,
					"name": "ascent",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 2547,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "SVGProps.ascent"
					}
				},
				{
					"id": 364,
					"name": "attributeName",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 2548,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "SVGProps.attributeName"
					}
				},
				{
					"id": 365,
					"name": "attributeType",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 2549,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "SVGProps.attributeType"
					}
				},
				{
					"id": 366,
					"name": "autoReverse",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 2550,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"name": "Booleanish",
						"qualifiedName": "Booleanish",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "SVGProps.autoReverse"
					}
				},
				{
					"id": 367,
					"name": "azimuth",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 2551,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "SVGProps.azimuth"
					}
				},
				{
					"id": 368,
					"name": "baseFrequency",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 2552,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "SVGProps.baseFrequency"
					}
				},
				{
					"id": 370,
					"name": "baseProfile",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 2554,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "SVGProps.baseProfile"
					}
				},
				{
					"id": 369,
					"name": "baselineShift",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 2553,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "SVGProps.baselineShift"
					}
				},
				{
					"id": 371,
					"name": "bbox",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 2555,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "SVGProps.bbox"
					}
				},
				{
					"id": 372,
					"name": "begin",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 2556,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "SVGProps.begin"
					}
				},
				{
					"id": 373,
					"name": "bias",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 2557,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "SVGProps.bias"
					}
				},
				{
					"id": 374,
					"name": "by",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 2558,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "SVGProps.by"
					}
				},
				{
					"id": 375,
					"name": "calcMode",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 2559,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "SVGProps.calcMode"
					}
				},
				{
					"id": 376,
					"name": "capHeight",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 2560,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "SVGProps.capHeight"
					}
				},
				{
					"id": 645,
					"name": "children",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1376,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"name": "ReactNode",
						"qualifiedName": "React.ReactNode",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "SVGProps.children"
					}
				},
				{
					"id": 338,
					"name": "className",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 2517,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "SVGProps.className"
					}
				},
				{
					"id": 377,
					"name": "clip",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 2561,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "SVGProps.clip"
					}
				},
				{
					"id": 378,
					"name": "clipPath",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 2562,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "SVGProps.clipPath"
					}
				},
				{
					"id": 379,
					"name": "clipPathUnits",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 2563,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "SVGProps.clipPathUnits"
					}
				},
				{
					"id": 380,
					"name": "clipRule",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 2564,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "SVGProps.clipRule"
					}
				},
				{
					"id": 339,
					"name": "color",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 2518,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "SVGProps.color"
					}
				},
				{
					"id": 381,
					"name": "colorInterpolation",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 2565,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "SVGProps.colorInterpolation"
					}
				},
				{
					"id": 382,
					"name": "colorInterpolationFilters",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 2566,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": "auto"
							},
							{
								"type": "literal",
								"value": "inherit"
							},
							{
								"type": "literal",
								"value": "linearRGB"
							},
							{
								"type": "literal",
								"value": "sRGB"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "SVGProps.colorInterpolationFilters"
					}
				},
				{
					"id": 383,
					"name": "colorProfile",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 2567,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "SVGProps.colorProfile"
					}
				},
				{
					"id": 384,
					"name": "colorRendering",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 2568,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "SVGProps.colorRendering"
					}
				},
				{
					"id": 385,
					"name": "contentScriptType",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 2569,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "SVGProps.contentScriptType"
					}
				},
				{
					"id": 386,
					"name": "contentStyleType",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 2570,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "SVGProps.contentStyleType"
					}
				},
				{
					"id": 354,
					"name": "crossOrigin",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 2535,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": ""
							},
							{
								"type": "literal",
								"value": "anonymous"
							},
							{
								"type": "literal",
								"value": "use-credentials"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "SVGProps.crossOrigin"
					}
				},
				{
					"id": 387,
					"name": "cursor",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 2571,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "SVGProps.cursor"
					}
				},
				{
					"id": 388,
					"name": "cx",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 2572,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "SVGProps.cx"
					}
				},
				{
					"id": 389,
					"name": "cy",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 2573,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "SVGProps.cy"
					}
				},
				{
					"id": 390,
					"name": "d",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 2574,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "SVGProps.d"
					}
				},
				{
					"id": 646,
					"name": "dangerouslySetInnerHTML",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1377,
							"character": 8
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 647,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 648,
									"name": "__html",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isExternal": true
									},
									"sources": [
										{
											"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
											"line": 1378,
											"character": 12
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										648
									]
								}
							],
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
									"line": 1377,
									"character": 34
								}
							]
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "SVGProps.dangerouslySetInnerHTML"
					}
				},
				{
					"id": 391,
					"name": "decelerate",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 2575,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "SVGProps.decelerate"
					}
				},
				{
					"id": 392,
					"name": "descent",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 2576,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "SVGProps.descent"
					}
				},
				{
					"id": 393,
					"name": "diffuseConstant",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 2577,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "SVGProps.diffuseConstant"
					}
				},
				{
					"id": 394,
					"name": "direction",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 2578,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "SVGProps.direction"
					}
				},
				{
					"id": 395,
					"name": "display",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 2579,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "SVGProps.display"
					}
				},
				{
					"id": 396,
					"name": "divisor",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 2580,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "SVGProps.divisor"
					}
				},
				{
					"id": 397,
					"name": "dominantBaseline",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 2581,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "SVGProps.dominantBaseline"
					}
				},
				{
					"id": 398,
					"name": "dur",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 2582,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "SVGProps.dur"
					}
				},
				{
					"id": 399,
					"name": "dx",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 2583,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "SVGProps.dx"
					}
				},
				{
					"id": 400,
					"name": "dy",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 2584,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "SVGProps.dy"
					}
				},
				{
					"id": 401,
					"name": "edgeMode",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 2585,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "SVGProps.edgeMode"
					}
				},
				{
					"id": 402,
					"name": "elevation",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 2586,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "SVGProps.elevation"
					}
				},
				{
					"id": 403,
					"name": "enableBackground",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 2587,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "SVGProps.enableBackground"
					}
				},
				{
					"id": 404,
					"name": "end",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 2588,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "SVGProps.end"
					}
				},
				{
					"id": 405,
					"name": "exponent",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 2589,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "SVGProps.exponent"
					}
				},
				{
					"id": 406,
					"name": "externalResourcesRequired",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 2590,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"name": "Booleanish",
						"qualifiedName": "Booleanish",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "SVGProps.externalResourcesRequired"
					}
				},
				{
					"id": 407,
					"name": "fill",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 2591,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "SVGProps.fill"
					}
				},
				{
					"id": 408,
					"name": "fillOpacity",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 2592,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "SVGProps.fillOpacity"
					}
				},
				{
					"id": 409,
					"name": "fillRule",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 2593,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": "evenodd"
							},
							{
								"type": "literal",
								"value": "nonzero"
							},
							{
								"type": "literal",
								"value": "inherit"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "SVGProps.fillRule"
					}
				},
				{
					"id": 410,
					"name": "filter",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 2594,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "SVGProps.filter"
					}
				},
				{
					"id": 411,
					"name": "filterRes",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 2595,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "SVGProps.filterRes"
					}
				},
				{
					"id": 412,
					"name": "filterUnits",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 2596,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "SVGProps.filterUnits"
					}
				},
				{
					"id": 413,
					"name": "floodColor",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 2597,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "SVGProps.floodColor"
					}
				},
				{
					"id": 414,
					"name": "floodOpacity",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 2598,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "SVGProps.floodOpacity"
					}
				},
				{
					"id": 415,
					"name": "focusable",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 2599,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": "auto"
							},
							{
								"type": "reference",
								"name": "Booleanish",
								"qualifiedName": "Booleanish",
								"package": "@types/react"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "SVGProps.focusable"
					}
				},
				{
					"id": 416,
					"name": "fontFamily",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 2600,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "SVGProps.fontFamily"
					}
				},
				{
					"id": 417,
					"name": "fontSize",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 2601,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "SVGProps.fontSize"
					}
				},
				{
					"id": 418,
					"name": "fontSizeAdjust",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 2602,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "SVGProps.fontSizeAdjust"
					}
				},
				{
					"id": 419,
					"name": "fontStretch",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 2603,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "SVGProps.fontStretch"
					}
				},
				{
					"id": 420,
					"name": "fontStyle",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 2604,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "SVGProps.fontStyle"
					}
				},
				{
					"id": 421,
					"name": "fontVariant",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 2605,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "SVGProps.fontVariant"
					}
				},
				{
					"id": 422,
					"name": "fontWeight",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 2606,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "SVGProps.fontWeight"
					}
				},
				{
					"id": 423,
					"name": "format",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 2607,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "SVGProps.format"
					}
				},
				{
					"id": 424,
					"name": "fr",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 2608,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "SVGProps.fr"
					}
				},
				{
					"id": 425,
					"name": "from",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 2609,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "SVGProps.from"
					}
				},
				{
					"id": 426,
					"name": "fx",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 2610,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "SVGProps.fx"
					}
				},
				{
					"id": 427,
					"name": "fy",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 2611,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "SVGProps.fy"
					}
				},
				{
					"id": 428,
					"name": "g1",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 2612,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "SVGProps.g1"
					}
				},
				{
					"id": 429,
					"name": "g2",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 2613,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "SVGProps.g2"
					}
				},
				{
					"id": 430,
					"name": "glyphName",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 2614,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "SVGProps.glyphName"
					}
				},
				{
					"id": 431,
					"name": "glyphOrientationHorizontal",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 2615,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "SVGProps.glyphOrientationHorizontal"
					}
				},
				{
					"id": 432,
					"name": "glyphOrientationVertical",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 2616,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "SVGProps.glyphOrientationVertical"
					}
				},
				{
					"id": 433,
					"name": "glyphRef",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 2617,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "SVGProps.glyphRef"
					}
				},
				{
					"id": 434,
					"name": "gradientTransform",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 2618,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "SVGProps.gradientTransform"
					}
				},
				{
					"id": 435,
					"name": "gradientUnits",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 2619,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "SVGProps.gradientUnits"
					}
				},
				{
					"id": 436,
					"name": "hanging",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 2620,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "SVGProps.hanging"
					}
				},
				{
					"id": 340,
					"name": "height",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 2519,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "SVGProps.height"
					}
				},
				{
					"id": 437,
					"name": "horizAdvX",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 2621,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "SVGProps.horizAdvX"
					}
				},
				{
					"id": 438,
					"name": "horizOriginX",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 2622,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "SVGProps.horizOriginX"
					}
				},
				{
					"id": 439,
					"name": "href",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 2623,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "SVGProps.href"
					}
				},
				{
					"id": 341,
					"name": "id",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 2520,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "SVGProps.id"
					}
				},
				{
					"id": 440,
					"name": "ideographic",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 2624,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "SVGProps.ideographic"
					}
				},
				{
					"id": 441,
					"name": "imageRendering",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 2625,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "SVGProps.imageRendering"
					}
				},
				{
					"id": 443,
					"name": "in",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 2627,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "SVGProps.in"
					}
				},
				{
					"id": 442,
					"name": "in2",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 2626,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "SVGProps.in2"
					}
				},
				{
					"id": 444,
					"name": "intercept",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 2628,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "SVGProps.intercept"
					}
				},
				{
					"id": 449,
					"name": "k",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 2633,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "SVGProps.k"
					}
				},
				{
					"id": 445,
					"name": "k1",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 2629,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "SVGProps.k1"
					}
				},
				{
					"id": 446,
					"name": "k2",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 2630,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "SVGProps.k2"
					}
				},
				{
					"id": 447,
					"name": "k3",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 2631,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "SVGProps.k3"
					}
				},
				{
					"id": 448,
					"name": "k4",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 2632,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "SVGProps.k4"
					}
				},
				{
					"id": 450,
					"name": "kernelMatrix",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 2634,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "SVGProps.kernelMatrix"
					}
				},
				{
					"id": 451,
					"name": "kernelUnitLength",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 2635,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "SVGProps.kernelUnitLength"
					}
				},
				{
					"id": 452,
					"name": "kerning",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 2636,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "SVGProps.kerning"
					}
				},
				{
					"id": 812,
					"name": "key",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 132,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"name": "Key",
						"qualifiedName": "React.Key",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "SVGProps.key"
					}
				},
				{
					"id": 453,
					"name": "keyPoints",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 2637,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "SVGProps.keyPoints"
					}
				},
				{
					"id": 454,
					"name": "keySplines",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 2638,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "SVGProps.keySplines"
					}
				},
				{
					"id": 455,
					"name": "keyTimes",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 2639,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "SVGProps.keyTimes"
					}
				},
				{
					"id": 342,
					"name": "lang",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 2521,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "SVGProps.lang"
					}
				},
				{
					"id": 456,
					"name": "lengthAdjust",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 2640,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "SVGProps.lengthAdjust"
					}
				},
				{
					"id": 457,
					"name": "letterSpacing",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 2641,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "SVGProps.letterSpacing"
					}
				},
				{
					"id": 458,
					"name": "lightingColor",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 2642,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "SVGProps.lightingColor"
					}
				},
				{
					"id": 459,
					"name": "limitingConeAngle",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 2643,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "SVGProps.limitingConeAngle"
					}
				},
				{
					"id": 460,
					"name": "local",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 2644,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "SVGProps.local"
					}
				},
				{
					"id": 461,
					"name": "markerEnd",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 2645,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "SVGProps.markerEnd"
					}
				},
				{
					"id": 462,
					"name": "markerHeight",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 2646,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "SVGProps.markerHeight"
					}
				},
				{
					"id": 463,
					"name": "markerMid",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 2647,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "SVGProps.markerMid"
					}
				},
				{
					"id": 464,
					"name": "markerStart",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 2648,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "SVGProps.markerStart"
					}
				},
				{
					"id": 465,
					"name": "markerUnits",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 2649,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "SVGProps.markerUnits"
					}
				},
				{
					"id": 466,
					"name": "markerWidth",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 2650,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "SVGProps.markerWidth"
					}
				},
				{
					"id": 467,
					"name": "mask",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 2651,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "SVGProps.mask"
					}
				},
				{
					"id": 468,
					"name": "maskContentUnits",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 2652,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "SVGProps.maskContentUnits"
					}
				},
				{
					"id": 469,
					"name": "maskUnits",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 2653,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "SVGProps.maskUnits"
					}
				},
				{
					"id": 470,
					"name": "mathematical",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 2654,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "SVGProps.mathematical"
					}
				},
				{
					"id": 343,
					"name": "max",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 2522,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "SVGProps.max"
					}
				},
				{
					"id": 344,
					"name": "media",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 2523,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "SVGProps.media"
					}
				},
				{
					"id": 345,
					"name": "method",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 2524,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "SVGProps.method"
					}
				},
				{
					"id": 346,
					"name": "min",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 2525,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "SVGProps.min"
					}
				},
				{
					"id": 471,
					"name": "mode",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 2655,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "SVGProps.mode"
					}
				},
				{
					"id": 347,
					"name": "name",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 2526,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "SVGProps.name"
					}
				},
				{
					"id": 472,
					"name": "numOctaves",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 2656,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "SVGProps.numOctaves"
					}
				},
				{
					"id": 473,
					"name": "offset",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 2657,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "SVGProps.offset"
					}
				},
				{
					"id": 687,
					"name": "onAbort",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1434,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "SVGSVGElement",
								"qualifiedName": "SVGSVGElement",
								"package": "typescript"
							}
						],
						"name": "ReactEventHandler",
						"qualifiedName": "React.ReactEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "SVGProps.onAbort"
					}
				},
				{
					"id": 688,
					"name": "onAbortCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1435,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "SVGSVGElement",
								"qualifiedName": "SVGSVGElement",
								"package": "typescript"
							}
						],
						"name": "ReactEventHandler",
						"qualifiedName": "React.ReactEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "SVGProps.onAbortCapture"
					}
				},
				{
					"id": 805,
					"name": "onAnimationEnd",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1566,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "SVGSVGElement",
								"qualifiedName": "SVGSVGElement",
								"package": "typescript"
							}
						],
						"name": "AnimationEventHandler",
						"qualifiedName": "React.AnimationEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "SVGProps.onAnimationEnd"
					}
				},
				{
					"id": 806,
					"name": "onAnimationEndCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1567,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "SVGSVGElement",
								"qualifiedName": "SVGSVGElement",
								"package": "typescript"
							}
						],
						"name": "AnimationEventHandler",
						"qualifiedName": "React.AnimationEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "SVGProps.onAnimationEndCapture"
					}
				},
				{
					"id": 807,
					"name": "onAnimationIteration",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1568,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "SVGSVGElement",
								"qualifiedName": "SVGSVGElement",
								"package": "typescript"
							}
						],
						"name": "AnimationEventHandler",
						"qualifiedName": "React.AnimationEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "SVGProps.onAnimationIteration"
					}
				},
				{
					"id": 808,
					"name": "onAnimationIterationCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1569,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "SVGSVGElement",
								"qualifiedName": "SVGSVGElement",
								"package": "typescript"
							}
						],
						"name": "AnimationEventHandler",
						"qualifiedName": "React.AnimationEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "SVGProps.onAnimationIterationCapture"
					}
				},
				{
					"id": 803,
					"name": "onAnimationStart",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1564,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "SVGSVGElement",
								"qualifiedName": "SVGSVGElement",
								"package": "typescript"
							}
						],
						"name": "AnimationEventHandler",
						"qualifiedName": "React.AnimationEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "SVGProps.onAnimationStart"
					}
				},
				{
					"id": 804,
					"name": "onAnimationStartCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1565,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "SVGSVGElement",
								"qualifiedName": "SVGSVGElement",
								"package": "typescript"
							}
						],
						"name": "AnimationEventHandler",
						"qualifiedName": "React.AnimationEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "SVGProps.onAnimationStartCapture"
					}
				},
				{
					"id": 733,
					"name": "onAuxClick",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1482,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "SVGSVGElement",
								"qualifiedName": "SVGSVGElement",
								"package": "typescript"
							}
						],
						"name": "MouseEventHandler",
						"qualifiedName": "React.MouseEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "SVGProps.onAuxClick"
					}
				},
				{
					"id": 734,
					"name": "onAuxClickCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1483,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "SVGSVGElement",
								"qualifiedName": "SVGSVGElement",
								"package": "typescript"
							}
						],
						"name": "MouseEventHandler",
						"qualifiedName": "React.MouseEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "SVGProps.onAuxClickCapture"
					}
				},
				{
					"id": 667,
					"name": "onBeforeInput",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1406,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "SVGSVGElement",
								"qualifiedName": "SVGSVGElement",
								"package": "typescript"
							}
						],
						"name": "FormEventHandler",
						"qualifiedName": "React.FormEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "SVGProps.onBeforeInput"
					}
				},
				{
					"id": 668,
					"name": "onBeforeInputCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1407,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "SVGSVGElement",
								"qualifiedName": "SVGSVGElement",
								"package": "typescript"
							}
						],
						"name": "FormEventHandler",
						"qualifiedName": "React.FormEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "SVGProps.onBeforeInputCapture"
					}
				},
				{
					"id": 663,
					"name": "onBlur",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1400,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "SVGSVGElement",
								"qualifiedName": "SVGSVGElement",
								"package": "typescript"
							}
						],
						"name": "FocusEventHandler",
						"qualifiedName": "React.FocusEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "SVGProps.onBlur"
					}
				},
				{
					"id": 664,
					"name": "onBlurCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1401,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "SVGSVGElement",
								"qualifiedName": "SVGSVGElement",
								"package": "typescript"
							}
						],
						"name": "FocusEventHandler",
						"qualifiedName": "React.FocusEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "SVGProps.onBlurCapture"
					}
				},
				{
					"id": 689,
					"name": "onCanPlay",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1436,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "SVGSVGElement",
								"qualifiedName": "SVGSVGElement",
								"package": "typescript"
							}
						],
						"name": "ReactEventHandler",
						"qualifiedName": "React.ReactEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "SVGProps.onCanPlay"
					}
				},
				{
					"id": 690,
					"name": "onCanPlayCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1437,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "SVGSVGElement",
								"qualifiedName": "SVGSVGElement",
								"package": "typescript"
							}
						],
						"name": "ReactEventHandler",
						"qualifiedName": "React.ReactEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "SVGProps.onCanPlayCapture"
					}
				},
				{
					"id": 691,
					"name": "onCanPlayThrough",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1438,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "SVGSVGElement",
								"qualifiedName": "SVGSVGElement",
								"package": "typescript"
							}
						],
						"name": "ReactEventHandler",
						"qualifiedName": "React.ReactEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "SVGProps.onCanPlayThrough"
					}
				},
				{
					"id": 692,
					"name": "onCanPlayThroughCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1439,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "SVGSVGElement",
								"qualifiedName": "SVGSVGElement",
								"package": "typescript"
							}
						],
						"name": "ReactEventHandler",
						"qualifiedName": "React.ReactEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "SVGProps.onCanPlayThroughCapture"
					}
				},
				{
					"id": 665,
					"name": "onChange",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1404,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "SVGSVGElement",
								"qualifiedName": "SVGSVGElement",
								"package": "typescript"
							}
						],
						"name": "FormEventHandler",
						"qualifiedName": "React.FormEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "SVGProps.onChange"
					}
				},
				{
					"id": 666,
					"name": "onChangeCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1405,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "SVGSVGElement",
								"qualifiedName": "SVGSVGElement",
								"package": "typescript"
							}
						],
						"name": "FormEventHandler",
						"qualifiedName": "React.FormEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "SVGProps.onChangeCapture"
					}
				},
				{
					"id": 735,
					"name": "onClick",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1484,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "SVGSVGElement",
								"qualifiedName": "SVGSVGElement",
								"package": "typescript"
							}
						],
						"name": "MouseEventHandler",
						"qualifiedName": "React.MouseEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "SVGProps.onClick"
					}
				},
				{
					"id": 736,
					"name": "onClickCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1485,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "SVGSVGElement",
								"qualifiedName": "SVGSVGElement",
								"package": "typescript"
							}
						],
						"name": "MouseEventHandler",
						"qualifiedName": "React.MouseEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "SVGProps.onClickCapture"
					}
				},
				{
					"id": 655,
					"name": "onCompositionEnd",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1390,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "SVGSVGElement",
								"qualifiedName": "SVGSVGElement",
								"package": "typescript"
							}
						],
						"name": "CompositionEventHandler",
						"qualifiedName": "React.CompositionEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "SVGProps.onCompositionEnd"
					}
				},
				{
					"id": 656,
					"name": "onCompositionEndCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1391,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "SVGSVGElement",
								"qualifiedName": "SVGSVGElement",
								"package": "typescript"
							}
						],
						"name": "CompositionEventHandler",
						"qualifiedName": "React.CompositionEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "SVGProps.onCompositionEndCapture"
					}
				},
				{
					"id": 657,
					"name": "onCompositionStart",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1392,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "SVGSVGElement",
								"qualifiedName": "SVGSVGElement",
								"package": "typescript"
							}
						],
						"name": "CompositionEventHandler",
						"qualifiedName": "React.CompositionEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "SVGProps.onCompositionStart"
					}
				},
				{
					"id": 658,
					"name": "onCompositionStartCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1393,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "SVGSVGElement",
								"qualifiedName": "SVGSVGElement",
								"package": "typescript"
							}
						],
						"name": "CompositionEventHandler",
						"qualifiedName": "React.CompositionEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "SVGProps.onCompositionStartCapture"
					}
				},
				{
					"id": 659,
					"name": "onCompositionUpdate",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1394,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "SVGSVGElement",
								"qualifiedName": "SVGSVGElement",
								"package": "typescript"
							}
						],
						"name": "CompositionEventHandler",
						"qualifiedName": "React.CompositionEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "SVGProps.onCompositionUpdate"
					}
				},
				{
					"id": 660,
					"name": "onCompositionUpdateCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1395,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "SVGSVGElement",
								"qualifiedName": "SVGSVGElement",
								"package": "typescript"
							}
						],
						"name": "CompositionEventHandler",
						"qualifiedName": "React.CompositionEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "SVGProps.onCompositionUpdateCapture"
					}
				},
				{
					"id": 737,
					"name": "onContextMenu",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1486,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "SVGSVGElement",
								"qualifiedName": "SVGSVGElement",
								"package": "typescript"
							}
						],
						"name": "MouseEventHandler",
						"qualifiedName": "React.MouseEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "SVGProps.onContextMenu"
					}
				},
				{
					"id": 738,
					"name": "onContextMenuCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1487,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "SVGSVGElement",
								"qualifiedName": "SVGSVGElement",
								"package": "typescript"
							}
						],
						"name": "MouseEventHandler",
						"qualifiedName": "React.MouseEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "SVGProps.onContextMenuCapture"
					}
				},
				{
					"id": 649,
					"name": "onCopy",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1382,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "SVGSVGElement",
								"qualifiedName": "SVGSVGElement",
								"package": "typescript"
							}
						],
						"name": "ClipboardEventHandler",
						"qualifiedName": "React.ClipboardEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "SVGProps.onCopy"
					}
				},
				{
					"id": 650,
					"name": "onCopyCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1383,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "SVGSVGElement",
								"qualifiedName": "SVGSVGElement",
								"package": "typescript"
							}
						],
						"name": "ClipboardEventHandler",
						"qualifiedName": "React.ClipboardEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "SVGProps.onCopyCapture"
					}
				},
				{
					"id": 651,
					"name": "onCut",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1384,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "SVGSVGElement",
								"qualifiedName": "SVGSVGElement",
								"package": "typescript"
							}
						],
						"name": "ClipboardEventHandler",
						"qualifiedName": "React.ClipboardEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "SVGProps.onCut"
					}
				},
				{
					"id": 652,
					"name": "onCutCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1385,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "SVGSVGElement",
								"qualifiedName": "SVGSVGElement",
								"package": "typescript"
							}
						],
						"name": "ClipboardEventHandler",
						"qualifiedName": "React.ClipboardEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "SVGProps.onCutCapture"
					}
				},
				{
					"id": 739,
					"name": "onDoubleClick",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1488,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "SVGSVGElement",
								"qualifiedName": "SVGSVGElement",
								"package": "typescript"
							}
						],
						"name": "MouseEventHandler",
						"qualifiedName": "React.MouseEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "SVGProps.onDoubleClick"
					}
				},
				{
					"id": 740,
					"name": "onDoubleClickCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1489,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "SVGSVGElement",
								"qualifiedName": "SVGSVGElement",
								"package": "typescript"
							}
						],
						"name": "MouseEventHandler",
						"qualifiedName": "React.MouseEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "SVGProps.onDoubleClickCapture"
					}
				},
				{
					"id": 741,
					"name": "onDrag",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1490,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "SVGSVGElement",
								"qualifiedName": "SVGSVGElement",
								"package": "typescript"
							}
						],
						"name": "DragEventHandler",
						"qualifiedName": "React.DragEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "SVGProps.onDrag"
					}
				},
				{
					"id": 742,
					"name": "onDragCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1491,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "SVGSVGElement",
								"qualifiedName": "SVGSVGElement",
								"package": "typescript"
							}
						],
						"name": "DragEventHandler",
						"qualifiedName": "React.DragEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "SVGProps.onDragCapture"
					}
				},
				{
					"id": 743,
					"name": "onDragEnd",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1492,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "SVGSVGElement",
								"qualifiedName": "SVGSVGElement",
								"package": "typescript"
							}
						],
						"name": "DragEventHandler",
						"qualifiedName": "React.DragEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "SVGProps.onDragEnd"
					}
				},
				{
					"id": 744,
					"name": "onDragEndCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1493,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "SVGSVGElement",
								"qualifiedName": "SVGSVGElement",
								"package": "typescript"
							}
						],
						"name": "DragEventHandler",
						"qualifiedName": "React.DragEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "SVGProps.onDragEndCapture"
					}
				},
				{
					"id": 745,
					"name": "onDragEnter",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1494,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "SVGSVGElement",
								"qualifiedName": "SVGSVGElement",
								"package": "typescript"
							}
						],
						"name": "DragEventHandler",
						"qualifiedName": "React.DragEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "SVGProps.onDragEnter"
					}
				},
				{
					"id": 746,
					"name": "onDragEnterCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1495,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "SVGSVGElement",
								"qualifiedName": "SVGSVGElement",
								"package": "typescript"
							}
						],
						"name": "DragEventHandler",
						"qualifiedName": "React.DragEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "SVGProps.onDragEnterCapture"
					}
				},
				{
					"id": 747,
					"name": "onDragExit",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1496,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "SVGSVGElement",
								"qualifiedName": "SVGSVGElement",
								"package": "typescript"
							}
						],
						"name": "DragEventHandler",
						"qualifiedName": "React.DragEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "SVGProps.onDragExit"
					}
				},
				{
					"id": 748,
					"name": "onDragExitCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1497,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "SVGSVGElement",
								"qualifiedName": "SVGSVGElement",
								"package": "typescript"
							}
						],
						"name": "DragEventHandler",
						"qualifiedName": "React.DragEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "SVGProps.onDragExitCapture"
					}
				},
				{
					"id": 749,
					"name": "onDragLeave",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1498,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "SVGSVGElement",
								"qualifiedName": "SVGSVGElement",
								"package": "typescript"
							}
						],
						"name": "DragEventHandler",
						"qualifiedName": "React.DragEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "SVGProps.onDragLeave"
					}
				},
				{
					"id": 750,
					"name": "onDragLeaveCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1499,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "SVGSVGElement",
								"qualifiedName": "SVGSVGElement",
								"package": "typescript"
							}
						],
						"name": "DragEventHandler",
						"qualifiedName": "React.DragEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "SVGProps.onDragLeaveCapture"
					}
				},
				{
					"id": 751,
					"name": "onDragOver",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1500,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "SVGSVGElement",
								"qualifiedName": "SVGSVGElement",
								"package": "typescript"
							}
						],
						"name": "DragEventHandler",
						"qualifiedName": "React.DragEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "SVGProps.onDragOver"
					}
				},
				{
					"id": 752,
					"name": "onDragOverCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1501,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "SVGSVGElement",
								"qualifiedName": "SVGSVGElement",
								"package": "typescript"
							}
						],
						"name": "DragEventHandler",
						"qualifiedName": "React.DragEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "SVGProps.onDragOverCapture"
					}
				},
				{
					"id": 753,
					"name": "onDragStart",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1502,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "SVGSVGElement",
								"qualifiedName": "SVGSVGElement",
								"package": "typescript"
							}
						],
						"name": "DragEventHandler",
						"qualifiedName": "React.DragEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "SVGProps.onDragStart"
					}
				},
				{
					"id": 754,
					"name": "onDragStartCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1503,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "SVGSVGElement",
								"qualifiedName": "SVGSVGElement",
								"package": "typescript"
							}
						],
						"name": "DragEventHandler",
						"qualifiedName": "React.DragEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "SVGProps.onDragStartCapture"
					}
				},
				{
					"id": 755,
					"name": "onDrop",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1504,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "SVGSVGElement",
								"qualifiedName": "SVGSVGElement",
								"package": "typescript"
							}
						],
						"name": "DragEventHandler",
						"qualifiedName": "React.DragEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "SVGProps.onDrop"
					}
				},
				{
					"id": 756,
					"name": "onDropCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1505,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "SVGSVGElement",
								"qualifiedName": "SVGSVGElement",
								"package": "typescript"
							}
						],
						"name": "DragEventHandler",
						"qualifiedName": "React.DragEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "SVGProps.onDropCapture"
					}
				},
				{
					"id": 693,
					"name": "onDurationChange",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1440,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "SVGSVGElement",
								"qualifiedName": "SVGSVGElement",
								"package": "typescript"
							}
						],
						"name": "ReactEventHandler",
						"qualifiedName": "React.ReactEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "SVGProps.onDurationChange"
					}
				},
				{
					"id": 694,
					"name": "onDurationChangeCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1441,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "SVGSVGElement",
								"qualifiedName": "SVGSVGElement",
								"package": "typescript"
							}
						],
						"name": "ReactEventHandler",
						"qualifiedName": "React.ReactEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "SVGProps.onDurationChangeCapture"
					}
				},
				{
					"id": 695,
					"name": "onEmptied",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1442,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "SVGSVGElement",
								"qualifiedName": "SVGSVGElement",
								"package": "typescript"
							}
						],
						"name": "ReactEventHandler",
						"qualifiedName": "React.ReactEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "SVGProps.onEmptied"
					}
				},
				{
					"id": 696,
					"name": "onEmptiedCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1443,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "SVGSVGElement",
								"qualifiedName": "SVGSVGElement",
								"package": "typescript"
							}
						],
						"name": "ReactEventHandler",
						"qualifiedName": "React.ReactEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "SVGProps.onEmptiedCapture"
					}
				},
				{
					"id": 697,
					"name": "onEncrypted",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1444,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "SVGSVGElement",
								"qualifiedName": "SVGSVGElement",
								"package": "typescript"
							}
						],
						"name": "ReactEventHandler",
						"qualifiedName": "React.ReactEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "SVGProps.onEncrypted"
					}
				},
				{
					"id": 698,
					"name": "onEncryptedCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1445,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "SVGSVGElement",
								"qualifiedName": "SVGSVGElement",
								"package": "typescript"
							}
						],
						"name": "ReactEventHandler",
						"qualifiedName": "React.ReactEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "SVGProps.onEncryptedCapture"
					}
				},
				{
					"id": 699,
					"name": "onEnded",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1446,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "SVGSVGElement",
								"qualifiedName": "SVGSVGElement",
								"package": "typescript"
							}
						],
						"name": "ReactEventHandler",
						"qualifiedName": "React.ReactEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "SVGProps.onEnded"
					}
				},
				{
					"id": 700,
					"name": "onEndedCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1447,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "SVGSVGElement",
								"qualifiedName": "SVGSVGElement",
								"package": "typescript"
							}
						],
						"name": "ReactEventHandler",
						"qualifiedName": "React.ReactEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "SVGProps.onEndedCapture"
					}
				},
				{
					"id": 679,
					"name": "onError",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1420,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "SVGSVGElement",
								"qualifiedName": "SVGSVGElement",
								"package": "typescript"
							}
						],
						"name": "ReactEventHandler",
						"qualifiedName": "React.ReactEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "SVGProps.onError"
					}
				},
				{
					"id": 680,
					"name": "onErrorCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1421,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "SVGSVGElement",
								"qualifiedName": "SVGSVGElement",
								"package": "typescript"
							}
						],
						"name": "ReactEventHandler",
						"qualifiedName": "React.ReactEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "SVGProps.onErrorCapture"
					}
				},
				{
					"id": 661,
					"name": "onFocus",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1398,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "SVGSVGElement",
								"qualifiedName": "SVGSVGElement",
								"package": "typescript"
							}
						],
						"name": "FocusEventHandler",
						"qualifiedName": "React.FocusEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "SVGProps.onFocus"
					}
				},
				{
					"id": 662,
					"name": "onFocusCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1399,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "SVGSVGElement",
								"qualifiedName": "SVGSVGElement",
								"package": "typescript"
							}
						],
						"name": "FocusEventHandler",
						"qualifiedName": "React.FocusEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "SVGProps.onFocusCapture"
					}
				},
				{
					"id": 795,
					"name": "onGotPointerCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1550,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "SVGSVGElement",
								"qualifiedName": "SVGSVGElement",
								"package": "typescript"
							}
						],
						"name": "PointerEventHandler",
						"qualifiedName": "React.PointerEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "SVGProps.onGotPointerCapture"
					}
				},
				{
					"id": 796,
					"name": "onGotPointerCaptureCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1551,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "SVGSVGElement",
								"qualifiedName": "SVGSVGElement",
								"package": "typescript"
							}
						],
						"name": "PointerEventHandler",
						"qualifiedName": "React.PointerEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "SVGProps.onGotPointerCaptureCapture"
					}
				},
				{
					"id": 669,
					"name": "onInput",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1408,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "SVGSVGElement",
								"qualifiedName": "SVGSVGElement",
								"package": "typescript"
							}
						],
						"name": "FormEventHandler",
						"qualifiedName": "React.FormEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "SVGProps.onInput"
					}
				},
				{
					"id": 670,
					"name": "onInputCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1409,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "SVGSVGElement",
								"qualifiedName": "SVGSVGElement",
								"package": "typescript"
							}
						],
						"name": "FormEventHandler",
						"qualifiedName": "React.FormEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "SVGProps.onInputCapture"
					}
				},
				{
					"id": 675,
					"name": "onInvalid",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1414,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "SVGSVGElement",
								"qualifiedName": "SVGSVGElement",
								"package": "typescript"
							}
						],
						"name": "FormEventHandler",
						"qualifiedName": "React.FormEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "SVGProps.onInvalid"
					}
				},
				{
					"id": 676,
					"name": "onInvalidCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1415,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "SVGSVGElement",
								"qualifiedName": "SVGSVGElement",
								"package": "typescript"
							}
						],
						"name": "FormEventHandler",
						"qualifiedName": "React.FormEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "SVGProps.onInvalidCapture"
					}
				},
				{
					"id": 681,
					"name": "onKeyDown",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1424,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "SVGSVGElement",
								"qualifiedName": "SVGSVGElement",
								"package": "typescript"
							}
						],
						"name": "KeyboardEventHandler",
						"qualifiedName": "React.KeyboardEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "SVGProps.onKeyDown"
					}
				},
				{
					"id": 682,
					"name": "onKeyDownCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1425,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "SVGSVGElement",
								"qualifiedName": "SVGSVGElement",
								"package": "typescript"
							}
						],
						"name": "KeyboardEventHandler",
						"qualifiedName": "React.KeyboardEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "SVGProps.onKeyDownCapture"
					}
				},
				{
					"id": 683,
					"name": "onKeyPress",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"summary": [],
						"blockTags": [
							{
								"tag": "@deprecated",
								"content": []
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1427,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "SVGSVGElement",
								"qualifiedName": "SVGSVGElement",
								"package": "typescript"
							}
						],
						"name": "KeyboardEventHandler",
						"qualifiedName": "React.KeyboardEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "SVGProps.onKeyPress"
					}
				},
				{
					"id": 684,
					"name": "onKeyPressCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"summary": [],
						"blockTags": [
							{
								"tag": "@deprecated",
								"content": []
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1429,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "SVGSVGElement",
								"qualifiedName": "SVGSVGElement",
								"package": "typescript"
							}
						],
						"name": "KeyboardEventHandler",
						"qualifiedName": "React.KeyboardEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "SVGProps.onKeyPressCapture"
					}
				},
				{
					"id": 685,
					"name": "onKeyUp",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1430,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "SVGSVGElement",
								"qualifiedName": "SVGSVGElement",
								"package": "typescript"
							}
						],
						"name": "KeyboardEventHandler",
						"qualifiedName": "React.KeyboardEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "SVGProps.onKeyUp"
					}
				},
				{
					"id": 686,
					"name": "onKeyUpCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1431,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "SVGSVGElement",
								"qualifiedName": "SVGSVGElement",
								"package": "typescript"
							}
						],
						"name": "KeyboardEventHandler",
						"qualifiedName": "React.KeyboardEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "SVGProps.onKeyUpCapture"
					}
				},
				{
					"id": 677,
					"name": "onLoad",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1418,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "SVGSVGElement",
								"qualifiedName": "SVGSVGElement",
								"package": "typescript"
							}
						],
						"name": "ReactEventHandler",
						"qualifiedName": "React.ReactEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "SVGProps.onLoad"
					}
				},
				{
					"id": 678,
					"name": "onLoadCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1419,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "SVGSVGElement",
								"qualifiedName": "SVGSVGElement",
								"package": "typescript"
							}
						],
						"name": "ReactEventHandler",
						"qualifiedName": "React.ReactEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "SVGProps.onLoadCapture"
					}
				},
				{
					"id": 705,
					"name": "onLoadStart",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1452,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "SVGSVGElement",
								"qualifiedName": "SVGSVGElement",
								"package": "typescript"
							}
						],
						"name": "ReactEventHandler",
						"qualifiedName": "React.ReactEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "SVGProps.onLoadStart"
					}
				},
				{
					"id": 706,
					"name": "onLoadStartCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1453,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "SVGSVGElement",
								"qualifiedName": "SVGSVGElement",
								"package": "typescript"
							}
						],
						"name": "ReactEventHandler",
						"qualifiedName": "React.ReactEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "SVGProps.onLoadStartCapture"
					}
				},
				{
					"id": 701,
					"name": "onLoadedData",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1448,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "SVGSVGElement",
								"qualifiedName": "SVGSVGElement",
								"package": "typescript"
							}
						],
						"name": "ReactEventHandler",
						"qualifiedName": "React.ReactEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "SVGProps.onLoadedData"
					}
				},
				{
					"id": 702,
					"name": "onLoadedDataCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1449,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "SVGSVGElement",
								"qualifiedName": "SVGSVGElement",
								"package": "typescript"
							}
						],
						"name": "ReactEventHandler",
						"qualifiedName": "React.ReactEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "SVGProps.onLoadedDataCapture"
					}
				},
				{
					"id": 703,
					"name": "onLoadedMetadata",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1450,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "SVGSVGElement",
								"qualifiedName": "SVGSVGElement",
								"package": "typescript"
							}
						],
						"name": "ReactEventHandler",
						"qualifiedName": "React.ReactEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "SVGProps.onLoadedMetadata"
					}
				},
				{
					"id": 704,
					"name": "onLoadedMetadataCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1451,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "SVGSVGElement",
								"qualifiedName": "SVGSVGElement",
								"package": "typescript"
							}
						],
						"name": "ReactEventHandler",
						"qualifiedName": "React.ReactEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "SVGProps.onLoadedMetadataCapture"
					}
				},
				{
					"id": 797,
					"name": "onLostPointerCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1552,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "SVGSVGElement",
								"qualifiedName": "SVGSVGElement",
								"package": "typescript"
							}
						],
						"name": "PointerEventHandler",
						"qualifiedName": "React.PointerEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "SVGProps.onLostPointerCapture"
					}
				},
				{
					"id": 798,
					"name": "onLostPointerCaptureCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1553,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "SVGSVGElement",
								"qualifiedName": "SVGSVGElement",
								"package": "typescript"
							}
						],
						"name": "PointerEventHandler",
						"qualifiedName": "React.PointerEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "SVGProps.onLostPointerCaptureCapture"
					}
				},
				{
					"id": 757,
					"name": "onMouseDown",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1506,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "SVGSVGElement",
								"qualifiedName": "SVGSVGElement",
								"package": "typescript"
							}
						],
						"name": "MouseEventHandler",
						"qualifiedName": "React.MouseEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "SVGProps.onMouseDown"
					}
				},
				{
					"id": 758,
					"name": "onMouseDownCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1507,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "SVGSVGElement",
								"qualifiedName": "SVGSVGElement",
								"package": "typescript"
							}
						],
						"name": "MouseEventHandler",
						"qualifiedName": "React.MouseEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "SVGProps.onMouseDownCapture"
					}
				},
				{
					"id": 759,
					"name": "onMouseEnter",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1508,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "SVGSVGElement",
								"qualifiedName": "SVGSVGElement",
								"package": "typescript"
							}
						],
						"name": "MouseEventHandler",
						"qualifiedName": "React.MouseEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "SVGProps.onMouseEnter"
					}
				},
				{
					"id": 760,
					"name": "onMouseLeave",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1509,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "SVGSVGElement",
								"qualifiedName": "SVGSVGElement",
								"package": "typescript"
							}
						],
						"name": "MouseEventHandler",
						"qualifiedName": "React.MouseEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "SVGProps.onMouseLeave"
					}
				},
				{
					"id": 761,
					"name": "onMouseMove",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1510,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "SVGSVGElement",
								"qualifiedName": "SVGSVGElement",
								"package": "typescript"
							}
						],
						"name": "MouseEventHandler",
						"qualifiedName": "React.MouseEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "SVGProps.onMouseMove"
					}
				},
				{
					"id": 762,
					"name": "onMouseMoveCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1511,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "SVGSVGElement",
								"qualifiedName": "SVGSVGElement",
								"package": "typescript"
							}
						],
						"name": "MouseEventHandler",
						"qualifiedName": "React.MouseEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "SVGProps.onMouseMoveCapture"
					}
				},
				{
					"id": 763,
					"name": "onMouseOut",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1512,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "SVGSVGElement",
								"qualifiedName": "SVGSVGElement",
								"package": "typescript"
							}
						],
						"name": "MouseEventHandler",
						"qualifiedName": "React.MouseEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "SVGProps.onMouseOut"
					}
				},
				{
					"id": 764,
					"name": "onMouseOutCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1513,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "SVGSVGElement",
								"qualifiedName": "SVGSVGElement",
								"package": "typescript"
							}
						],
						"name": "MouseEventHandler",
						"qualifiedName": "React.MouseEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "SVGProps.onMouseOutCapture"
					}
				},
				{
					"id": 765,
					"name": "onMouseOver",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1514,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "SVGSVGElement",
								"qualifiedName": "SVGSVGElement",
								"package": "typescript"
							}
						],
						"name": "MouseEventHandler",
						"qualifiedName": "React.MouseEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "SVGProps.onMouseOver"
					}
				},
				{
					"id": 766,
					"name": "onMouseOverCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1515,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "SVGSVGElement",
								"qualifiedName": "SVGSVGElement",
								"package": "typescript"
							}
						],
						"name": "MouseEventHandler",
						"qualifiedName": "React.MouseEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "SVGProps.onMouseOverCapture"
					}
				},
				{
					"id": 767,
					"name": "onMouseUp",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1516,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "SVGSVGElement",
								"qualifiedName": "SVGSVGElement",
								"package": "typescript"
							}
						],
						"name": "MouseEventHandler",
						"qualifiedName": "React.MouseEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "SVGProps.onMouseUp"
					}
				},
				{
					"id": 768,
					"name": "onMouseUpCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1517,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "SVGSVGElement",
								"qualifiedName": "SVGSVGElement",
								"package": "typescript"
							}
						],
						"name": "MouseEventHandler",
						"qualifiedName": "React.MouseEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "SVGProps.onMouseUpCapture"
					}
				},
				{
					"id": 653,
					"name": "onPaste",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1386,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "SVGSVGElement",
								"qualifiedName": "SVGSVGElement",
								"package": "typescript"
							}
						],
						"name": "ClipboardEventHandler",
						"qualifiedName": "React.ClipboardEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "SVGProps.onPaste"
					}
				},
				{
					"id": 654,
					"name": "onPasteCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1387,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "SVGSVGElement",
								"qualifiedName": "SVGSVGElement",
								"package": "typescript"
							}
						],
						"name": "ClipboardEventHandler",
						"qualifiedName": "React.ClipboardEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "SVGProps.onPasteCapture"
					}
				},
				{
					"id": 707,
					"name": "onPause",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1454,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "SVGSVGElement",
								"qualifiedName": "SVGSVGElement",
								"package": "typescript"
							}
						],
						"name": "ReactEventHandler",
						"qualifiedName": "React.ReactEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "SVGProps.onPause"
					}
				},
				{
					"id": 708,
					"name": "onPauseCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1455,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "SVGSVGElement",
								"qualifiedName": "SVGSVGElement",
								"package": "typescript"
							}
						],
						"name": "ReactEventHandler",
						"qualifiedName": "React.ReactEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "SVGProps.onPauseCapture"
					}
				},
				{
					"id": 709,
					"name": "onPlay",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1456,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "SVGSVGElement",
								"qualifiedName": "SVGSVGElement",
								"package": "typescript"
							}
						],
						"name": "ReactEventHandler",
						"qualifiedName": "React.ReactEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "SVGProps.onPlay"
					}
				},
				{
					"id": 710,
					"name": "onPlayCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1457,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "SVGSVGElement",
								"qualifiedName": "SVGSVGElement",
								"package": "typescript"
							}
						],
						"name": "ReactEventHandler",
						"qualifiedName": "React.ReactEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "SVGProps.onPlayCapture"
					}
				},
				{
					"id": 711,
					"name": "onPlaying",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1458,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "SVGSVGElement",
								"qualifiedName": "SVGSVGElement",
								"package": "typescript"
							}
						],
						"name": "ReactEventHandler",
						"qualifiedName": "React.ReactEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "SVGProps.onPlaying"
					}
				},
				{
					"id": 712,
					"name": "onPlayingCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1459,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "SVGSVGElement",
								"qualifiedName": "SVGSVGElement",
								"package": "typescript"
							}
						],
						"name": "ReactEventHandler",
						"qualifiedName": "React.ReactEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "SVGProps.onPlayingCapture"
					}
				},
				{
					"id": 785,
					"name": "onPointerCancel",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1540,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "SVGSVGElement",
								"qualifiedName": "SVGSVGElement",
								"package": "typescript"
							}
						],
						"name": "PointerEventHandler",
						"qualifiedName": "React.PointerEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "SVGProps.onPointerCancel"
					}
				},
				{
					"id": 786,
					"name": "onPointerCancelCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1541,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "SVGSVGElement",
								"qualifiedName": "SVGSVGElement",
								"package": "typescript"
							}
						],
						"name": "PointerEventHandler",
						"qualifiedName": "React.PointerEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "SVGProps.onPointerCancelCapture"
					}
				},
				{
					"id": 779,
					"name": "onPointerDown",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1534,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "SVGSVGElement",
								"qualifiedName": "SVGSVGElement",
								"package": "typescript"
							}
						],
						"name": "PointerEventHandler",
						"qualifiedName": "React.PointerEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "SVGProps.onPointerDown"
					}
				},
				{
					"id": 780,
					"name": "onPointerDownCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1535,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "SVGSVGElement",
								"qualifiedName": "SVGSVGElement",
								"package": "typescript"
							}
						],
						"name": "PointerEventHandler",
						"qualifiedName": "React.PointerEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "SVGProps.onPointerDownCapture"
					}
				},
				{
					"id": 787,
					"name": "onPointerEnter",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1542,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "SVGSVGElement",
								"qualifiedName": "SVGSVGElement",
								"package": "typescript"
							}
						],
						"name": "PointerEventHandler",
						"qualifiedName": "React.PointerEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "SVGProps.onPointerEnter"
					}
				},
				{
					"id": 788,
					"name": "onPointerEnterCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1543,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "SVGSVGElement",
								"qualifiedName": "SVGSVGElement",
								"package": "typescript"
							}
						],
						"name": "PointerEventHandler",
						"qualifiedName": "React.PointerEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "SVGProps.onPointerEnterCapture"
					}
				},
				{
					"id": 789,
					"name": "onPointerLeave",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1544,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "SVGSVGElement",
								"qualifiedName": "SVGSVGElement",
								"package": "typescript"
							}
						],
						"name": "PointerEventHandler",
						"qualifiedName": "React.PointerEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "SVGProps.onPointerLeave"
					}
				},
				{
					"id": 790,
					"name": "onPointerLeaveCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1545,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "SVGSVGElement",
								"qualifiedName": "SVGSVGElement",
								"package": "typescript"
							}
						],
						"name": "PointerEventHandler",
						"qualifiedName": "React.PointerEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "SVGProps.onPointerLeaveCapture"
					}
				},
				{
					"id": 781,
					"name": "onPointerMove",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1536,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "SVGSVGElement",
								"qualifiedName": "SVGSVGElement",
								"package": "typescript"
							}
						],
						"name": "PointerEventHandler",
						"qualifiedName": "React.PointerEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "SVGProps.onPointerMove"
					}
				},
				{
					"id": 782,
					"name": "onPointerMoveCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1537,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "SVGSVGElement",
								"qualifiedName": "SVGSVGElement",
								"package": "typescript"
							}
						],
						"name": "PointerEventHandler",
						"qualifiedName": "React.PointerEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "SVGProps.onPointerMoveCapture"
					}
				},
				{
					"id": 793,
					"name": "onPointerOut",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1548,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "SVGSVGElement",
								"qualifiedName": "SVGSVGElement",
								"package": "typescript"
							}
						],
						"name": "PointerEventHandler",
						"qualifiedName": "React.PointerEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "SVGProps.onPointerOut"
					}
				},
				{
					"id": 794,
					"name": "onPointerOutCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1549,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "SVGSVGElement",
								"qualifiedName": "SVGSVGElement",
								"package": "typescript"
							}
						],
						"name": "PointerEventHandler",
						"qualifiedName": "React.PointerEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "SVGProps.onPointerOutCapture"
					}
				},
				{
					"id": 791,
					"name": "onPointerOver",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1546,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "SVGSVGElement",
								"qualifiedName": "SVGSVGElement",
								"package": "typescript"
							}
						],
						"name": "PointerEventHandler",
						"qualifiedName": "React.PointerEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "SVGProps.onPointerOver"
					}
				},
				{
					"id": 792,
					"name": "onPointerOverCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1547,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "SVGSVGElement",
								"qualifiedName": "SVGSVGElement",
								"package": "typescript"
							}
						],
						"name": "PointerEventHandler",
						"qualifiedName": "React.PointerEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "SVGProps.onPointerOverCapture"
					}
				},
				{
					"id": 783,
					"name": "onPointerUp",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1538,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "SVGSVGElement",
								"qualifiedName": "SVGSVGElement",
								"package": "typescript"
							}
						],
						"name": "PointerEventHandler",
						"qualifiedName": "React.PointerEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "SVGProps.onPointerUp"
					}
				},
				{
					"id": 784,
					"name": "onPointerUpCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1539,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "SVGSVGElement",
								"qualifiedName": "SVGSVGElement",
								"package": "typescript"
							}
						],
						"name": "PointerEventHandler",
						"qualifiedName": "React.PointerEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "SVGProps.onPointerUpCapture"
					}
				},
				{
					"id": 713,
					"name": "onProgress",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1460,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "SVGSVGElement",
								"qualifiedName": "SVGSVGElement",
								"package": "typescript"
							}
						],
						"name": "ReactEventHandler",
						"qualifiedName": "React.ReactEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "SVGProps.onProgress"
					}
				},
				{
					"id": 714,
					"name": "onProgressCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1461,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "SVGSVGElement",
								"qualifiedName": "SVGSVGElement",
								"package": "typescript"
							}
						],
						"name": "ReactEventHandler",
						"qualifiedName": "React.ReactEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "SVGProps.onProgressCapture"
					}
				},
				{
					"id": 715,
					"name": "onRateChange",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1462,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "SVGSVGElement",
								"qualifiedName": "SVGSVGElement",
								"package": "typescript"
							}
						],
						"name": "ReactEventHandler",
						"qualifiedName": "React.ReactEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "SVGProps.onRateChange"
					}
				},
				{
					"id": 716,
					"name": "onRateChangeCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1463,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "SVGSVGElement",
								"qualifiedName": "SVGSVGElement",
								"package": "typescript"
							}
						],
						"name": "ReactEventHandler",
						"qualifiedName": "React.ReactEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "SVGProps.onRateChangeCapture"
					}
				},
				{
					"id": 671,
					"name": "onReset",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1410,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "SVGSVGElement",
								"qualifiedName": "SVGSVGElement",
								"package": "typescript"
							}
						],
						"name": "FormEventHandler",
						"qualifiedName": "React.FormEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "SVGProps.onReset"
					}
				},
				{
					"id": 672,
					"name": "onResetCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1411,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "SVGSVGElement",
								"qualifiedName": "SVGSVGElement",
								"package": "typescript"
							}
						],
						"name": "FormEventHandler",
						"qualifiedName": "React.FormEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "SVGProps.onResetCapture"
					}
				},
				{
					"id": 717,
					"name": "onResize",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1464,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "SVGSVGElement",
								"qualifiedName": "SVGSVGElement",
								"package": "typescript"
							}
						],
						"name": "ReactEventHandler",
						"qualifiedName": "React.ReactEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "SVGProps.onResize"
					}
				},
				{
					"id": 718,
					"name": "onResizeCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1465,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "SVGSVGElement",
								"qualifiedName": "SVGSVGElement",
								"package": "typescript"
							}
						],
						"name": "ReactEventHandler",
						"qualifiedName": "React.ReactEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "SVGProps.onResizeCapture"
					}
				},
				{
					"id": 799,
					"name": "onScroll",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1556,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "SVGSVGElement",
								"qualifiedName": "SVGSVGElement",
								"package": "typescript"
							}
						],
						"name": "UIEventHandler",
						"qualifiedName": "React.UIEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "SVGProps.onScroll"
					}
				},
				{
					"id": 800,
					"name": "onScrollCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1557,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "SVGSVGElement",
								"qualifiedName": "SVGSVGElement",
								"package": "typescript"
							}
						],
						"name": "UIEventHandler",
						"qualifiedName": "React.UIEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "SVGProps.onScrollCapture"
					}
				},
				{
					"id": 719,
					"name": "onSeeked",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1466,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "SVGSVGElement",
								"qualifiedName": "SVGSVGElement",
								"package": "typescript"
							}
						],
						"name": "ReactEventHandler",
						"qualifiedName": "React.ReactEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "SVGProps.onSeeked"
					}
				},
				{
					"id": 720,
					"name": "onSeekedCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1467,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "SVGSVGElement",
								"qualifiedName": "SVGSVGElement",
								"package": "typescript"
							}
						],
						"name": "ReactEventHandler",
						"qualifiedName": "React.ReactEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "SVGProps.onSeekedCapture"
					}
				},
				{
					"id": 721,
					"name": "onSeeking",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1468,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "SVGSVGElement",
								"qualifiedName": "SVGSVGElement",
								"package": "typescript"
							}
						],
						"name": "ReactEventHandler",
						"qualifiedName": "React.ReactEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "SVGProps.onSeeking"
					}
				},
				{
					"id": 722,
					"name": "onSeekingCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1469,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "SVGSVGElement",
								"qualifiedName": "SVGSVGElement",
								"package": "typescript"
							}
						],
						"name": "ReactEventHandler",
						"qualifiedName": "React.ReactEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "SVGProps.onSeekingCapture"
					}
				},
				{
					"id": 769,
					"name": "onSelect",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1520,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "SVGSVGElement",
								"qualifiedName": "SVGSVGElement",
								"package": "typescript"
							}
						],
						"name": "ReactEventHandler",
						"qualifiedName": "React.ReactEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "SVGProps.onSelect"
					}
				},
				{
					"id": 770,
					"name": "onSelectCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1521,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "SVGSVGElement",
								"qualifiedName": "SVGSVGElement",
								"package": "typescript"
							}
						],
						"name": "ReactEventHandler",
						"qualifiedName": "React.ReactEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "SVGProps.onSelectCapture"
					}
				},
				{
					"id": 723,
					"name": "onStalled",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1470,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "SVGSVGElement",
								"qualifiedName": "SVGSVGElement",
								"package": "typescript"
							}
						],
						"name": "ReactEventHandler",
						"qualifiedName": "React.ReactEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "SVGProps.onStalled"
					}
				},
				{
					"id": 724,
					"name": "onStalledCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1471,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "SVGSVGElement",
								"qualifiedName": "SVGSVGElement",
								"package": "typescript"
							}
						],
						"name": "ReactEventHandler",
						"qualifiedName": "React.ReactEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "SVGProps.onStalledCapture"
					}
				},
				{
					"id": 673,
					"name": "onSubmit",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1412,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "SVGSVGElement",
								"qualifiedName": "SVGSVGElement",
								"package": "typescript"
							}
						],
						"name": "FormEventHandler",
						"qualifiedName": "React.FormEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "SVGProps.onSubmit"
					}
				},
				{
					"id": 674,
					"name": "onSubmitCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1413,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "SVGSVGElement",
								"qualifiedName": "SVGSVGElement",
								"package": "typescript"
							}
						],
						"name": "FormEventHandler",
						"qualifiedName": "React.FormEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "SVGProps.onSubmitCapture"
					}
				},
				{
					"id": 725,
					"name": "onSuspend",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1472,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "SVGSVGElement",
								"qualifiedName": "SVGSVGElement",
								"package": "typescript"
							}
						],
						"name": "ReactEventHandler",
						"qualifiedName": "React.ReactEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "SVGProps.onSuspend"
					}
				},
				{
					"id": 726,
					"name": "onSuspendCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1473,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "SVGSVGElement",
								"qualifiedName": "SVGSVGElement",
								"package": "typescript"
							}
						],
						"name": "ReactEventHandler",
						"qualifiedName": "React.ReactEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "SVGProps.onSuspendCapture"
					}
				},
				{
					"id": 727,
					"name": "onTimeUpdate",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1474,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "SVGSVGElement",
								"qualifiedName": "SVGSVGElement",
								"package": "typescript"
							}
						],
						"name": "ReactEventHandler",
						"qualifiedName": "React.ReactEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "SVGProps.onTimeUpdate"
					}
				},
				{
					"id": 728,
					"name": "onTimeUpdateCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1475,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "SVGSVGElement",
								"qualifiedName": "SVGSVGElement",
								"package": "typescript"
							}
						],
						"name": "ReactEventHandler",
						"qualifiedName": "React.ReactEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "SVGProps.onTimeUpdateCapture"
					}
				},
				{
					"id": 771,
					"name": "onTouchCancel",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1524,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "SVGSVGElement",
								"qualifiedName": "SVGSVGElement",
								"package": "typescript"
							}
						],
						"name": "TouchEventHandler",
						"qualifiedName": "React.TouchEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "SVGProps.onTouchCancel"
					}
				},
				{
					"id": 772,
					"name": "onTouchCancelCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1525,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "SVGSVGElement",
								"qualifiedName": "SVGSVGElement",
								"package": "typescript"
							}
						],
						"name": "TouchEventHandler",
						"qualifiedName": "React.TouchEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "SVGProps.onTouchCancelCapture"
					}
				},
				{
					"id": 773,
					"name": "onTouchEnd",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1526,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "SVGSVGElement",
								"qualifiedName": "SVGSVGElement",
								"package": "typescript"
							}
						],
						"name": "TouchEventHandler",
						"qualifiedName": "React.TouchEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "SVGProps.onTouchEnd"
					}
				},
				{
					"id": 774,
					"name": "onTouchEndCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1527,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "SVGSVGElement",
								"qualifiedName": "SVGSVGElement",
								"package": "typescript"
							}
						],
						"name": "TouchEventHandler",
						"qualifiedName": "React.TouchEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "SVGProps.onTouchEndCapture"
					}
				},
				{
					"id": 775,
					"name": "onTouchMove",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1528,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "SVGSVGElement",
								"qualifiedName": "SVGSVGElement",
								"package": "typescript"
							}
						],
						"name": "TouchEventHandler",
						"qualifiedName": "React.TouchEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "SVGProps.onTouchMove"
					}
				},
				{
					"id": 776,
					"name": "onTouchMoveCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1529,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "SVGSVGElement",
								"qualifiedName": "SVGSVGElement",
								"package": "typescript"
							}
						],
						"name": "TouchEventHandler",
						"qualifiedName": "React.TouchEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "SVGProps.onTouchMoveCapture"
					}
				},
				{
					"id": 777,
					"name": "onTouchStart",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1530,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "SVGSVGElement",
								"qualifiedName": "SVGSVGElement",
								"package": "typescript"
							}
						],
						"name": "TouchEventHandler",
						"qualifiedName": "React.TouchEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "SVGProps.onTouchStart"
					}
				},
				{
					"id": 778,
					"name": "onTouchStartCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1531,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "SVGSVGElement",
								"qualifiedName": "SVGSVGElement",
								"package": "typescript"
							}
						],
						"name": "TouchEventHandler",
						"qualifiedName": "React.TouchEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "SVGProps.onTouchStartCapture"
					}
				},
				{
					"id": 809,
					"name": "onTransitionEnd",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1572,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "SVGSVGElement",
								"qualifiedName": "SVGSVGElement",
								"package": "typescript"
							}
						],
						"name": "TransitionEventHandler",
						"qualifiedName": "React.TransitionEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "SVGProps.onTransitionEnd"
					}
				},
				{
					"id": 810,
					"name": "onTransitionEndCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1573,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "SVGSVGElement",
								"qualifiedName": "SVGSVGElement",
								"package": "typescript"
							}
						],
						"name": "TransitionEventHandler",
						"qualifiedName": "React.TransitionEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "SVGProps.onTransitionEndCapture"
					}
				},
				{
					"id": 729,
					"name": "onVolumeChange",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1476,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "SVGSVGElement",
								"qualifiedName": "SVGSVGElement",
								"package": "typescript"
							}
						],
						"name": "ReactEventHandler",
						"qualifiedName": "React.ReactEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "SVGProps.onVolumeChange"
					}
				},
				{
					"id": 730,
					"name": "onVolumeChangeCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1477,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "SVGSVGElement",
								"qualifiedName": "SVGSVGElement",
								"package": "typescript"
							}
						],
						"name": "ReactEventHandler",
						"qualifiedName": "React.ReactEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "SVGProps.onVolumeChangeCapture"
					}
				},
				{
					"id": 731,
					"name": "onWaiting",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1478,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "SVGSVGElement",
								"qualifiedName": "SVGSVGElement",
								"package": "typescript"
							}
						],
						"name": "ReactEventHandler",
						"qualifiedName": "React.ReactEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "SVGProps.onWaiting"
					}
				},
				{
					"id": 732,
					"name": "onWaitingCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1479,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "SVGSVGElement",
								"qualifiedName": "SVGSVGElement",
								"package": "typescript"
							}
						],
						"name": "ReactEventHandler",
						"qualifiedName": "React.ReactEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "SVGProps.onWaitingCapture"
					}
				},
				{
					"id": 801,
					"name": "onWheel",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1560,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "SVGSVGElement",
								"qualifiedName": "SVGSVGElement",
								"package": "typescript"
							}
						],
						"name": "WheelEventHandler",
						"qualifiedName": "React.WheelEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "SVGProps.onWheel"
					}
				},
				{
					"id": 802,
					"name": "onWheelCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1561,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "SVGSVGElement",
								"qualifiedName": "SVGSVGElement",
								"package": "typescript"
							}
						],
						"name": "WheelEventHandler",
						"qualifiedName": "React.WheelEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "SVGProps.onWheelCapture"
					}
				},
				{
					"id": 474,
					"name": "opacity",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 2658,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "SVGProps.opacity"
					}
				},
				{
					"id": 475,
					"name": "operator",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 2659,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "SVGProps.operator"
					}
				},
				{
					"id": 476,
					"name": "order",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 2660,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "SVGProps.order"
					}
				},
				{
					"id": 477,
					"name": "orient",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 2661,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "SVGProps.orient"
					}
				},
				{
					"id": 478,
					"name": "orientation",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 2662,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "SVGProps.orientation"
					}
				},
				{
					"id": 479,
					"name": "origin",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 2663,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "SVGProps.origin"
					}
				},
				{
					"id": 480,
					"name": "overflow",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 2664,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "SVGProps.overflow"
					}
				},
				{
					"id": 481,
					"name": "overlinePosition",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 2665,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "SVGProps.overlinePosition"
					}
				},
				{
					"id": 482,
					"name": "overlineThickness",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 2666,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "SVGProps.overlineThickness"
					}
				},
				{
					"id": 483,
					"name": "paintOrder",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 2667,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "SVGProps.paintOrder"
					}
				},
				{
					"id": 484,
					"name": "panose1",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 2668,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "SVGProps.panose1"
					}
				},
				{
					"id": 485,
					"name": "path",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 2669,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "SVGProps.path"
					}
				},
				{
					"id": 486,
					"name": "pathLength",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 2670,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "SVGProps.pathLength"
					}
				},
				{
					"id": 487,
					"name": "patternContentUnits",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 2671,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "SVGProps.patternContentUnits"
					}
				},
				{
					"id": 488,
					"name": "patternTransform",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 2672,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "SVGProps.patternTransform"
					}
				},
				{
					"id": 489,
					"name": "patternUnits",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 2673,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "SVGProps.patternUnits"
					}
				},
				{
					"id": 490,
					"name": "pointerEvents",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 2674,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "SVGProps.pointerEvents"
					}
				},
				{
					"id": 491,
					"name": "points",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 2675,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "SVGProps.points"
					}
				},
				{
					"id": 492,
					"name": "pointsAtX",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 2676,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "SVGProps.pointsAtX"
					}
				},
				{
					"id": 493,
					"name": "pointsAtY",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 2677,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "SVGProps.pointsAtY"
					}
				},
				{
					"id": 494,
					"name": "pointsAtZ",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 2678,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "SVGProps.pointsAtZ"
					}
				},
				{
					"id": 495,
					"name": "preserveAlpha",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 2679,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"name": "Booleanish",
						"qualifiedName": "Booleanish",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "SVGProps.preserveAlpha"
					}
				},
				{
					"id": 496,
					"name": "preserveAspectRatio",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 2680,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "SVGProps.preserveAspectRatio"
					}
				},
				{
					"id": 497,
					"name": "primitiveUnits",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 2681,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "SVGProps.primitiveUnits"
					}
				},
				{
					"id": 498,
					"name": "r",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 2682,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "SVGProps.r"
					}
				},
				{
					"id": 499,
					"name": "radius",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 2683,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "SVGProps.radius"
					}
				},
				{
					"id": 811,
					"name": "ref",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 138,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "SVGSVGElement",
								"qualifiedName": "SVGSVGElement",
								"package": "typescript"
							}
						],
						"name": "LegacyRef",
						"qualifiedName": "React.LegacyRef",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "SVGProps.ref"
					}
				},
				{
					"id": 500,
					"name": "refX",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 2684,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "SVGProps.refX"
					}
				},
				{
					"id": 501,
					"name": "refY",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 2685,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "SVGProps.refY"
					}
				},
				{
					"id": 502,
					"name": "renderingIntent",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 2686,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "SVGProps.renderingIntent"
					}
				},
				{
					"id": 503,
					"name": "repeatCount",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 2687,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "SVGProps.repeatCount"
					}
				},
				{
					"id": 504,
					"name": "repeatDur",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 2688,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "SVGProps.repeatDur"
					}
				},
				{
					"id": 505,
					"name": "requiredExtensions",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 2689,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "SVGProps.requiredExtensions"
					}
				},
				{
					"id": 506,
					"name": "requiredFeatures",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 2690,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "SVGProps.requiredFeatures"
					}
				},
				{
					"id": 507,
					"name": "restart",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 2691,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "SVGProps.restart"
					}
				},
				{
					"id": 508,
					"name": "result",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 2692,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "SVGProps.result"
					}
				},
				{
					"id": 352,
					"name": "role",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 2533,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"name": "AriaRole",
						"qualifiedName": "React.AriaRole",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "SVGProps.role"
					}
				},
				{
					"id": 509,
					"name": "rotate",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 2693,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "SVGProps.rotate"
					}
				},
				{
					"id": 510,
					"name": "rx",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 2694,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "SVGProps.rx"
					}
				},
				{
					"id": 511,
					"name": "ry",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 2695,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "SVGProps.ry"
					}
				},
				{
					"id": 512,
					"name": "scale",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 2696,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "SVGProps.scale"
					}
				},
				{
					"id": 513,
					"name": "seed",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 2697,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "SVGProps.seed"
					}
				},
				{
					"id": 514,
					"name": "shapeRendering",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 2698,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "SVGProps.shapeRendering"
					}
				},
				{
					"id": 337,
					"name": "size",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Controls the relative size of the spinner"
							}
						],
						"blockTags": [
							{
								"tag": "@default",
								"content": [
									{
										"kind": "text",
										"text": "\"sm\""
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/core/src/Spinner/index.tsx",
							"line": 10,
							"character": 4,
							"url": "https://github.com/dilan-dio4/tulsa/blob/3f22e3f/packages/core/src/Spinner/index.tsx#L10"
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": "sm"
							},
							{
								"type": "literal",
								"value": "md"
							},
							{
								"type": "literal",
								"value": "lg"
							}
						]
					}
				},
				{
					"id": 515,
					"name": "slope",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 2699,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "SVGProps.slope"
					}
				},
				{
					"id": 516,
					"name": "spacing",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 2700,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "SVGProps.spacing"
					}
				},
				{
					"id": 517,
					"name": "specularConstant",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 2701,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "SVGProps.specularConstant"
					}
				},
				{
					"id": 518,
					"name": "specularExponent",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 2702,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "SVGProps.specularExponent"
					}
				},
				{
					"id": 519,
					"name": "speed",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 2703,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "SVGProps.speed"
					}
				},
				{
					"id": 520,
					"name": "spreadMethod",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 2704,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "SVGProps.spreadMethod"
					}
				},
				{
					"id": 521,
					"name": "startOffset",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 2705,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "SVGProps.startOffset"
					}
				},
				{
					"id": 522,
					"name": "stdDeviation",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 2706,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "SVGProps.stdDeviation"
					}
				},
				{
					"id": 523,
					"name": "stemh",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 2707,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "SVGProps.stemh"
					}
				},
				{
					"id": 524,
					"name": "stemv",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 2708,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "SVGProps.stemv"
					}
				},
				{
					"id": 525,
					"name": "stitchTiles",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 2709,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "SVGProps.stitchTiles"
					}
				},
				{
					"id": 526,
					"name": "stopColor",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 2710,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "SVGProps.stopColor"
					}
				},
				{
					"id": 527,
					"name": "stopOpacity",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 2711,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "SVGProps.stopOpacity"
					}
				},
				{
					"id": 528,
					"name": "strikethroughPosition",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 2712,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "SVGProps.strikethroughPosition"
					}
				},
				{
					"id": 529,
					"name": "strikethroughThickness",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 2713,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "SVGProps.strikethroughThickness"
					}
				},
				{
					"id": 530,
					"name": "string",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 2714,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "SVGProps.string"
					}
				},
				{
					"id": 531,
					"name": "stroke",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 2715,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "SVGProps.stroke"
					}
				},
				{
					"id": 532,
					"name": "strokeDasharray",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 2716,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "SVGProps.strokeDasharray"
					}
				},
				{
					"id": 533,
					"name": "strokeDashoffset",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 2717,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "SVGProps.strokeDashoffset"
					}
				},
				{
					"id": 534,
					"name": "strokeLinecap",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 2718,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": "square"
							},
							{
								"type": "literal",
								"value": "butt"
							},
							{
								"type": "literal",
								"value": "round"
							},
							{
								"type": "literal",
								"value": "inherit"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "SVGProps.strokeLinecap"
					}
				},
				{
					"id": 535,
					"name": "strokeLinejoin",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 2719,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": "round"
							},
							{
								"type": "literal",
								"value": "bevel"
							},
							{
								"type": "literal",
								"value": "miter"
							},
							{
								"type": "literal",
								"value": "inherit"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "SVGProps.strokeLinejoin"
					}
				},
				{
					"id": 536,
					"name": "strokeMiterlimit",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 2720,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "SVGProps.strokeMiterlimit"
					}
				},
				{
					"id": 537,
					"name": "strokeOpacity",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 2721,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "SVGProps.strokeOpacity"
					}
				},
				{
					"id": 538,
					"name": "strokeWidth",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 2722,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "SVGProps.strokeWidth"
					}
				},
				{
					"id": 348,
					"name": "style",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 2527,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"name": "CSSProperties",
						"qualifiedName": "React.CSSProperties",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "SVGProps.style"
					}
				},
				{
					"id": 539,
					"name": "surfaceScale",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 2723,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "SVGProps.surfaceScale"
					}
				},
				{
					"id": 540,
					"name": "systemLanguage",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 2724,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "SVGProps.systemLanguage"
					}
				},
				{
					"id": 353,
					"name": "tabIndex",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 2534,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "SVGProps.tabIndex"
					}
				},
				{
					"id": 541,
					"name": "tableValues",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 2725,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "SVGProps.tableValues"
					}
				},
				{
					"id": 349,
					"name": "target",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 2528,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "SVGProps.target"
					}
				},
				{
					"id": 542,
					"name": "targetX",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 2726,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "SVGProps.targetX"
					}
				},
				{
					"id": 543,
					"name": "targetY",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 2727,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "SVGProps.targetY"
					}
				},
				{
					"id": 544,
					"name": "textAnchor",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 2728,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "SVGProps.textAnchor"
					}
				},
				{
					"id": 545,
					"name": "textDecoration",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 2729,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "SVGProps.textDecoration"
					}
				},
				{
					"id": 546,
					"name": "textLength",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 2730,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "SVGProps.textLength"
					}
				},
				{
					"id": 547,
					"name": "textRendering",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 2731,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "SVGProps.textRendering"
					}
				},
				{
					"id": 548,
					"name": "to",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 2732,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "SVGProps.to"
					}
				},
				{
					"id": 549,
					"name": "transform",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 2733,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "SVGProps.transform"
					}
				},
				{
					"id": 350,
					"name": "type",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 2529,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "SVGProps.type"
					}
				},
				{
					"id": 550,
					"name": "u1",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 2734,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "SVGProps.u1"
					}
				},
				{
					"id": 551,
					"name": "u2",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 2735,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "SVGProps.u2"
					}
				},
				{
					"id": 552,
					"name": "underlinePosition",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 2736,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "SVGProps.underlinePosition"
					}
				},
				{
					"id": 553,
					"name": "underlineThickness",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 2737,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "SVGProps.underlineThickness"
					}
				},
				{
					"id": 554,
					"name": "unicode",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 2738,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "SVGProps.unicode"
					}
				},
				{
					"id": 555,
					"name": "unicodeBidi",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 2739,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "SVGProps.unicodeBidi"
					}
				},
				{
					"id": 556,
					"name": "unicodeRange",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 2740,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "SVGProps.unicodeRange"
					}
				},
				{
					"id": 557,
					"name": "unitsPerEm",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 2741,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "SVGProps.unitsPerEm"
					}
				},
				{
					"id": 558,
					"name": "vAlphabetic",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 2742,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "SVGProps.vAlphabetic"
					}
				},
				{
					"id": 565,
					"name": "vHanging",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 2749,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "SVGProps.vHanging"
					}
				},
				{
					"id": 566,
					"name": "vIdeographic",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 2750,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "SVGProps.vIdeographic"
					}
				},
				{
					"id": 570,
					"name": "vMathematical",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 2754,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "SVGProps.vMathematical"
					}
				},
				{
					"id": 559,
					"name": "values",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 2743,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "SVGProps.values"
					}
				},
				{
					"id": 560,
					"name": "vectorEffect",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 2744,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "SVGProps.vectorEffect"
					}
				},
				{
					"id": 561,
					"name": "version",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 2745,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "SVGProps.version"
					}
				},
				{
					"id": 562,
					"name": "vertAdvY",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 2746,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "SVGProps.vertAdvY"
					}
				},
				{
					"id": 563,
					"name": "vertOriginX",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 2747,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "SVGProps.vertOriginX"
					}
				},
				{
					"id": 564,
					"name": "vertOriginY",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 2748,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "SVGProps.vertOriginY"
					}
				},
				{
					"id": 567,
					"name": "viewBox",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 2751,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "SVGProps.viewBox"
					}
				},
				{
					"id": 568,
					"name": "viewTarget",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 2752,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "SVGProps.viewTarget"
					}
				},
				{
					"id": 569,
					"name": "visibility",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 2753,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "SVGProps.visibility"
					}
				},
				{
					"id": 351,
					"name": "width",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 2530,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "SVGProps.width"
					}
				},
				{
					"id": 571,
					"name": "widths",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 2755,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "SVGProps.widths"
					}
				},
				{
					"id": 572,
					"name": "wordSpacing",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 2756,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "SVGProps.wordSpacing"
					}
				},
				{
					"id": 573,
					"name": "writingMode",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 2757,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "SVGProps.writingMode"
					}
				},
				{
					"id": 576,
					"name": "x",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 2760,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "SVGProps.x"
					}
				},
				{
					"id": 574,
					"name": "x1",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 2758,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "SVGProps.x1"
					}
				},
				{
					"id": 575,
					"name": "x2",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 2759,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "SVGProps.x2"
					}
				},
				{
					"id": 577,
					"name": "xChannelSelector",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 2761,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "SVGProps.xChannelSelector"
					}
				},
				{
					"id": 578,
					"name": "xHeight",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 2762,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "SVGProps.xHeight"
					}
				},
				{
					"id": 579,
					"name": "xlinkActuate",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 2763,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "SVGProps.xlinkActuate"
					}
				},
				{
					"id": 580,
					"name": "xlinkArcrole",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 2764,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "SVGProps.xlinkArcrole"
					}
				},
				{
					"id": 581,
					"name": "xlinkHref",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 2765,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "SVGProps.xlinkHref"
					}
				},
				{
					"id": 582,
					"name": "xlinkRole",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 2766,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "SVGProps.xlinkRole"
					}
				},
				{
					"id": 583,
					"name": "xlinkShow",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 2767,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "SVGProps.xlinkShow"
					}
				},
				{
					"id": 584,
					"name": "xlinkTitle",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 2768,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "SVGProps.xlinkTitle"
					}
				},
				{
					"id": 585,
					"name": "xlinkType",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 2769,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "SVGProps.xlinkType"
					}
				},
				{
					"id": 586,
					"name": "xmlBase",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 2770,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "SVGProps.xmlBase"
					}
				},
				{
					"id": 587,
					"name": "xmlLang",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 2771,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "SVGProps.xmlLang"
					}
				},
				{
					"id": 590,
					"name": "xmlSpace",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 2774,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "SVGProps.xmlSpace"
					}
				},
				{
					"id": 588,
					"name": "xmlns",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 2772,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "SVGProps.xmlns"
					}
				},
				{
					"id": 589,
					"name": "xmlnsXlink",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 2773,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "SVGProps.xmlnsXlink"
					}
				},
				{
					"id": 593,
					"name": "y",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 2777,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "SVGProps.y"
					}
				},
				{
					"id": 591,
					"name": "y1",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 2775,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "SVGProps.y1"
					}
				},
				{
					"id": 592,
					"name": "y2",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 2776,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "SVGProps.y2"
					}
				},
				{
					"id": 594,
					"name": "yChannelSelector",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 2778,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "SVGProps.yChannelSelector"
					}
				},
				{
					"id": 595,
					"name": "z",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 2779,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "SVGProps.z"
					}
				},
				{
					"id": 596,
					"name": "zoomAndPan",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 2780,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "SVGProps.zoomAndPan"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						355,
						356,
						357,
						358,
						359,
						360,
						361,
						362,
						597,
						598,
						599,
						600,
						601,
						602,
						603,
						604,
						605,
						606,
						607,
						608,
						609,
						610,
						611,
						612,
						613,
						614,
						615,
						616,
						617,
						618,
						619,
						620,
						621,
						622,
						623,
						624,
						625,
						626,
						627,
						628,
						629,
						630,
						631,
						632,
						633,
						634,
						635,
						636,
						637,
						638,
						639,
						640,
						641,
						642,
						643,
						644,
						363,
						364,
						365,
						366,
						367,
						368,
						370,
						369,
						371,
						372,
						373,
						374,
						375,
						376,
						645,
						338,
						377,
						378,
						379,
						380,
						339,
						381,
						382,
						383,
						384,
						385,
						386,
						354,
						387,
						388,
						389,
						390,
						646,
						391,
						392,
						393,
						394,
						395,
						396,
						397,
						398,
						399,
						400,
						401,
						402,
						403,
						404,
						405,
						406,
						407,
						408,
						409,
						410,
						411,
						412,
						413,
						414,
						415,
						416,
						417,
						418,
						419,
						420,
						421,
						422,
						423,
						424,
						425,
						426,
						427,
						428,
						429,
						430,
						431,
						432,
						433,
						434,
						435,
						436,
						340,
						437,
						438,
						439,
						341,
						440,
						441,
						443,
						442,
						444,
						449,
						445,
						446,
						447,
						448,
						450,
						451,
						452,
						812,
						453,
						454,
						455,
						342,
						456,
						457,
						458,
						459,
						460,
						461,
						462,
						463,
						464,
						465,
						466,
						467,
						468,
						469,
						470,
						343,
						344,
						345,
						346,
						471,
						347,
						472,
						473,
						687,
						688,
						805,
						806,
						807,
						808,
						803,
						804,
						733,
						734,
						667,
						668,
						663,
						664,
						689,
						690,
						691,
						692,
						665,
						666,
						735,
						736,
						655,
						656,
						657,
						658,
						659,
						660,
						737,
						738,
						649,
						650,
						651,
						652,
						739,
						740,
						741,
						742,
						743,
						744,
						745,
						746,
						747,
						748,
						749,
						750,
						751,
						752,
						753,
						754,
						755,
						756,
						693,
						694,
						695,
						696,
						697,
						698,
						699,
						700,
						679,
						680,
						661,
						662,
						795,
						796,
						669,
						670,
						675,
						676,
						681,
						682,
						683,
						684,
						685,
						686,
						677,
						678,
						705,
						706,
						701,
						702,
						703,
						704,
						797,
						798,
						757,
						758,
						759,
						760,
						761,
						762,
						763,
						764,
						765,
						766,
						767,
						768,
						653,
						654,
						707,
						708,
						709,
						710,
						711,
						712,
						785,
						786,
						779,
						780,
						787,
						788,
						789,
						790,
						781,
						782,
						793,
						794,
						791,
						792,
						783,
						784,
						713,
						714,
						715,
						716,
						671,
						672,
						717,
						718,
						799,
						800,
						719,
						720,
						721,
						722,
						769,
						770,
						723,
						724,
						673,
						674,
						725,
						726,
						727,
						728,
						771,
						772,
						773,
						774,
						775,
						776,
						777,
						778,
						809,
						810,
						729,
						730,
						731,
						732,
						801,
						802,
						474,
						475,
						476,
						477,
						478,
						479,
						480,
						481,
						482,
						483,
						484,
						485,
						486,
						487,
						488,
						489,
						490,
						491,
						492,
						493,
						494,
						495,
						496,
						497,
						498,
						499,
						811,
						500,
						501,
						502,
						503,
						504,
						505,
						506,
						507,
						508,
						352,
						509,
						510,
						511,
						512,
						513,
						514,
						337,
						515,
						516,
						517,
						518,
						519,
						520,
						521,
						522,
						523,
						524,
						525,
						526,
						527,
						528,
						529,
						530,
						531,
						532,
						533,
						534,
						535,
						536,
						537,
						538,
						348,
						539,
						540,
						353,
						541,
						349,
						542,
						543,
						544,
						545,
						546,
						547,
						548,
						549,
						350,
						550,
						551,
						552,
						553,
						554,
						555,
						556,
						557,
						558,
						565,
						566,
						570,
						559,
						560,
						561,
						562,
						563,
						564,
						567,
						568,
						569,
						351,
						571,
						572,
						573,
						576,
						574,
						575,
						577,
						578,
						579,
						580,
						581,
						582,
						583,
						584,
						585,
						586,
						587,
						590,
						588,
						589,
						593,
						591,
						592,
						594,
						595,
						596
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/core/src/Spinner/index.tsx",
					"line": 5,
					"character": 17,
					"url": "https://github.com/dilan-dio4/tulsa/blob/3f22e3f/packages/core/src/Spinner/index.tsx#L5"
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"typeArguments": [
						{
							"type": "reference",
							"name": "SVGSVGElement",
							"qualifiedName": "SVGSVGElement",
							"package": "typescript"
						}
					],
					"name": "SVGProps",
					"qualifiedName": "React.SVGProps",
					"package": "@types/react"
				}
			]
		},
		{
			"id": 48,
			"name": "ITextArea",
			"kind": 256,
			"kindString": "Interface",
			"flags": {},
			"children": [
				{
					"id": 89,
					"name": "about",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1881,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "DetailedHTMLProps.about"
					}
				},
				{
					"id": 71,
					"name": "accessKey",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1856,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "DetailedHTMLProps.accessKey"
					}
				},
				{
					"id": 111,
					"name": "aria-activedescendant",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Identifies the currently active element when DOM focus is on a composite widget, textbox, group, or application."
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1590,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "DetailedHTMLProps.aria-activedescendant"
					}
				},
				{
					"id": 112,
					"name": "aria-atomic",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Indicates whether assistive technologies will present all, or only parts of, the changed region based on the change notifications defined by the aria-relevant attribute."
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1592,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"name": "Booleanish",
						"qualifiedName": "Booleanish",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "DetailedHTMLProps.aria-atomic"
					}
				},
				{
					"id": 113,
					"name": "aria-autocomplete",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Indicates whether inputting text could trigger display of one or more predictions of the user's intended value for an input and specifies how predictions would be\npresented if they are made."
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1597,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": "inline"
							},
							{
								"type": "literal",
								"value": "both"
							},
							{
								"type": "literal",
								"value": "none"
							},
							{
								"type": "literal",
								"value": "list"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "DetailedHTMLProps.aria-autocomplete"
					}
				},
				{
					"id": 114,
					"name": "aria-busy",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Indicates an element is being modified and that assistive technologies MAY want to wait until the modifications are complete before exposing them to the user."
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1599,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"name": "Booleanish",
						"qualifiedName": "Booleanish",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "DetailedHTMLProps.aria-busy"
					}
				},
				{
					"id": 115,
					"name": "aria-checked",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Indicates the current \"checked\" state of checkboxes, radio buttons, and other widgets."
							}
						],
						"blockTags": [
							{
								"tag": "@see",
								"content": [
									{
										"kind": "text",
										"text": " - "
									},
									{
										"kind": "text",
										"text": "aria-pressed"
									},
									{
										"kind": "text",
										"text": "\n"
									},
									{
										"kind": "text",
										"text": " - "
									},
									{
										"kind": "text",
										"text": "aria-selected."
									},
									{
										"kind": "text",
										"text": "\n"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1604,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "boolean"
							},
							{
								"type": "literal",
								"value": "mixed"
							},
							{
								"type": "literal",
								"value": "false"
							},
							{
								"type": "literal",
								"value": "true"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "DetailedHTMLProps.aria-checked"
					}
				},
				{
					"id": 116,
					"name": "aria-colcount",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Defines the total number of columns in a table, grid, or treegrid."
							}
						],
						"blockTags": [
							{
								"tag": "@see",
								"content": [
									{
										"kind": "text",
										"text": "aria-colindex."
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1609,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "DetailedHTMLProps.aria-colcount"
					}
				},
				{
					"id": 117,
					"name": "aria-colindex",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Defines an element's column index or position with respect to the total number of columns within a table, grid, or treegrid."
							}
						],
						"blockTags": [
							{
								"tag": "@see",
								"content": [
									{
										"kind": "text",
										"text": " - "
									},
									{
										"kind": "text",
										"text": "aria-colcount"
									},
									{
										"kind": "text",
										"text": "\n"
									},
									{
										"kind": "text",
										"text": " - "
									},
									{
										"kind": "text",
										"text": "aria-colspan."
									},
									{
										"kind": "text",
										"text": "\n"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1614,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "DetailedHTMLProps.aria-colindex"
					}
				},
				{
					"id": 118,
					"name": "aria-colspan",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Defines the number of columns spanned by a cell or gridcell within a table, grid, or treegrid."
							}
						],
						"blockTags": [
							{
								"tag": "@see",
								"content": [
									{
										"kind": "text",
										"text": " - "
									},
									{
										"kind": "text",
										"text": "aria-colindex"
									},
									{
										"kind": "text",
										"text": "\n"
									},
									{
										"kind": "text",
										"text": " - "
									},
									{
										"kind": "text",
										"text": "aria-rowspan."
									},
									{
										"kind": "text",
										"text": "\n"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1619,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "DetailedHTMLProps.aria-colspan"
					}
				},
				{
					"id": 119,
					"name": "aria-controls",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Identifies the element (or elements) whose contents or presence are controlled by the current element."
							}
						],
						"blockTags": [
							{
								"tag": "@see",
								"content": [
									{
										"kind": "text",
										"text": "aria-owns."
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1624,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "DetailedHTMLProps.aria-controls"
					}
				},
				{
					"id": 120,
					"name": "aria-current",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Indicates the element that represents the current item within a container or set of related elements."
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1626,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "boolean"
							},
							{
								"type": "literal",
								"value": "location"
							},
							{
								"type": "literal",
								"value": "time"
							},
							{
								"type": "literal",
								"value": "page"
							},
							{
								"type": "literal",
								"value": "false"
							},
							{
								"type": "literal",
								"value": "true"
							},
							{
								"type": "literal",
								"value": "step"
							},
							{
								"type": "literal",
								"value": "date"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "DetailedHTMLProps.aria-current"
					}
				},
				{
					"id": 121,
					"name": "aria-describedby",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Identifies the element (or elements) that describes the object."
							}
						],
						"blockTags": [
							{
								"tag": "@see",
								"content": [
									{
										"kind": "text",
										"text": "aria-labelledby"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1631,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "DetailedHTMLProps.aria-describedby"
					}
				},
				{
					"id": 122,
					"name": "aria-details",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Identifies the element that provides a detailed, extended description for the object."
							}
						],
						"blockTags": [
							{
								"tag": "@see",
								"content": [
									{
										"kind": "text",
										"text": "aria-describedby."
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1636,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "DetailedHTMLProps.aria-details"
					}
				},
				{
					"id": 123,
					"name": "aria-disabled",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Indicates that the element is perceivable but disabled, so it is not editable or otherwise operable."
							}
						],
						"blockTags": [
							{
								"tag": "@see",
								"content": [
									{
										"kind": "text",
										"text": " - "
									},
									{
										"kind": "text",
										"text": "aria-hidden"
									},
									{
										"kind": "text",
										"text": "\n"
									},
									{
										"kind": "text",
										"text": " - "
									},
									{
										"kind": "text",
										"text": "aria-readonly."
									},
									{
										"kind": "text",
										"text": "\n"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1641,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"name": "Booleanish",
						"qualifiedName": "Booleanish",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "DetailedHTMLProps.aria-disabled"
					}
				},
				{
					"id": 124,
					"name": "aria-dropeffect",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Indicates what functions can be performed when a dragged object is released on the drop target."
							}
						],
						"blockTags": [
							{
								"tag": "@deprecated",
								"content": [
									{
										"kind": "text",
										"text": "in ARIA 1.1"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1646,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": "link"
							},
							{
								"type": "literal",
								"value": "none"
							},
							{
								"type": "literal",
								"value": "copy"
							},
							{
								"type": "literal",
								"value": "move"
							},
							{
								"type": "literal",
								"value": "execute"
							},
							{
								"type": "literal",
								"value": "popup"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "DetailedHTMLProps.aria-dropeffect"
					}
				},
				{
					"id": 125,
					"name": "aria-errormessage",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Identifies the element that provides an error message for the object."
							}
						],
						"blockTags": [
							{
								"tag": "@see",
								"content": [
									{
										"kind": "text",
										"text": " - "
									},
									{
										"kind": "text",
										"text": "aria-invalid"
									},
									{
										"kind": "text",
										"text": "\n"
									},
									{
										"kind": "text",
										"text": " - "
									},
									{
										"kind": "text",
										"text": "aria-describedby."
									},
									{
										"kind": "text",
										"text": "\n"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1651,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "DetailedHTMLProps.aria-errormessage"
					}
				},
				{
					"id": 126,
					"name": "aria-expanded",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Indicates whether the element, or another grouping element it controls, is currently expanded or collapsed."
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1653,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"name": "Booleanish",
						"qualifiedName": "Booleanish",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "DetailedHTMLProps.aria-expanded"
					}
				},
				{
					"id": 127,
					"name": "aria-flowto",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Identifies the next element (or elements) in an alternate reading order of content which, at the user's discretion,\nallows assistive technology to override the general default of reading in document source order."
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1658,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "DetailedHTMLProps.aria-flowto"
					}
				},
				{
					"id": 128,
					"name": "aria-grabbed",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Indicates an element's \"grabbed\" state in a drag-and-drop operation."
							}
						],
						"blockTags": [
							{
								"tag": "@deprecated",
								"content": [
									{
										"kind": "text",
										"text": "in ARIA 1.1"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1663,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"name": "Booleanish",
						"qualifiedName": "Booleanish",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "DetailedHTMLProps.aria-grabbed"
					}
				},
				{
					"id": 129,
					"name": "aria-haspopup",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Indicates the availability and type of interactive popup element, such as menu or dialog, that can be triggered by an element."
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1665,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "boolean"
							},
							{
								"type": "literal",
								"value": "grid"
							},
							{
								"type": "literal",
								"value": "dialog"
							},
							{
								"type": "literal",
								"value": "menu"
							},
							{
								"type": "literal",
								"value": "listbox"
							},
							{
								"type": "literal",
								"value": "false"
							},
							{
								"type": "literal",
								"value": "true"
							},
							{
								"type": "literal",
								"value": "tree"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "DetailedHTMLProps.aria-haspopup"
					}
				},
				{
					"id": 130,
					"name": "aria-hidden",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Indicates whether the element is exposed to an accessibility API."
							}
						],
						"blockTags": [
							{
								"tag": "@see",
								"content": [
									{
										"kind": "text",
										"text": "aria-disabled."
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1670,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"name": "Booleanish",
						"qualifiedName": "Booleanish",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "DetailedHTMLProps.aria-hidden"
					}
				},
				{
					"id": 131,
					"name": "aria-invalid",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Indicates the entered value does not conform to the format expected by the application."
							}
						],
						"blockTags": [
							{
								"tag": "@see",
								"content": [
									{
										"kind": "text",
										"text": "aria-errormessage."
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1675,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "boolean"
							},
							{
								"type": "literal",
								"value": "false"
							},
							{
								"type": "literal",
								"value": "true"
							},
							{
								"type": "literal",
								"value": "grammar"
							},
							{
								"type": "literal",
								"value": "spelling"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "DetailedHTMLProps.aria-invalid"
					}
				},
				{
					"id": 132,
					"name": "aria-keyshortcuts",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Indicates keyboard shortcuts that an author has implemented to activate or give focus to an element."
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1677,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "DetailedHTMLProps.aria-keyshortcuts"
					}
				},
				{
					"id": 133,
					"name": "aria-label",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Defines a string value that labels the current element."
							}
						],
						"blockTags": [
							{
								"tag": "@see",
								"content": [
									{
										"kind": "text",
										"text": "aria-labelledby."
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1682,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "DetailedHTMLProps.aria-label"
					}
				},
				{
					"id": 134,
					"name": "aria-labelledby",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Identifies the element (or elements) that labels the current element."
							}
						],
						"blockTags": [
							{
								"tag": "@see",
								"content": [
									{
										"kind": "text",
										"text": "aria-describedby."
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1687,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "DetailedHTMLProps.aria-labelledby"
					}
				},
				{
					"id": 135,
					"name": "aria-level",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Defines the hierarchical level of an element within a structure."
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1689,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "DetailedHTMLProps.aria-level"
					}
				},
				{
					"id": 136,
					"name": "aria-live",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Indicates that an element will be updated, and describes the types of updates the user agents, assistive technologies, and user can expect from the live region."
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1691,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": "off"
							},
							{
								"type": "literal",
								"value": "assertive"
							},
							{
								"type": "literal",
								"value": "polite"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "DetailedHTMLProps.aria-live"
					}
				},
				{
					"id": 137,
					"name": "aria-modal",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Indicates whether an element is modal when displayed."
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1693,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"name": "Booleanish",
						"qualifiedName": "Booleanish",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "DetailedHTMLProps.aria-modal"
					}
				},
				{
					"id": 138,
					"name": "aria-multiline",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Indicates whether a text box accepts multiple lines of input or only a single line."
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1695,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"name": "Booleanish",
						"qualifiedName": "Booleanish",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "DetailedHTMLProps.aria-multiline"
					}
				},
				{
					"id": 139,
					"name": "aria-multiselectable",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Indicates that the user may select more than one item from the current selectable descendants."
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1697,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"name": "Booleanish",
						"qualifiedName": "Booleanish",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "DetailedHTMLProps.aria-multiselectable"
					}
				},
				{
					"id": 140,
					"name": "aria-orientation",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Indicates whether the element's orientation is horizontal, vertical, or unknown/ambiguous."
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1699,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": "horizontal"
							},
							{
								"type": "literal",
								"value": "vertical"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "DetailedHTMLProps.aria-orientation"
					}
				},
				{
					"id": 141,
					"name": "aria-owns",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Identifies an element (or elements) in order to define a visual, functional, or contextual parent/child relationship\nbetween DOM elements where the DOM hierarchy cannot be used to represent the relationship."
							}
						],
						"blockTags": [
							{
								"tag": "@see",
								"content": [
									{
										"kind": "text",
										"text": "aria-controls."
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1705,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "DetailedHTMLProps.aria-owns"
					}
				},
				{
					"id": 142,
					"name": "aria-placeholder",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Defines a short hint (a word or short phrase) intended to aid the user with data entry when the control has no value.\nA hint could be a sample value or a brief description of the expected format."
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1710,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "DetailedHTMLProps.aria-placeholder"
					}
				},
				{
					"id": 143,
					"name": "aria-posinset",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Defines an element's number or position in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM."
							}
						],
						"blockTags": [
							{
								"tag": "@see",
								"content": [
									{
										"kind": "text",
										"text": "aria-setsize."
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1715,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "DetailedHTMLProps.aria-posinset"
					}
				},
				{
					"id": 144,
					"name": "aria-pressed",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Indicates the current \"pressed\" state of toggle buttons."
							}
						],
						"blockTags": [
							{
								"tag": "@see",
								"content": [
									{
										"kind": "text",
										"text": " - "
									},
									{
										"kind": "text",
										"text": "aria-checked"
									},
									{
										"kind": "text",
										"text": "\n"
									},
									{
										"kind": "text",
										"text": " - "
									},
									{
										"kind": "text",
										"text": "aria-selected."
									},
									{
										"kind": "text",
										"text": "\n"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1720,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "boolean"
							},
							{
								"type": "literal",
								"value": "mixed"
							},
							{
								"type": "literal",
								"value": "false"
							},
							{
								"type": "literal",
								"value": "true"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "DetailedHTMLProps.aria-pressed"
					}
				},
				{
					"id": 145,
					"name": "aria-readonly",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Indicates that the element is not editable, but is otherwise operable."
							}
						],
						"blockTags": [
							{
								"tag": "@see",
								"content": [
									{
										"kind": "text",
										"text": "aria-disabled."
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1725,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"name": "Booleanish",
						"qualifiedName": "Booleanish",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "DetailedHTMLProps.aria-readonly"
					}
				},
				{
					"id": 146,
					"name": "aria-relevant",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Indicates what notifications the user agent will trigger when the accessibility tree within a live region is modified."
							}
						],
						"blockTags": [
							{
								"tag": "@see",
								"content": [
									{
										"kind": "text",
										"text": "aria-atomic."
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1730,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": "all"
							},
							{
								"type": "literal",
								"value": "text"
							},
							{
								"type": "literal",
								"value": "additions"
							},
							{
								"type": "literal",
								"value": "additions removals"
							},
							{
								"type": "literal",
								"value": "additions text"
							},
							{
								"type": "literal",
								"value": "removals"
							},
							{
								"type": "literal",
								"value": "removals additions"
							},
							{
								"type": "literal",
								"value": "removals text"
							},
							{
								"type": "literal",
								"value": "text additions"
							},
							{
								"type": "literal",
								"value": "text removals"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "DetailedHTMLProps.aria-relevant"
					}
				},
				{
					"id": 147,
					"name": "aria-required",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Indicates that user input is required on the element before a form may be submitted."
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1732,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"name": "Booleanish",
						"qualifiedName": "Booleanish",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "DetailedHTMLProps.aria-required"
					}
				},
				{
					"id": 148,
					"name": "aria-roledescription",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Defines a human-readable, author-localized description for the role of an element."
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1734,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "DetailedHTMLProps.aria-roledescription"
					}
				},
				{
					"id": 149,
					"name": "aria-rowcount",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Defines the total number of rows in a table, grid, or treegrid."
							}
						],
						"blockTags": [
							{
								"tag": "@see",
								"content": [
									{
										"kind": "text",
										"text": "aria-rowindex."
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1739,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "DetailedHTMLProps.aria-rowcount"
					}
				},
				{
					"id": 150,
					"name": "aria-rowindex",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Defines an element's row index or position with respect to the total number of rows within a table, grid, or treegrid."
							}
						],
						"blockTags": [
							{
								"tag": "@see",
								"content": [
									{
										"kind": "text",
										"text": " - "
									},
									{
										"kind": "text",
										"text": "aria-rowcount"
									},
									{
										"kind": "text",
										"text": "\n"
									},
									{
										"kind": "text",
										"text": " - "
									},
									{
										"kind": "text",
										"text": "aria-rowspan."
									},
									{
										"kind": "text",
										"text": "\n"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1744,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "DetailedHTMLProps.aria-rowindex"
					}
				},
				{
					"id": 151,
					"name": "aria-rowspan",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Defines the number of rows spanned by a cell or gridcell within a table, grid, or treegrid."
							}
						],
						"blockTags": [
							{
								"tag": "@see",
								"content": [
									{
										"kind": "text",
										"text": " - "
									},
									{
										"kind": "text",
										"text": "aria-rowindex"
									},
									{
										"kind": "text",
										"text": "\n"
									},
									{
										"kind": "text",
										"text": " - "
									},
									{
										"kind": "text",
										"text": "aria-colspan."
									},
									{
										"kind": "text",
										"text": "\n"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1749,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "DetailedHTMLProps.aria-rowspan"
					}
				},
				{
					"id": 152,
					"name": "aria-selected",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Indicates the current \"selected\" state of various widgets."
							}
						],
						"blockTags": [
							{
								"tag": "@see",
								"content": [
									{
										"kind": "text",
										"text": " - "
									},
									{
										"kind": "text",
										"text": "aria-checked"
									},
									{
										"kind": "text",
										"text": "\n"
									},
									{
										"kind": "text",
										"text": " - "
									},
									{
										"kind": "text",
										"text": "aria-pressed."
									},
									{
										"kind": "text",
										"text": "\n"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1754,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"name": "Booleanish",
						"qualifiedName": "Booleanish",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "DetailedHTMLProps.aria-selected"
					}
				},
				{
					"id": 153,
					"name": "aria-setsize",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Defines the number of items in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM."
							}
						],
						"blockTags": [
							{
								"tag": "@see",
								"content": [
									{
										"kind": "text",
										"text": "aria-posinset."
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1759,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "DetailedHTMLProps.aria-setsize"
					}
				},
				{
					"id": 154,
					"name": "aria-sort",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Indicates if items in a table or grid are sorted in ascending or descending order."
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1761,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": "none"
							},
							{
								"type": "literal",
								"value": "ascending"
							},
							{
								"type": "literal",
								"value": "descending"
							},
							{
								"type": "literal",
								"value": "other"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "DetailedHTMLProps.aria-sort"
					}
				},
				{
					"id": 155,
					"name": "aria-valuemax",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Defines the maximum allowed value for a range widget."
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1763,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "DetailedHTMLProps.aria-valuemax"
					}
				},
				{
					"id": 156,
					"name": "aria-valuemin",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Defines the minimum allowed value for a range widget."
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1765,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "DetailedHTMLProps.aria-valuemin"
					}
				},
				{
					"id": 157,
					"name": "aria-valuenow",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Defines the current value for a range widget."
							}
						],
						"blockTags": [
							{
								"tag": "@see",
								"content": [
									{
										"kind": "text",
										"text": "aria-valuetext."
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1770,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "DetailedHTMLProps.aria-valuenow"
					}
				},
				{
					"id": 158,
					"name": "aria-valuetext",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Defines the human readable text alternative of aria-valuenow for a range widget."
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1772,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "DetailedHTMLProps.aria-valuetext"
					}
				},
				{
					"id": 97,
					"name": "autoCapitalize",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1891,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "DetailedHTMLProps.autoCapitalize"
					}
				},
				{
					"id": 51,
					"name": "autoComplete",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 2445,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "DetailedHTMLProps.autoComplete"
					}
				},
				{
					"id": 98,
					"name": "autoCorrect",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1892,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "DetailedHTMLProps.autoCorrect"
					}
				},
				{
					"id": 52,
					"name": "autoFocus",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 2446,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "DetailedHTMLProps.autoFocus"
					}
				},
				{
					"id": 99,
					"name": "autoSave",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1893,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "DetailedHTMLProps.autoSave"
					}
				},
				{
					"id": 159,
					"name": "children",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1376,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"name": "ReactNode",
						"qualifiedName": "React.ReactNode",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "DetailedHTMLProps.children"
					}
				},
				{
					"id": 72,
					"name": "className",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1857,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "DetailedHTMLProps.className"
					}
				},
				{
					"id": 100,
					"name": "color",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1894,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "DetailedHTMLProps.color"
					}
				},
				{
					"id": 53,
					"name": "cols",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 2447,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "DetailedHTMLProps.cols"
					}
				},
				{
					"id": 73,
					"name": "contentEditable",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1858,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": "inherit"
							},
							{
								"type": "reference",
								"name": "Booleanish",
								"qualifiedName": "Booleanish",
								"package": "@types/react"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "DetailedHTMLProps.contentEditable"
					}
				},
				{
					"id": 74,
					"name": "contextMenu",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1859,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "DetailedHTMLProps.contextMenu"
					}
				},
				{
					"id": 160,
					"name": "dangerouslySetInnerHTML",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1377,
							"character": 8
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 161,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 162,
									"name": "__html",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isExternal": true
									},
									"sources": [
										{
											"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
											"line": 1378,
											"character": 12
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										162
									]
								}
							],
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
									"line": 1377,
									"character": 34
								}
							]
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "DetailedHTMLProps.dangerouslySetInnerHTML"
					}
				},
				{
					"id": 90,
					"name": "datatype",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1882,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "DetailedHTMLProps.datatype"
					}
				},
				{
					"id": 67,
					"name": "defaultChecked",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1850,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "DetailedHTMLProps.defaultChecked"
					}
				},
				{
					"id": 68,
					"name": "defaultValue",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1851,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "number"
							},
							{
								"type": "typeOperator",
								"operator": "readonly",
								"target": {
									"type": "array",
									"elementType": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "DetailedHTMLProps.defaultValue"
					}
				},
				{
					"id": 75,
					"name": "dir",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1860,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "DetailedHTMLProps.dir"
					}
				},
				{
					"id": 54,
					"name": "dirName",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 2448,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "DetailedHTMLProps.dirName"
					}
				},
				{
					"id": 55,
					"name": "disabled",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 2449,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "DetailedHTMLProps.disabled"
					}
				},
				{
					"id": 76,
					"name": "draggable",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1861,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"name": "Booleanish",
						"qualifiedName": "Booleanish",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "DetailedHTMLProps.draggable"
					}
				},
				{
					"id": 56,
					"name": "form",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 2450,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "DetailedHTMLProps.form"
					}
				},
				{
					"id": 77,
					"name": "hidden",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1862,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "DetailedHTMLProps.hidden"
					}
				},
				{
					"id": 78,
					"name": "id",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1863,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "DetailedHTMLProps.id"
					}
				},
				{
					"id": 91,
					"name": "inlist",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1883,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "DetailedHTMLProps.inlist"
					}
				},
				{
					"id": 109,
					"name": "inputMode",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Hints at the type of data that might be entered by the user while editing the element or its contents"
							}
						],
						"blockTags": [
							{
								"tag": "@see",
								"content": [
									{
										"kind": "text",
										"text": "https://html.spec.whatwg.org/multipage/interaction.html#input-modalities:-the-inputmode-attribute"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1909,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": "search"
							},
							{
								"type": "literal",
								"value": "numeric"
							},
							{
								"type": "literal",
								"value": "none"
							},
							{
								"type": "literal",
								"value": "url"
							},
							{
								"type": "literal",
								"value": "text"
							},
							{
								"type": "literal",
								"value": "tel"
							},
							{
								"type": "literal",
								"value": "email"
							},
							{
								"type": "literal",
								"value": "decimal"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "DetailedHTMLProps.inputMode"
					}
				},
				{
					"id": 110,
					"name": "is",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Specify that a standard HTML element should behave like a defined custom built-in element"
							}
						],
						"blockTags": [
							{
								"tag": "@see",
								"content": [
									{
										"kind": "text",
										"text": "https://html.spec.whatwg.org/multipage/custom-elements.html#attr-is"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1914,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "DetailedHTMLProps.is"
					}
				},
				{
					"id": 104,
					"name": "itemID",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1898,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "DetailedHTMLProps.itemID"
					}
				},
				{
					"id": 101,
					"name": "itemProp",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1895,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "DetailedHTMLProps.itemProp"
					}
				},
				{
					"id": 105,
					"name": "itemRef",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1899,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "DetailedHTMLProps.itemRef"
					}
				},
				{
					"id": 102,
					"name": "itemScope",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1896,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "DetailedHTMLProps.itemScope"
					}
				},
				{
					"id": 103,
					"name": "itemType",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1897,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "DetailedHTMLProps.itemType"
					}
				},
				{
					"id": 50,
					"name": "key",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 132,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"name": "Key",
						"qualifiedName": "React.Key",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "DetailedHTMLProps.key"
					}
				},
				{
					"id": 79,
					"name": "lang",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1864,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "DetailedHTMLProps.lang"
					}
				},
				{
					"id": 57,
					"name": "maxLength",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 2451,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "DetailedHTMLProps.maxLength"
					}
				},
				{
					"id": 58,
					"name": "minLength",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 2452,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "DetailedHTMLProps.minLength"
					}
				},
				{
					"id": 59,
					"name": "name",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 2453,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "DetailedHTMLProps.name"
					}
				},
				{
					"id": 80,
					"name": "nonce",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1865,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "DetailedHTMLProps.nonce"
					}
				},
				{
					"id": 200,
					"name": "onAbort",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1434,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLTextAreaElement",
								"qualifiedName": "HTMLTextAreaElement",
								"package": "typescript"
							}
						],
						"name": "ReactEventHandler",
						"qualifiedName": "React.ReactEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "DetailedHTMLProps.onAbort"
					}
				},
				{
					"id": 201,
					"name": "onAbortCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1435,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLTextAreaElement",
								"qualifiedName": "HTMLTextAreaElement",
								"package": "typescript"
							}
						],
						"name": "ReactEventHandler",
						"qualifiedName": "React.ReactEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "DetailedHTMLProps.onAbortCapture"
					}
				},
				{
					"id": 318,
					"name": "onAnimationEnd",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1566,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLTextAreaElement",
								"qualifiedName": "HTMLTextAreaElement",
								"package": "typescript"
							}
						],
						"name": "AnimationEventHandler",
						"qualifiedName": "React.AnimationEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "DetailedHTMLProps.onAnimationEnd"
					}
				},
				{
					"id": 319,
					"name": "onAnimationEndCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1567,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLTextAreaElement",
								"qualifiedName": "HTMLTextAreaElement",
								"package": "typescript"
							}
						],
						"name": "AnimationEventHandler",
						"qualifiedName": "React.AnimationEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "DetailedHTMLProps.onAnimationEndCapture"
					}
				},
				{
					"id": 320,
					"name": "onAnimationIteration",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1568,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLTextAreaElement",
								"qualifiedName": "HTMLTextAreaElement",
								"package": "typescript"
							}
						],
						"name": "AnimationEventHandler",
						"qualifiedName": "React.AnimationEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "DetailedHTMLProps.onAnimationIteration"
					}
				},
				{
					"id": 321,
					"name": "onAnimationIterationCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1569,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLTextAreaElement",
								"qualifiedName": "HTMLTextAreaElement",
								"package": "typescript"
							}
						],
						"name": "AnimationEventHandler",
						"qualifiedName": "React.AnimationEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "DetailedHTMLProps.onAnimationIterationCapture"
					}
				},
				{
					"id": 316,
					"name": "onAnimationStart",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1564,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLTextAreaElement",
								"qualifiedName": "HTMLTextAreaElement",
								"package": "typescript"
							}
						],
						"name": "AnimationEventHandler",
						"qualifiedName": "React.AnimationEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "DetailedHTMLProps.onAnimationStart"
					}
				},
				{
					"id": 317,
					"name": "onAnimationStartCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1565,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLTextAreaElement",
								"qualifiedName": "HTMLTextAreaElement",
								"package": "typescript"
							}
						],
						"name": "AnimationEventHandler",
						"qualifiedName": "React.AnimationEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "DetailedHTMLProps.onAnimationStartCapture"
					}
				},
				{
					"id": 246,
					"name": "onAuxClick",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1482,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLTextAreaElement",
								"qualifiedName": "HTMLTextAreaElement",
								"package": "typescript"
							}
						],
						"name": "MouseEventHandler",
						"qualifiedName": "React.MouseEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "DetailedHTMLProps.onAuxClick"
					}
				},
				{
					"id": 247,
					"name": "onAuxClickCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1483,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLTextAreaElement",
								"qualifiedName": "HTMLTextAreaElement",
								"package": "typescript"
							}
						],
						"name": "MouseEventHandler",
						"qualifiedName": "React.MouseEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "DetailedHTMLProps.onAuxClickCapture"
					}
				},
				{
					"id": 180,
					"name": "onBeforeInput",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1406,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLTextAreaElement",
								"qualifiedName": "HTMLTextAreaElement",
								"package": "typescript"
							}
						],
						"name": "FormEventHandler",
						"qualifiedName": "React.FormEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "DetailedHTMLProps.onBeforeInput"
					}
				},
				{
					"id": 181,
					"name": "onBeforeInputCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1407,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLTextAreaElement",
								"qualifiedName": "HTMLTextAreaElement",
								"package": "typescript"
							}
						],
						"name": "FormEventHandler",
						"qualifiedName": "React.FormEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "DetailedHTMLProps.onBeforeInputCapture"
					}
				},
				{
					"id": 177,
					"name": "onBlur",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1400,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLTextAreaElement",
								"qualifiedName": "HTMLTextAreaElement",
								"package": "typescript"
							}
						],
						"name": "FocusEventHandler",
						"qualifiedName": "React.FocusEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "DetailedHTMLProps.onBlur"
					}
				},
				{
					"id": 178,
					"name": "onBlurCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1401,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLTextAreaElement",
								"qualifiedName": "HTMLTextAreaElement",
								"package": "typescript"
							}
						],
						"name": "FocusEventHandler",
						"qualifiedName": "React.FocusEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "DetailedHTMLProps.onBlurCapture"
					}
				},
				{
					"id": 202,
					"name": "onCanPlay",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1436,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLTextAreaElement",
								"qualifiedName": "HTMLTextAreaElement",
								"package": "typescript"
							}
						],
						"name": "ReactEventHandler",
						"qualifiedName": "React.ReactEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "DetailedHTMLProps.onCanPlay"
					}
				},
				{
					"id": 203,
					"name": "onCanPlayCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1437,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLTextAreaElement",
								"qualifiedName": "HTMLTextAreaElement",
								"package": "typescript"
							}
						],
						"name": "ReactEventHandler",
						"qualifiedName": "React.ReactEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "DetailedHTMLProps.onCanPlayCapture"
					}
				},
				{
					"id": 204,
					"name": "onCanPlayThrough",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1438,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLTextAreaElement",
								"qualifiedName": "HTMLTextAreaElement",
								"package": "typescript"
							}
						],
						"name": "ReactEventHandler",
						"qualifiedName": "React.ReactEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "DetailedHTMLProps.onCanPlayThrough"
					}
				},
				{
					"id": 205,
					"name": "onCanPlayThroughCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1439,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLTextAreaElement",
								"qualifiedName": "HTMLTextAreaElement",
								"package": "typescript"
							}
						],
						"name": "ReactEventHandler",
						"qualifiedName": "React.ReactEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "DetailedHTMLProps.onCanPlayThroughCapture"
					}
				},
				{
					"id": 66,
					"name": "onChange",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 2461,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLTextAreaElement",
								"qualifiedName": "HTMLTextAreaElement",
								"package": "typescript"
							}
						],
						"name": "ChangeEventHandler",
						"qualifiedName": "React.ChangeEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "DetailedHTMLProps.onChange"
					}
				},
				{
					"id": 179,
					"name": "onChangeCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1405,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLTextAreaElement",
								"qualifiedName": "HTMLTextAreaElement",
								"package": "typescript"
							}
						],
						"name": "FormEventHandler",
						"qualifiedName": "React.FormEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "DetailedHTMLProps.onChangeCapture"
					}
				},
				{
					"id": 248,
					"name": "onClick",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1484,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLTextAreaElement",
								"qualifiedName": "HTMLTextAreaElement",
								"package": "typescript"
							}
						],
						"name": "MouseEventHandler",
						"qualifiedName": "React.MouseEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "DetailedHTMLProps.onClick"
					}
				},
				{
					"id": 249,
					"name": "onClickCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1485,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLTextAreaElement",
								"qualifiedName": "HTMLTextAreaElement",
								"package": "typescript"
							}
						],
						"name": "MouseEventHandler",
						"qualifiedName": "React.MouseEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "DetailedHTMLProps.onClickCapture"
					}
				},
				{
					"id": 169,
					"name": "onCompositionEnd",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1390,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLTextAreaElement",
								"qualifiedName": "HTMLTextAreaElement",
								"package": "typescript"
							}
						],
						"name": "CompositionEventHandler",
						"qualifiedName": "React.CompositionEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "DetailedHTMLProps.onCompositionEnd"
					}
				},
				{
					"id": 170,
					"name": "onCompositionEndCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1391,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLTextAreaElement",
								"qualifiedName": "HTMLTextAreaElement",
								"package": "typescript"
							}
						],
						"name": "CompositionEventHandler",
						"qualifiedName": "React.CompositionEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "DetailedHTMLProps.onCompositionEndCapture"
					}
				},
				{
					"id": 171,
					"name": "onCompositionStart",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1392,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLTextAreaElement",
								"qualifiedName": "HTMLTextAreaElement",
								"package": "typescript"
							}
						],
						"name": "CompositionEventHandler",
						"qualifiedName": "React.CompositionEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "DetailedHTMLProps.onCompositionStart"
					}
				},
				{
					"id": 172,
					"name": "onCompositionStartCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1393,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLTextAreaElement",
								"qualifiedName": "HTMLTextAreaElement",
								"package": "typescript"
							}
						],
						"name": "CompositionEventHandler",
						"qualifiedName": "React.CompositionEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "DetailedHTMLProps.onCompositionStartCapture"
					}
				},
				{
					"id": 173,
					"name": "onCompositionUpdate",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1394,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLTextAreaElement",
								"qualifiedName": "HTMLTextAreaElement",
								"package": "typescript"
							}
						],
						"name": "CompositionEventHandler",
						"qualifiedName": "React.CompositionEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "DetailedHTMLProps.onCompositionUpdate"
					}
				},
				{
					"id": 174,
					"name": "onCompositionUpdateCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1395,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLTextAreaElement",
								"qualifiedName": "HTMLTextAreaElement",
								"package": "typescript"
							}
						],
						"name": "CompositionEventHandler",
						"qualifiedName": "React.CompositionEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "DetailedHTMLProps.onCompositionUpdateCapture"
					}
				},
				{
					"id": 250,
					"name": "onContextMenu",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1486,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLTextAreaElement",
								"qualifiedName": "HTMLTextAreaElement",
								"package": "typescript"
							}
						],
						"name": "MouseEventHandler",
						"qualifiedName": "React.MouseEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "DetailedHTMLProps.onContextMenu"
					}
				},
				{
					"id": 251,
					"name": "onContextMenuCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1487,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLTextAreaElement",
								"qualifiedName": "HTMLTextAreaElement",
								"package": "typescript"
							}
						],
						"name": "MouseEventHandler",
						"qualifiedName": "React.MouseEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "DetailedHTMLProps.onContextMenuCapture"
					}
				},
				{
					"id": 163,
					"name": "onCopy",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1382,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLTextAreaElement",
								"qualifiedName": "HTMLTextAreaElement",
								"package": "typescript"
							}
						],
						"name": "ClipboardEventHandler",
						"qualifiedName": "React.ClipboardEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "DetailedHTMLProps.onCopy"
					}
				},
				{
					"id": 164,
					"name": "onCopyCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1383,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLTextAreaElement",
								"qualifiedName": "HTMLTextAreaElement",
								"package": "typescript"
							}
						],
						"name": "ClipboardEventHandler",
						"qualifiedName": "React.ClipboardEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "DetailedHTMLProps.onCopyCapture"
					}
				},
				{
					"id": 165,
					"name": "onCut",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1384,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLTextAreaElement",
								"qualifiedName": "HTMLTextAreaElement",
								"package": "typescript"
							}
						],
						"name": "ClipboardEventHandler",
						"qualifiedName": "React.ClipboardEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "DetailedHTMLProps.onCut"
					}
				},
				{
					"id": 166,
					"name": "onCutCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1385,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLTextAreaElement",
								"qualifiedName": "HTMLTextAreaElement",
								"package": "typescript"
							}
						],
						"name": "ClipboardEventHandler",
						"qualifiedName": "React.ClipboardEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "DetailedHTMLProps.onCutCapture"
					}
				},
				{
					"id": 252,
					"name": "onDoubleClick",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1488,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLTextAreaElement",
								"qualifiedName": "HTMLTextAreaElement",
								"package": "typescript"
							}
						],
						"name": "MouseEventHandler",
						"qualifiedName": "React.MouseEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "DetailedHTMLProps.onDoubleClick"
					}
				},
				{
					"id": 253,
					"name": "onDoubleClickCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1489,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLTextAreaElement",
								"qualifiedName": "HTMLTextAreaElement",
								"package": "typescript"
							}
						],
						"name": "MouseEventHandler",
						"qualifiedName": "React.MouseEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "DetailedHTMLProps.onDoubleClickCapture"
					}
				},
				{
					"id": 254,
					"name": "onDrag",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1490,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLTextAreaElement",
								"qualifiedName": "HTMLTextAreaElement",
								"package": "typescript"
							}
						],
						"name": "DragEventHandler",
						"qualifiedName": "React.DragEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "DetailedHTMLProps.onDrag"
					}
				},
				{
					"id": 255,
					"name": "onDragCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1491,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLTextAreaElement",
								"qualifiedName": "HTMLTextAreaElement",
								"package": "typescript"
							}
						],
						"name": "DragEventHandler",
						"qualifiedName": "React.DragEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "DetailedHTMLProps.onDragCapture"
					}
				},
				{
					"id": 256,
					"name": "onDragEnd",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1492,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLTextAreaElement",
								"qualifiedName": "HTMLTextAreaElement",
								"package": "typescript"
							}
						],
						"name": "DragEventHandler",
						"qualifiedName": "React.DragEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "DetailedHTMLProps.onDragEnd"
					}
				},
				{
					"id": 257,
					"name": "onDragEndCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1493,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLTextAreaElement",
								"qualifiedName": "HTMLTextAreaElement",
								"package": "typescript"
							}
						],
						"name": "DragEventHandler",
						"qualifiedName": "React.DragEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "DetailedHTMLProps.onDragEndCapture"
					}
				},
				{
					"id": 258,
					"name": "onDragEnter",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1494,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLTextAreaElement",
								"qualifiedName": "HTMLTextAreaElement",
								"package": "typescript"
							}
						],
						"name": "DragEventHandler",
						"qualifiedName": "React.DragEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "DetailedHTMLProps.onDragEnter"
					}
				},
				{
					"id": 259,
					"name": "onDragEnterCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1495,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLTextAreaElement",
								"qualifiedName": "HTMLTextAreaElement",
								"package": "typescript"
							}
						],
						"name": "DragEventHandler",
						"qualifiedName": "React.DragEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "DetailedHTMLProps.onDragEnterCapture"
					}
				},
				{
					"id": 260,
					"name": "onDragExit",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1496,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLTextAreaElement",
								"qualifiedName": "HTMLTextAreaElement",
								"package": "typescript"
							}
						],
						"name": "DragEventHandler",
						"qualifiedName": "React.DragEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "DetailedHTMLProps.onDragExit"
					}
				},
				{
					"id": 261,
					"name": "onDragExitCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1497,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLTextAreaElement",
								"qualifiedName": "HTMLTextAreaElement",
								"package": "typescript"
							}
						],
						"name": "DragEventHandler",
						"qualifiedName": "React.DragEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "DetailedHTMLProps.onDragExitCapture"
					}
				},
				{
					"id": 262,
					"name": "onDragLeave",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1498,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLTextAreaElement",
								"qualifiedName": "HTMLTextAreaElement",
								"package": "typescript"
							}
						],
						"name": "DragEventHandler",
						"qualifiedName": "React.DragEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "DetailedHTMLProps.onDragLeave"
					}
				},
				{
					"id": 263,
					"name": "onDragLeaveCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1499,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLTextAreaElement",
								"qualifiedName": "HTMLTextAreaElement",
								"package": "typescript"
							}
						],
						"name": "DragEventHandler",
						"qualifiedName": "React.DragEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "DetailedHTMLProps.onDragLeaveCapture"
					}
				},
				{
					"id": 264,
					"name": "onDragOver",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1500,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLTextAreaElement",
								"qualifiedName": "HTMLTextAreaElement",
								"package": "typescript"
							}
						],
						"name": "DragEventHandler",
						"qualifiedName": "React.DragEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "DetailedHTMLProps.onDragOver"
					}
				},
				{
					"id": 265,
					"name": "onDragOverCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1501,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLTextAreaElement",
								"qualifiedName": "HTMLTextAreaElement",
								"package": "typescript"
							}
						],
						"name": "DragEventHandler",
						"qualifiedName": "React.DragEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "DetailedHTMLProps.onDragOverCapture"
					}
				},
				{
					"id": 266,
					"name": "onDragStart",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1502,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLTextAreaElement",
								"qualifiedName": "HTMLTextAreaElement",
								"package": "typescript"
							}
						],
						"name": "DragEventHandler",
						"qualifiedName": "React.DragEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "DetailedHTMLProps.onDragStart"
					}
				},
				{
					"id": 267,
					"name": "onDragStartCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1503,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLTextAreaElement",
								"qualifiedName": "HTMLTextAreaElement",
								"package": "typescript"
							}
						],
						"name": "DragEventHandler",
						"qualifiedName": "React.DragEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "DetailedHTMLProps.onDragStartCapture"
					}
				},
				{
					"id": 268,
					"name": "onDrop",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1504,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLTextAreaElement",
								"qualifiedName": "HTMLTextAreaElement",
								"package": "typescript"
							}
						],
						"name": "DragEventHandler",
						"qualifiedName": "React.DragEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "DetailedHTMLProps.onDrop"
					}
				},
				{
					"id": 269,
					"name": "onDropCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1505,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLTextAreaElement",
								"qualifiedName": "HTMLTextAreaElement",
								"package": "typescript"
							}
						],
						"name": "DragEventHandler",
						"qualifiedName": "React.DragEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "DetailedHTMLProps.onDropCapture"
					}
				},
				{
					"id": 206,
					"name": "onDurationChange",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1440,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLTextAreaElement",
								"qualifiedName": "HTMLTextAreaElement",
								"package": "typescript"
							}
						],
						"name": "ReactEventHandler",
						"qualifiedName": "React.ReactEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "DetailedHTMLProps.onDurationChange"
					}
				},
				{
					"id": 207,
					"name": "onDurationChangeCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1441,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLTextAreaElement",
								"qualifiedName": "HTMLTextAreaElement",
								"package": "typescript"
							}
						],
						"name": "ReactEventHandler",
						"qualifiedName": "React.ReactEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "DetailedHTMLProps.onDurationChangeCapture"
					}
				},
				{
					"id": 208,
					"name": "onEmptied",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1442,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLTextAreaElement",
								"qualifiedName": "HTMLTextAreaElement",
								"package": "typescript"
							}
						],
						"name": "ReactEventHandler",
						"qualifiedName": "React.ReactEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "DetailedHTMLProps.onEmptied"
					}
				},
				{
					"id": 209,
					"name": "onEmptiedCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1443,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLTextAreaElement",
								"qualifiedName": "HTMLTextAreaElement",
								"package": "typescript"
							}
						],
						"name": "ReactEventHandler",
						"qualifiedName": "React.ReactEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "DetailedHTMLProps.onEmptiedCapture"
					}
				},
				{
					"id": 210,
					"name": "onEncrypted",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1444,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLTextAreaElement",
								"qualifiedName": "HTMLTextAreaElement",
								"package": "typescript"
							}
						],
						"name": "ReactEventHandler",
						"qualifiedName": "React.ReactEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "DetailedHTMLProps.onEncrypted"
					}
				},
				{
					"id": 211,
					"name": "onEncryptedCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1445,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLTextAreaElement",
								"qualifiedName": "HTMLTextAreaElement",
								"package": "typescript"
							}
						],
						"name": "ReactEventHandler",
						"qualifiedName": "React.ReactEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "DetailedHTMLProps.onEncryptedCapture"
					}
				},
				{
					"id": 212,
					"name": "onEnded",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1446,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLTextAreaElement",
								"qualifiedName": "HTMLTextAreaElement",
								"package": "typescript"
							}
						],
						"name": "ReactEventHandler",
						"qualifiedName": "React.ReactEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "DetailedHTMLProps.onEnded"
					}
				},
				{
					"id": 213,
					"name": "onEndedCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1447,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLTextAreaElement",
								"qualifiedName": "HTMLTextAreaElement",
								"package": "typescript"
							}
						],
						"name": "ReactEventHandler",
						"qualifiedName": "React.ReactEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "DetailedHTMLProps.onEndedCapture"
					}
				},
				{
					"id": 192,
					"name": "onError",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1420,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLTextAreaElement",
								"qualifiedName": "HTMLTextAreaElement",
								"package": "typescript"
							}
						],
						"name": "ReactEventHandler",
						"qualifiedName": "React.ReactEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "DetailedHTMLProps.onError"
					}
				},
				{
					"id": 193,
					"name": "onErrorCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1421,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLTextAreaElement",
								"qualifiedName": "HTMLTextAreaElement",
								"package": "typescript"
							}
						],
						"name": "ReactEventHandler",
						"qualifiedName": "React.ReactEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "DetailedHTMLProps.onErrorCapture"
					}
				},
				{
					"id": 175,
					"name": "onFocus",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1398,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLTextAreaElement",
								"qualifiedName": "HTMLTextAreaElement",
								"package": "typescript"
							}
						],
						"name": "FocusEventHandler",
						"qualifiedName": "React.FocusEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "DetailedHTMLProps.onFocus"
					}
				},
				{
					"id": 176,
					"name": "onFocusCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1399,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLTextAreaElement",
								"qualifiedName": "HTMLTextAreaElement",
								"package": "typescript"
							}
						],
						"name": "FocusEventHandler",
						"qualifiedName": "React.FocusEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "DetailedHTMLProps.onFocusCapture"
					}
				},
				{
					"id": 308,
					"name": "onGotPointerCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1550,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLTextAreaElement",
								"qualifiedName": "HTMLTextAreaElement",
								"package": "typescript"
							}
						],
						"name": "PointerEventHandler",
						"qualifiedName": "React.PointerEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "DetailedHTMLProps.onGotPointerCapture"
					}
				},
				{
					"id": 309,
					"name": "onGotPointerCaptureCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1551,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLTextAreaElement",
								"qualifiedName": "HTMLTextAreaElement",
								"package": "typescript"
							}
						],
						"name": "PointerEventHandler",
						"qualifiedName": "React.PointerEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "DetailedHTMLProps.onGotPointerCaptureCapture"
					}
				},
				{
					"id": 182,
					"name": "onInput",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1408,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLTextAreaElement",
								"qualifiedName": "HTMLTextAreaElement",
								"package": "typescript"
							}
						],
						"name": "FormEventHandler",
						"qualifiedName": "React.FormEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "DetailedHTMLProps.onInput"
					}
				},
				{
					"id": 183,
					"name": "onInputCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1409,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLTextAreaElement",
								"qualifiedName": "HTMLTextAreaElement",
								"package": "typescript"
							}
						],
						"name": "FormEventHandler",
						"qualifiedName": "React.FormEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "DetailedHTMLProps.onInputCapture"
					}
				},
				{
					"id": 188,
					"name": "onInvalid",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1414,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLTextAreaElement",
								"qualifiedName": "HTMLTextAreaElement",
								"package": "typescript"
							}
						],
						"name": "FormEventHandler",
						"qualifiedName": "React.FormEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "DetailedHTMLProps.onInvalid"
					}
				},
				{
					"id": 189,
					"name": "onInvalidCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1415,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLTextAreaElement",
								"qualifiedName": "HTMLTextAreaElement",
								"package": "typescript"
							}
						],
						"name": "FormEventHandler",
						"qualifiedName": "React.FormEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "DetailedHTMLProps.onInvalidCapture"
					}
				},
				{
					"id": 194,
					"name": "onKeyDown",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1424,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLTextAreaElement",
								"qualifiedName": "HTMLTextAreaElement",
								"package": "typescript"
							}
						],
						"name": "KeyboardEventHandler",
						"qualifiedName": "React.KeyboardEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "DetailedHTMLProps.onKeyDown"
					}
				},
				{
					"id": 195,
					"name": "onKeyDownCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1425,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLTextAreaElement",
								"qualifiedName": "HTMLTextAreaElement",
								"package": "typescript"
							}
						],
						"name": "KeyboardEventHandler",
						"qualifiedName": "React.KeyboardEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "DetailedHTMLProps.onKeyDownCapture"
					}
				},
				{
					"id": 196,
					"name": "onKeyPress",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"summary": [],
						"blockTags": [
							{
								"tag": "@deprecated",
								"content": []
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1427,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLTextAreaElement",
								"qualifiedName": "HTMLTextAreaElement",
								"package": "typescript"
							}
						],
						"name": "KeyboardEventHandler",
						"qualifiedName": "React.KeyboardEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "DetailedHTMLProps.onKeyPress"
					}
				},
				{
					"id": 197,
					"name": "onKeyPressCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"summary": [],
						"blockTags": [
							{
								"tag": "@deprecated",
								"content": []
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1429,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLTextAreaElement",
								"qualifiedName": "HTMLTextAreaElement",
								"package": "typescript"
							}
						],
						"name": "KeyboardEventHandler",
						"qualifiedName": "React.KeyboardEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "DetailedHTMLProps.onKeyPressCapture"
					}
				},
				{
					"id": 198,
					"name": "onKeyUp",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1430,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLTextAreaElement",
								"qualifiedName": "HTMLTextAreaElement",
								"package": "typescript"
							}
						],
						"name": "KeyboardEventHandler",
						"qualifiedName": "React.KeyboardEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "DetailedHTMLProps.onKeyUp"
					}
				},
				{
					"id": 199,
					"name": "onKeyUpCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1431,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLTextAreaElement",
								"qualifiedName": "HTMLTextAreaElement",
								"package": "typescript"
							}
						],
						"name": "KeyboardEventHandler",
						"qualifiedName": "React.KeyboardEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "DetailedHTMLProps.onKeyUpCapture"
					}
				},
				{
					"id": 190,
					"name": "onLoad",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1418,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLTextAreaElement",
								"qualifiedName": "HTMLTextAreaElement",
								"package": "typescript"
							}
						],
						"name": "ReactEventHandler",
						"qualifiedName": "React.ReactEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "DetailedHTMLProps.onLoad"
					}
				},
				{
					"id": 191,
					"name": "onLoadCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1419,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLTextAreaElement",
								"qualifiedName": "HTMLTextAreaElement",
								"package": "typescript"
							}
						],
						"name": "ReactEventHandler",
						"qualifiedName": "React.ReactEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "DetailedHTMLProps.onLoadCapture"
					}
				},
				{
					"id": 218,
					"name": "onLoadStart",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1452,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLTextAreaElement",
								"qualifiedName": "HTMLTextAreaElement",
								"package": "typescript"
							}
						],
						"name": "ReactEventHandler",
						"qualifiedName": "React.ReactEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "DetailedHTMLProps.onLoadStart"
					}
				},
				{
					"id": 219,
					"name": "onLoadStartCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1453,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLTextAreaElement",
								"qualifiedName": "HTMLTextAreaElement",
								"package": "typescript"
							}
						],
						"name": "ReactEventHandler",
						"qualifiedName": "React.ReactEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "DetailedHTMLProps.onLoadStartCapture"
					}
				},
				{
					"id": 214,
					"name": "onLoadedData",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1448,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLTextAreaElement",
								"qualifiedName": "HTMLTextAreaElement",
								"package": "typescript"
							}
						],
						"name": "ReactEventHandler",
						"qualifiedName": "React.ReactEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "DetailedHTMLProps.onLoadedData"
					}
				},
				{
					"id": 215,
					"name": "onLoadedDataCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1449,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLTextAreaElement",
								"qualifiedName": "HTMLTextAreaElement",
								"package": "typescript"
							}
						],
						"name": "ReactEventHandler",
						"qualifiedName": "React.ReactEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "DetailedHTMLProps.onLoadedDataCapture"
					}
				},
				{
					"id": 216,
					"name": "onLoadedMetadata",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1450,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLTextAreaElement",
								"qualifiedName": "HTMLTextAreaElement",
								"package": "typescript"
							}
						],
						"name": "ReactEventHandler",
						"qualifiedName": "React.ReactEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "DetailedHTMLProps.onLoadedMetadata"
					}
				},
				{
					"id": 217,
					"name": "onLoadedMetadataCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1451,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLTextAreaElement",
								"qualifiedName": "HTMLTextAreaElement",
								"package": "typescript"
							}
						],
						"name": "ReactEventHandler",
						"qualifiedName": "React.ReactEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "DetailedHTMLProps.onLoadedMetadataCapture"
					}
				},
				{
					"id": 310,
					"name": "onLostPointerCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1552,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLTextAreaElement",
								"qualifiedName": "HTMLTextAreaElement",
								"package": "typescript"
							}
						],
						"name": "PointerEventHandler",
						"qualifiedName": "React.PointerEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "DetailedHTMLProps.onLostPointerCapture"
					}
				},
				{
					"id": 311,
					"name": "onLostPointerCaptureCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1553,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLTextAreaElement",
								"qualifiedName": "HTMLTextAreaElement",
								"package": "typescript"
							}
						],
						"name": "PointerEventHandler",
						"qualifiedName": "React.PointerEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "DetailedHTMLProps.onLostPointerCaptureCapture"
					}
				},
				{
					"id": 270,
					"name": "onMouseDown",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1506,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLTextAreaElement",
								"qualifiedName": "HTMLTextAreaElement",
								"package": "typescript"
							}
						],
						"name": "MouseEventHandler",
						"qualifiedName": "React.MouseEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "DetailedHTMLProps.onMouseDown"
					}
				},
				{
					"id": 271,
					"name": "onMouseDownCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1507,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLTextAreaElement",
								"qualifiedName": "HTMLTextAreaElement",
								"package": "typescript"
							}
						],
						"name": "MouseEventHandler",
						"qualifiedName": "React.MouseEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "DetailedHTMLProps.onMouseDownCapture"
					}
				},
				{
					"id": 272,
					"name": "onMouseEnter",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1508,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLTextAreaElement",
								"qualifiedName": "HTMLTextAreaElement",
								"package": "typescript"
							}
						],
						"name": "MouseEventHandler",
						"qualifiedName": "React.MouseEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "DetailedHTMLProps.onMouseEnter"
					}
				},
				{
					"id": 273,
					"name": "onMouseLeave",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1509,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLTextAreaElement",
								"qualifiedName": "HTMLTextAreaElement",
								"package": "typescript"
							}
						],
						"name": "MouseEventHandler",
						"qualifiedName": "React.MouseEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "DetailedHTMLProps.onMouseLeave"
					}
				},
				{
					"id": 274,
					"name": "onMouseMove",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1510,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLTextAreaElement",
								"qualifiedName": "HTMLTextAreaElement",
								"package": "typescript"
							}
						],
						"name": "MouseEventHandler",
						"qualifiedName": "React.MouseEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "DetailedHTMLProps.onMouseMove"
					}
				},
				{
					"id": 275,
					"name": "onMouseMoveCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1511,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLTextAreaElement",
								"qualifiedName": "HTMLTextAreaElement",
								"package": "typescript"
							}
						],
						"name": "MouseEventHandler",
						"qualifiedName": "React.MouseEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "DetailedHTMLProps.onMouseMoveCapture"
					}
				},
				{
					"id": 276,
					"name": "onMouseOut",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1512,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLTextAreaElement",
								"qualifiedName": "HTMLTextAreaElement",
								"package": "typescript"
							}
						],
						"name": "MouseEventHandler",
						"qualifiedName": "React.MouseEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "DetailedHTMLProps.onMouseOut"
					}
				},
				{
					"id": 277,
					"name": "onMouseOutCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1513,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLTextAreaElement",
								"qualifiedName": "HTMLTextAreaElement",
								"package": "typescript"
							}
						],
						"name": "MouseEventHandler",
						"qualifiedName": "React.MouseEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "DetailedHTMLProps.onMouseOutCapture"
					}
				},
				{
					"id": 278,
					"name": "onMouseOver",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1514,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLTextAreaElement",
								"qualifiedName": "HTMLTextAreaElement",
								"package": "typescript"
							}
						],
						"name": "MouseEventHandler",
						"qualifiedName": "React.MouseEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "DetailedHTMLProps.onMouseOver"
					}
				},
				{
					"id": 279,
					"name": "onMouseOverCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1515,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLTextAreaElement",
								"qualifiedName": "HTMLTextAreaElement",
								"package": "typescript"
							}
						],
						"name": "MouseEventHandler",
						"qualifiedName": "React.MouseEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "DetailedHTMLProps.onMouseOverCapture"
					}
				},
				{
					"id": 280,
					"name": "onMouseUp",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1516,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLTextAreaElement",
								"qualifiedName": "HTMLTextAreaElement",
								"package": "typescript"
							}
						],
						"name": "MouseEventHandler",
						"qualifiedName": "React.MouseEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "DetailedHTMLProps.onMouseUp"
					}
				},
				{
					"id": 281,
					"name": "onMouseUpCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1517,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLTextAreaElement",
								"qualifiedName": "HTMLTextAreaElement",
								"package": "typescript"
							}
						],
						"name": "MouseEventHandler",
						"qualifiedName": "React.MouseEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "DetailedHTMLProps.onMouseUpCapture"
					}
				},
				{
					"id": 167,
					"name": "onPaste",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1386,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLTextAreaElement",
								"qualifiedName": "HTMLTextAreaElement",
								"package": "typescript"
							}
						],
						"name": "ClipboardEventHandler",
						"qualifiedName": "React.ClipboardEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "DetailedHTMLProps.onPaste"
					}
				},
				{
					"id": 168,
					"name": "onPasteCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1387,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLTextAreaElement",
								"qualifiedName": "HTMLTextAreaElement",
								"package": "typescript"
							}
						],
						"name": "ClipboardEventHandler",
						"qualifiedName": "React.ClipboardEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "DetailedHTMLProps.onPasteCapture"
					}
				},
				{
					"id": 220,
					"name": "onPause",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1454,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLTextAreaElement",
								"qualifiedName": "HTMLTextAreaElement",
								"package": "typescript"
							}
						],
						"name": "ReactEventHandler",
						"qualifiedName": "React.ReactEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "DetailedHTMLProps.onPause"
					}
				},
				{
					"id": 221,
					"name": "onPauseCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1455,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLTextAreaElement",
								"qualifiedName": "HTMLTextAreaElement",
								"package": "typescript"
							}
						],
						"name": "ReactEventHandler",
						"qualifiedName": "React.ReactEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "DetailedHTMLProps.onPauseCapture"
					}
				},
				{
					"id": 222,
					"name": "onPlay",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1456,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLTextAreaElement",
								"qualifiedName": "HTMLTextAreaElement",
								"package": "typescript"
							}
						],
						"name": "ReactEventHandler",
						"qualifiedName": "React.ReactEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "DetailedHTMLProps.onPlay"
					}
				},
				{
					"id": 223,
					"name": "onPlayCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1457,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLTextAreaElement",
								"qualifiedName": "HTMLTextAreaElement",
								"package": "typescript"
							}
						],
						"name": "ReactEventHandler",
						"qualifiedName": "React.ReactEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "DetailedHTMLProps.onPlayCapture"
					}
				},
				{
					"id": 224,
					"name": "onPlaying",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1458,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLTextAreaElement",
								"qualifiedName": "HTMLTextAreaElement",
								"package": "typescript"
							}
						],
						"name": "ReactEventHandler",
						"qualifiedName": "React.ReactEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "DetailedHTMLProps.onPlaying"
					}
				},
				{
					"id": 225,
					"name": "onPlayingCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1459,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLTextAreaElement",
								"qualifiedName": "HTMLTextAreaElement",
								"package": "typescript"
							}
						],
						"name": "ReactEventHandler",
						"qualifiedName": "React.ReactEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "DetailedHTMLProps.onPlayingCapture"
					}
				},
				{
					"id": 298,
					"name": "onPointerCancel",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1540,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLTextAreaElement",
								"qualifiedName": "HTMLTextAreaElement",
								"package": "typescript"
							}
						],
						"name": "PointerEventHandler",
						"qualifiedName": "React.PointerEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "DetailedHTMLProps.onPointerCancel"
					}
				},
				{
					"id": 299,
					"name": "onPointerCancelCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1541,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLTextAreaElement",
								"qualifiedName": "HTMLTextAreaElement",
								"package": "typescript"
							}
						],
						"name": "PointerEventHandler",
						"qualifiedName": "React.PointerEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "DetailedHTMLProps.onPointerCancelCapture"
					}
				},
				{
					"id": 292,
					"name": "onPointerDown",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1534,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLTextAreaElement",
								"qualifiedName": "HTMLTextAreaElement",
								"package": "typescript"
							}
						],
						"name": "PointerEventHandler",
						"qualifiedName": "React.PointerEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "DetailedHTMLProps.onPointerDown"
					}
				},
				{
					"id": 293,
					"name": "onPointerDownCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1535,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLTextAreaElement",
								"qualifiedName": "HTMLTextAreaElement",
								"package": "typescript"
							}
						],
						"name": "PointerEventHandler",
						"qualifiedName": "React.PointerEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "DetailedHTMLProps.onPointerDownCapture"
					}
				},
				{
					"id": 300,
					"name": "onPointerEnter",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1542,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLTextAreaElement",
								"qualifiedName": "HTMLTextAreaElement",
								"package": "typescript"
							}
						],
						"name": "PointerEventHandler",
						"qualifiedName": "React.PointerEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "DetailedHTMLProps.onPointerEnter"
					}
				},
				{
					"id": 301,
					"name": "onPointerEnterCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1543,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLTextAreaElement",
								"qualifiedName": "HTMLTextAreaElement",
								"package": "typescript"
							}
						],
						"name": "PointerEventHandler",
						"qualifiedName": "React.PointerEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "DetailedHTMLProps.onPointerEnterCapture"
					}
				},
				{
					"id": 302,
					"name": "onPointerLeave",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1544,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLTextAreaElement",
								"qualifiedName": "HTMLTextAreaElement",
								"package": "typescript"
							}
						],
						"name": "PointerEventHandler",
						"qualifiedName": "React.PointerEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "DetailedHTMLProps.onPointerLeave"
					}
				},
				{
					"id": 303,
					"name": "onPointerLeaveCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1545,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLTextAreaElement",
								"qualifiedName": "HTMLTextAreaElement",
								"package": "typescript"
							}
						],
						"name": "PointerEventHandler",
						"qualifiedName": "React.PointerEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "DetailedHTMLProps.onPointerLeaveCapture"
					}
				},
				{
					"id": 294,
					"name": "onPointerMove",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1536,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLTextAreaElement",
								"qualifiedName": "HTMLTextAreaElement",
								"package": "typescript"
							}
						],
						"name": "PointerEventHandler",
						"qualifiedName": "React.PointerEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "DetailedHTMLProps.onPointerMove"
					}
				},
				{
					"id": 295,
					"name": "onPointerMoveCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1537,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLTextAreaElement",
								"qualifiedName": "HTMLTextAreaElement",
								"package": "typescript"
							}
						],
						"name": "PointerEventHandler",
						"qualifiedName": "React.PointerEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "DetailedHTMLProps.onPointerMoveCapture"
					}
				},
				{
					"id": 306,
					"name": "onPointerOut",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1548,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLTextAreaElement",
								"qualifiedName": "HTMLTextAreaElement",
								"package": "typescript"
							}
						],
						"name": "PointerEventHandler",
						"qualifiedName": "React.PointerEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "DetailedHTMLProps.onPointerOut"
					}
				},
				{
					"id": 307,
					"name": "onPointerOutCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1549,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLTextAreaElement",
								"qualifiedName": "HTMLTextAreaElement",
								"package": "typescript"
							}
						],
						"name": "PointerEventHandler",
						"qualifiedName": "React.PointerEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "DetailedHTMLProps.onPointerOutCapture"
					}
				},
				{
					"id": 304,
					"name": "onPointerOver",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1546,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLTextAreaElement",
								"qualifiedName": "HTMLTextAreaElement",
								"package": "typescript"
							}
						],
						"name": "PointerEventHandler",
						"qualifiedName": "React.PointerEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "DetailedHTMLProps.onPointerOver"
					}
				},
				{
					"id": 305,
					"name": "onPointerOverCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1547,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLTextAreaElement",
								"qualifiedName": "HTMLTextAreaElement",
								"package": "typescript"
							}
						],
						"name": "PointerEventHandler",
						"qualifiedName": "React.PointerEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "DetailedHTMLProps.onPointerOverCapture"
					}
				},
				{
					"id": 296,
					"name": "onPointerUp",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1538,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLTextAreaElement",
								"qualifiedName": "HTMLTextAreaElement",
								"package": "typescript"
							}
						],
						"name": "PointerEventHandler",
						"qualifiedName": "React.PointerEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "DetailedHTMLProps.onPointerUp"
					}
				},
				{
					"id": 297,
					"name": "onPointerUpCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1539,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLTextAreaElement",
								"qualifiedName": "HTMLTextAreaElement",
								"package": "typescript"
							}
						],
						"name": "PointerEventHandler",
						"qualifiedName": "React.PointerEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "DetailedHTMLProps.onPointerUpCapture"
					}
				},
				{
					"id": 226,
					"name": "onProgress",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1460,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLTextAreaElement",
								"qualifiedName": "HTMLTextAreaElement",
								"package": "typescript"
							}
						],
						"name": "ReactEventHandler",
						"qualifiedName": "React.ReactEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "DetailedHTMLProps.onProgress"
					}
				},
				{
					"id": 227,
					"name": "onProgressCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1461,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLTextAreaElement",
								"qualifiedName": "HTMLTextAreaElement",
								"package": "typescript"
							}
						],
						"name": "ReactEventHandler",
						"qualifiedName": "React.ReactEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "DetailedHTMLProps.onProgressCapture"
					}
				},
				{
					"id": 228,
					"name": "onRateChange",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1462,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLTextAreaElement",
								"qualifiedName": "HTMLTextAreaElement",
								"package": "typescript"
							}
						],
						"name": "ReactEventHandler",
						"qualifiedName": "React.ReactEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "DetailedHTMLProps.onRateChange"
					}
				},
				{
					"id": 229,
					"name": "onRateChangeCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1463,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLTextAreaElement",
								"qualifiedName": "HTMLTextAreaElement",
								"package": "typescript"
							}
						],
						"name": "ReactEventHandler",
						"qualifiedName": "React.ReactEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "DetailedHTMLProps.onRateChangeCapture"
					}
				},
				{
					"id": 184,
					"name": "onReset",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1410,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLTextAreaElement",
								"qualifiedName": "HTMLTextAreaElement",
								"package": "typescript"
							}
						],
						"name": "FormEventHandler",
						"qualifiedName": "React.FormEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "DetailedHTMLProps.onReset"
					}
				},
				{
					"id": 185,
					"name": "onResetCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1411,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLTextAreaElement",
								"qualifiedName": "HTMLTextAreaElement",
								"package": "typescript"
							}
						],
						"name": "FormEventHandler",
						"qualifiedName": "React.FormEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "DetailedHTMLProps.onResetCapture"
					}
				},
				{
					"id": 230,
					"name": "onResize",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1464,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLTextAreaElement",
								"qualifiedName": "HTMLTextAreaElement",
								"package": "typescript"
							}
						],
						"name": "ReactEventHandler",
						"qualifiedName": "React.ReactEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "DetailedHTMLProps.onResize"
					}
				},
				{
					"id": 231,
					"name": "onResizeCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1465,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLTextAreaElement",
								"qualifiedName": "HTMLTextAreaElement",
								"package": "typescript"
							}
						],
						"name": "ReactEventHandler",
						"qualifiedName": "React.ReactEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "DetailedHTMLProps.onResizeCapture"
					}
				},
				{
					"id": 312,
					"name": "onScroll",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1556,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLTextAreaElement",
								"qualifiedName": "HTMLTextAreaElement",
								"package": "typescript"
							}
						],
						"name": "UIEventHandler",
						"qualifiedName": "React.UIEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "DetailedHTMLProps.onScroll"
					}
				},
				{
					"id": 313,
					"name": "onScrollCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1557,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLTextAreaElement",
								"qualifiedName": "HTMLTextAreaElement",
								"package": "typescript"
							}
						],
						"name": "UIEventHandler",
						"qualifiedName": "React.UIEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "DetailedHTMLProps.onScrollCapture"
					}
				},
				{
					"id": 232,
					"name": "onSeeked",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1466,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLTextAreaElement",
								"qualifiedName": "HTMLTextAreaElement",
								"package": "typescript"
							}
						],
						"name": "ReactEventHandler",
						"qualifiedName": "React.ReactEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "DetailedHTMLProps.onSeeked"
					}
				},
				{
					"id": 233,
					"name": "onSeekedCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1467,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLTextAreaElement",
								"qualifiedName": "HTMLTextAreaElement",
								"package": "typescript"
							}
						],
						"name": "ReactEventHandler",
						"qualifiedName": "React.ReactEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "DetailedHTMLProps.onSeekedCapture"
					}
				},
				{
					"id": 234,
					"name": "onSeeking",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1468,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLTextAreaElement",
								"qualifiedName": "HTMLTextAreaElement",
								"package": "typescript"
							}
						],
						"name": "ReactEventHandler",
						"qualifiedName": "React.ReactEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "DetailedHTMLProps.onSeeking"
					}
				},
				{
					"id": 235,
					"name": "onSeekingCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1469,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLTextAreaElement",
								"qualifiedName": "HTMLTextAreaElement",
								"package": "typescript"
							}
						],
						"name": "ReactEventHandler",
						"qualifiedName": "React.ReactEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "DetailedHTMLProps.onSeekingCapture"
					}
				},
				{
					"id": 282,
					"name": "onSelect",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1520,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLTextAreaElement",
								"qualifiedName": "HTMLTextAreaElement",
								"package": "typescript"
							}
						],
						"name": "ReactEventHandler",
						"qualifiedName": "React.ReactEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "DetailedHTMLProps.onSelect"
					}
				},
				{
					"id": 283,
					"name": "onSelectCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1521,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLTextAreaElement",
								"qualifiedName": "HTMLTextAreaElement",
								"package": "typescript"
							}
						],
						"name": "ReactEventHandler",
						"qualifiedName": "React.ReactEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "DetailedHTMLProps.onSelectCapture"
					}
				},
				{
					"id": 236,
					"name": "onStalled",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1470,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLTextAreaElement",
								"qualifiedName": "HTMLTextAreaElement",
								"package": "typescript"
							}
						],
						"name": "ReactEventHandler",
						"qualifiedName": "React.ReactEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "DetailedHTMLProps.onStalled"
					}
				},
				{
					"id": 237,
					"name": "onStalledCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1471,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLTextAreaElement",
								"qualifiedName": "HTMLTextAreaElement",
								"package": "typescript"
							}
						],
						"name": "ReactEventHandler",
						"qualifiedName": "React.ReactEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "DetailedHTMLProps.onStalledCapture"
					}
				},
				{
					"id": 186,
					"name": "onSubmit",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1412,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLTextAreaElement",
								"qualifiedName": "HTMLTextAreaElement",
								"package": "typescript"
							}
						],
						"name": "FormEventHandler",
						"qualifiedName": "React.FormEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "DetailedHTMLProps.onSubmit"
					}
				},
				{
					"id": 187,
					"name": "onSubmitCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1413,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLTextAreaElement",
								"qualifiedName": "HTMLTextAreaElement",
								"package": "typescript"
							}
						],
						"name": "FormEventHandler",
						"qualifiedName": "React.FormEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "DetailedHTMLProps.onSubmitCapture"
					}
				},
				{
					"id": 238,
					"name": "onSuspend",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1472,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLTextAreaElement",
								"qualifiedName": "HTMLTextAreaElement",
								"package": "typescript"
							}
						],
						"name": "ReactEventHandler",
						"qualifiedName": "React.ReactEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "DetailedHTMLProps.onSuspend"
					}
				},
				{
					"id": 239,
					"name": "onSuspendCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1473,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLTextAreaElement",
								"qualifiedName": "HTMLTextAreaElement",
								"package": "typescript"
							}
						],
						"name": "ReactEventHandler",
						"qualifiedName": "React.ReactEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "DetailedHTMLProps.onSuspendCapture"
					}
				},
				{
					"id": 240,
					"name": "onTimeUpdate",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1474,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLTextAreaElement",
								"qualifiedName": "HTMLTextAreaElement",
								"package": "typescript"
							}
						],
						"name": "ReactEventHandler",
						"qualifiedName": "React.ReactEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "DetailedHTMLProps.onTimeUpdate"
					}
				},
				{
					"id": 241,
					"name": "onTimeUpdateCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1475,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLTextAreaElement",
								"qualifiedName": "HTMLTextAreaElement",
								"package": "typescript"
							}
						],
						"name": "ReactEventHandler",
						"qualifiedName": "React.ReactEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "DetailedHTMLProps.onTimeUpdateCapture"
					}
				},
				{
					"id": 284,
					"name": "onTouchCancel",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1524,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLTextAreaElement",
								"qualifiedName": "HTMLTextAreaElement",
								"package": "typescript"
							}
						],
						"name": "TouchEventHandler",
						"qualifiedName": "React.TouchEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "DetailedHTMLProps.onTouchCancel"
					}
				},
				{
					"id": 285,
					"name": "onTouchCancelCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1525,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLTextAreaElement",
								"qualifiedName": "HTMLTextAreaElement",
								"package": "typescript"
							}
						],
						"name": "TouchEventHandler",
						"qualifiedName": "React.TouchEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "DetailedHTMLProps.onTouchCancelCapture"
					}
				},
				{
					"id": 286,
					"name": "onTouchEnd",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1526,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLTextAreaElement",
								"qualifiedName": "HTMLTextAreaElement",
								"package": "typescript"
							}
						],
						"name": "TouchEventHandler",
						"qualifiedName": "React.TouchEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "DetailedHTMLProps.onTouchEnd"
					}
				},
				{
					"id": 287,
					"name": "onTouchEndCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1527,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLTextAreaElement",
								"qualifiedName": "HTMLTextAreaElement",
								"package": "typescript"
							}
						],
						"name": "TouchEventHandler",
						"qualifiedName": "React.TouchEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "DetailedHTMLProps.onTouchEndCapture"
					}
				},
				{
					"id": 288,
					"name": "onTouchMove",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1528,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLTextAreaElement",
								"qualifiedName": "HTMLTextAreaElement",
								"package": "typescript"
							}
						],
						"name": "TouchEventHandler",
						"qualifiedName": "React.TouchEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "DetailedHTMLProps.onTouchMove"
					}
				},
				{
					"id": 289,
					"name": "onTouchMoveCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1529,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLTextAreaElement",
								"qualifiedName": "HTMLTextAreaElement",
								"package": "typescript"
							}
						],
						"name": "TouchEventHandler",
						"qualifiedName": "React.TouchEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "DetailedHTMLProps.onTouchMoveCapture"
					}
				},
				{
					"id": 290,
					"name": "onTouchStart",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1530,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLTextAreaElement",
								"qualifiedName": "HTMLTextAreaElement",
								"package": "typescript"
							}
						],
						"name": "TouchEventHandler",
						"qualifiedName": "React.TouchEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "DetailedHTMLProps.onTouchStart"
					}
				},
				{
					"id": 291,
					"name": "onTouchStartCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1531,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLTextAreaElement",
								"qualifiedName": "HTMLTextAreaElement",
								"package": "typescript"
							}
						],
						"name": "TouchEventHandler",
						"qualifiedName": "React.TouchEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "DetailedHTMLProps.onTouchStartCapture"
					}
				},
				{
					"id": 322,
					"name": "onTransitionEnd",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1572,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLTextAreaElement",
								"qualifiedName": "HTMLTextAreaElement",
								"package": "typescript"
							}
						],
						"name": "TransitionEventHandler",
						"qualifiedName": "React.TransitionEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "DetailedHTMLProps.onTransitionEnd"
					}
				},
				{
					"id": 323,
					"name": "onTransitionEndCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1573,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLTextAreaElement",
								"qualifiedName": "HTMLTextAreaElement",
								"package": "typescript"
							}
						],
						"name": "TransitionEventHandler",
						"qualifiedName": "React.TransitionEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "DetailedHTMLProps.onTransitionEndCapture"
					}
				},
				{
					"id": 242,
					"name": "onVolumeChange",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1476,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLTextAreaElement",
								"qualifiedName": "HTMLTextAreaElement",
								"package": "typescript"
							}
						],
						"name": "ReactEventHandler",
						"qualifiedName": "React.ReactEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "DetailedHTMLProps.onVolumeChange"
					}
				},
				{
					"id": 243,
					"name": "onVolumeChangeCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1477,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLTextAreaElement",
								"qualifiedName": "HTMLTextAreaElement",
								"package": "typescript"
							}
						],
						"name": "ReactEventHandler",
						"qualifiedName": "React.ReactEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "DetailedHTMLProps.onVolumeChangeCapture"
					}
				},
				{
					"id": 244,
					"name": "onWaiting",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1478,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLTextAreaElement",
								"qualifiedName": "HTMLTextAreaElement",
								"package": "typescript"
							}
						],
						"name": "ReactEventHandler",
						"qualifiedName": "React.ReactEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "DetailedHTMLProps.onWaiting"
					}
				},
				{
					"id": 245,
					"name": "onWaitingCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1479,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLTextAreaElement",
								"qualifiedName": "HTMLTextAreaElement",
								"package": "typescript"
							}
						],
						"name": "ReactEventHandler",
						"qualifiedName": "React.ReactEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "DetailedHTMLProps.onWaitingCapture"
					}
				},
				{
					"id": 314,
					"name": "onWheel",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1560,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLTextAreaElement",
								"qualifiedName": "HTMLTextAreaElement",
								"package": "typescript"
							}
						],
						"name": "WheelEventHandler",
						"qualifiedName": "React.WheelEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "DetailedHTMLProps.onWheel"
					}
				},
				{
					"id": 315,
					"name": "onWheelCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1561,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLTextAreaElement",
								"qualifiedName": "HTMLTextAreaElement",
								"package": "typescript"
							}
						],
						"name": "WheelEventHandler",
						"qualifiedName": "React.WheelEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "DetailedHTMLProps.onWheelCapture"
					}
				},
				{
					"id": 60,
					"name": "placeholder",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 2454,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "DetailedHTMLProps.placeholder"
					}
				},
				{
					"id": 92,
					"name": "prefix",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1884,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "DetailedHTMLProps.prefix"
					}
				},
				{
					"id": 93,
					"name": "property",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1885,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "DetailedHTMLProps.property"
					}
				},
				{
					"id": 87,
					"name": "radioGroup",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1875,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "DetailedHTMLProps.radioGroup"
					}
				},
				{
					"id": 61,
					"name": "readOnly",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 2455,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "DetailedHTMLProps.readOnly"
					}
				},
				{
					"id": 49,
					"name": "ref",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 138,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLTextAreaElement",
								"qualifiedName": "HTMLTextAreaElement",
								"package": "typescript"
							}
						],
						"name": "LegacyRef",
						"qualifiedName": "React.LegacyRef",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "DetailedHTMLProps.ref"
					}
				},
				{
					"id": 62,
					"name": "required",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 2456,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "DetailedHTMLProps.required"
					}
				},
				{
					"id": 94,
					"name": "resource",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1886,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "DetailedHTMLProps.resource"
					}
				},
				{
					"id": 106,
					"name": "results",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1900,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "DetailedHTMLProps.results"
					}
				},
				{
					"id": 88,
					"name": "role",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1878,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"name": "AriaRole",
						"qualifiedName": "React.AriaRole",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "DetailedHTMLProps.role"
					}
				},
				{
					"id": 63,
					"name": "rows",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 2457,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "DetailedHTMLProps.rows"
					}
				},
				{
					"id": 107,
					"name": "security",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1901,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "DetailedHTMLProps.security"
					}
				},
				{
					"id": 81,
					"name": "slot",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1867,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "DetailedHTMLProps.slot"
					}
				},
				{
					"id": 82,
					"name": "spellCheck",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1868,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"name": "Booleanish",
						"qualifiedName": "Booleanish",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "DetailedHTMLProps.spellCheck"
					}
				},
				{
					"id": 83,
					"name": "style",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1869,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"name": "CSSProperties",
						"qualifiedName": "React.CSSProperties",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "DetailedHTMLProps.style"
					}
				},
				{
					"id": 69,
					"name": "suppressContentEditableWarning",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1852,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "DetailedHTMLProps.suppressContentEditableWarning"
					}
				},
				{
					"id": 70,
					"name": "suppressHydrationWarning",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1853,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "DetailedHTMLProps.suppressHydrationWarning"
					}
				},
				{
					"id": 84,
					"name": "tabIndex",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1870,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "DetailedHTMLProps.tabIndex"
					}
				},
				{
					"id": 85,
					"name": "title",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1871,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "DetailedHTMLProps.title"
					}
				},
				{
					"id": 86,
					"name": "translate",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1872,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": "yes"
							},
							{
								"type": "literal",
								"value": "no"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "DetailedHTMLProps.translate"
					}
				},
				{
					"id": 95,
					"name": "typeof",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1887,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "DetailedHTMLProps.typeof"
					}
				},
				{
					"id": 108,
					"name": "unselectable",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1902,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": "on"
							},
							{
								"type": "literal",
								"value": "off"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "DetailedHTMLProps.unselectable"
					}
				},
				{
					"id": 64,
					"name": "value",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 2458,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "number"
							},
							{
								"type": "typeOperator",
								"operator": "readonly",
								"target": {
									"type": "array",
									"elementType": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "DetailedHTMLProps.value"
					}
				},
				{
					"id": 96,
					"name": "vocab",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1888,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "DetailedHTMLProps.vocab"
					}
				},
				{
					"id": 65,
					"name": "wrap",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 2459,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "DetailedHTMLProps.wrap"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						89,
						71,
						111,
						112,
						113,
						114,
						115,
						116,
						117,
						118,
						119,
						120,
						121,
						122,
						123,
						124,
						125,
						126,
						127,
						128,
						129,
						130,
						131,
						132,
						133,
						134,
						135,
						136,
						137,
						138,
						139,
						140,
						141,
						142,
						143,
						144,
						145,
						146,
						147,
						148,
						149,
						150,
						151,
						152,
						153,
						154,
						155,
						156,
						157,
						158,
						97,
						51,
						98,
						52,
						99,
						159,
						72,
						100,
						53,
						73,
						74,
						160,
						90,
						67,
						68,
						75,
						54,
						55,
						76,
						56,
						77,
						78,
						91,
						109,
						110,
						104,
						101,
						105,
						102,
						103,
						50,
						79,
						57,
						58,
						59,
						80,
						200,
						201,
						318,
						319,
						320,
						321,
						316,
						317,
						246,
						247,
						180,
						181,
						177,
						178,
						202,
						203,
						204,
						205,
						66,
						179,
						248,
						249,
						169,
						170,
						171,
						172,
						173,
						174,
						250,
						251,
						163,
						164,
						165,
						166,
						252,
						253,
						254,
						255,
						256,
						257,
						258,
						259,
						260,
						261,
						262,
						263,
						264,
						265,
						266,
						267,
						268,
						269,
						206,
						207,
						208,
						209,
						210,
						211,
						212,
						213,
						192,
						193,
						175,
						176,
						308,
						309,
						182,
						183,
						188,
						189,
						194,
						195,
						196,
						197,
						198,
						199,
						190,
						191,
						218,
						219,
						214,
						215,
						216,
						217,
						310,
						311,
						270,
						271,
						272,
						273,
						274,
						275,
						276,
						277,
						278,
						279,
						280,
						281,
						167,
						168,
						220,
						221,
						222,
						223,
						224,
						225,
						298,
						299,
						292,
						293,
						300,
						301,
						302,
						303,
						294,
						295,
						306,
						307,
						304,
						305,
						296,
						297,
						226,
						227,
						228,
						229,
						184,
						185,
						230,
						231,
						312,
						313,
						232,
						233,
						234,
						235,
						282,
						283,
						236,
						237,
						186,
						187,
						238,
						239,
						240,
						241,
						284,
						285,
						286,
						287,
						288,
						289,
						290,
						291,
						322,
						323,
						242,
						243,
						244,
						245,
						314,
						315,
						60,
						92,
						93,
						87,
						61,
						49,
						62,
						94,
						106,
						88,
						63,
						107,
						81,
						82,
						83,
						69,
						70,
						84,
						85,
						86,
						95,
						108,
						64,
						96,
						65
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/core/src/TextArea/index.tsx",
					"line": 5,
					"character": 17,
					"url": "https://github.com/dilan-dio4/tulsa/blob/3f22e3f/packages/core/src/TextArea/index.tsx#L5"
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"typeArguments": [
						{
							"type": "reference",
							"typeArguments": [
								{
									"type": "reference",
									"name": "HTMLTextAreaElement",
									"qualifiedName": "HTMLTextAreaElement",
									"package": "typescript"
								}
							],
							"name": "TextareaHTMLAttributes",
							"qualifiedName": "React.TextareaHTMLAttributes",
							"package": "@types/react"
						},
						{
							"type": "reference",
							"name": "HTMLTextAreaElement",
							"qualifiedName": "HTMLTextAreaElement",
							"package": "typescript"
						}
					],
					"name": "DetailedHTMLProps",
					"qualifiedName": "React.DetailedHTMLProps",
					"package": "@types/react"
				}
			]
		},
		{
			"id": 813,
			"name": "IToggleBox",
			"kind": 256,
			"kindString": "Interface",
			"flags": {},
			"children": [
				{
					"id": 873,
					"name": "about",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1881,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Omit.about"
					}
				},
				{
					"id": 848,
					"name": "accept",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 2225,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Omit.accept"
					}
				},
				{
					"id": 834,
					"name": "accessKey",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1856,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Omit.accessKey"
					}
				},
				{
					"id": 849,
					"name": "alt",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 2226,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Omit.alt"
					}
				},
				{
					"id": 892,
					"name": "aria-activedescendant",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Identifies the currently active element when DOM focus is on a composite widget, textbox, group, or application."
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1590,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Omit.aria-activedescendant"
					}
				},
				{
					"id": 893,
					"name": "aria-atomic",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Indicates whether assistive technologies will present all, or only parts of, the changed region based on the change notifications defined by the aria-relevant attribute."
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1592,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"name": "Booleanish",
						"qualifiedName": "Booleanish",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Omit.aria-atomic"
					}
				},
				{
					"id": 894,
					"name": "aria-autocomplete",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Indicates whether inputting text could trigger display of one or more predictions of the user's intended value for an input and specifies how predictions would be\npresented if they are made."
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1597,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": "inline"
							},
							{
								"type": "literal",
								"value": "both"
							},
							{
								"type": "literal",
								"value": "none"
							},
							{
								"type": "literal",
								"value": "list"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Omit.aria-autocomplete"
					}
				},
				{
					"id": 895,
					"name": "aria-busy",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Indicates an element is being modified and that assistive technologies MAY want to wait until the modifications are complete before exposing them to the user."
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1599,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"name": "Booleanish",
						"qualifiedName": "Booleanish",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Omit.aria-busy"
					}
				},
				{
					"id": 896,
					"name": "aria-checked",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Indicates the current \"checked\" state of checkboxes, radio buttons, and other widgets."
							}
						],
						"blockTags": [
							{
								"tag": "@see",
								"content": [
									{
										"kind": "text",
										"text": " - "
									},
									{
										"kind": "text",
										"text": "aria-pressed"
									},
									{
										"kind": "text",
										"text": "\n"
									},
									{
										"kind": "text",
										"text": " - "
									},
									{
										"kind": "text",
										"text": "aria-selected."
									},
									{
										"kind": "text",
										"text": "\n"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1604,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "boolean"
							},
							{
								"type": "literal",
								"value": "mixed"
							},
							{
								"type": "literal",
								"value": "false"
							},
							{
								"type": "literal",
								"value": "true"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Omit.aria-checked"
					}
				},
				{
					"id": 897,
					"name": "aria-colcount",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Defines the total number of columns in a table, grid, or treegrid."
							}
						],
						"blockTags": [
							{
								"tag": "@see",
								"content": [
									{
										"kind": "text",
										"text": "aria-colindex."
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1609,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Omit.aria-colcount"
					}
				},
				{
					"id": 898,
					"name": "aria-colindex",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Defines an element's column index or position with respect to the total number of columns within a table, grid, or treegrid."
							}
						],
						"blockTags": [
							{
								"tag": "@see",
								"content": [
									{
										"kind": "text",
										"text": " - "
									},
									{
										"kind": "text",
										"text": "aria-colcount"
									},
									{
										"kind": "text",
										"text": "\n"
									},
									{
										"kind": "text",
										"text": " - "
									},
									{
										"kind": "text",
										"text": "aria-colspan."
									},
									{
										"kind": "text",
										"text": "\n"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1614,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Omit.aria-colindex"
					}
				},
				{
					"id": 899,
					"name": "aria-colspan",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Defines the number of columns spanned by a cell or gridcell within a table, grid, or treegrid."
							}
						],
						"blockTags": [
							{
								"tag": "@see",
								"content": [
									{
										"kind": "text",
										"text": " - "
									},
									{
										"kind": "text",
										"text": "aria-colindex"
									},
									{
										"kind": "text",
										"text": "\n"
									},
									{
										"kind": "text",
										"text": " - "
									},
									{
										"kind": "text",
										"text": "aria-rowspan."
									},
									{
										"kind": "text",
										"text": "\n"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1619,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Omit.aria-colspan"
					}
				},
				{
					"id": 900,
					"name": "aria-controls",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Identifies the element (or elements) whose contents or presence are controlled by the current element."
							}
						],
						"blockTags": [
							{
								"tag": "@see",
								"content": [
									{
										"kind": "text",
										"text": "aria-owns."
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1624,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Omit.aria-controls"
					}
				},
				{
					"id": 901,
					"name": "aria-current",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Indicates the element that represents the current item within a container or set of related elements."
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1626,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "boolean"
							},
							{
								"type": "literal",
								"value": "location"
							},
							{
								"type": "literal",
								"value": "time"
							},
							{
								"type": "literal",
								"value": "page"
							},
							{
								"type": "literal",
								"value": "false"
							},
							{
								"type": "literal",
								"value": "true"
							},
							{
								"type": "literal",
								"value": "step"
							},
							{
								"type": "literal",
								"value": "date"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Omit.aria-current"
					}
				},
				{
					"id": 902,
					"name": "aria-describedby",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Identifies the element (or elements) that describes the object."
							}
						],
						"blockTags": [
							{
								"tag": "@see",
								"content": [
									{
										"kind": "text",
										"text": "aria-labelledby"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1631,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Omit.aria-describedby"
					}
				},
				{
					"id": 903,
					"name": "aria-details",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Identifies the element that provides a detailed, extended description for the object."
							}
						],
						"blockTags": [
							{
								"tag": "@see",
								"content": [
									{
										"kind": "text",
										"text": "aria-describedby."
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1636,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Omit.aria-details"
					}
				},
				{
					"id": 904,
					"name": "aria-disabled",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Indicates that the element is perceivable but disabled, so it is not editable or otherwise operable."
							}
						],
						"blockTags": [
							{
								"tag": "@see",
								"content": [
									{
										"kind": "text",
										"text": " - "
									},
									{
										"kind": "text",
										"text": "aria-hidden"
									},
									{
										"kind": "text",
										"text": "\n"
									},
									{
										"kind": "text",
										"text": " - "
									},
									{
										"kind": "text",
										"text": "aria-readonly."
									},
									{
										"kind": "text",
										"text": "\n"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1641,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"name": "Booleanish",
						"qualifiedName": "Booleanish",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Omit.aria-disabled"
					}
				},
				{
					"id": 905,
					"name": "aria-dropeffect",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Indicates what functions can be performed when a dragged object is released on the drop target."
							}
						],
						"blockTags": [
							{
								"tag": "@deprecated",
								"content": [
									{
										"kind": "text",
										"text": "in ARIA 1.1"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1646,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": "link"
							},
							{
								"type": "literal",
								"value": "none"
							},
							{
								"type": "literal",
								"value": "copy"
							},
							{
								"type": "literal",
								"value": "move"
							},
							{
								"type": "literal",
								"value": "execute"
							},
							{
								"type": "literal",
								"value": "popup"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Omit.aria-dropeffect"
					}
				},
				{
					"id": 906,
					"name": "aria-errormessage",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Identifies the element that provides an error message for the object."
							}
						],
						"blockTags": [
							{
								"tag": "@see",
								"content": [
									{
										"kind": "text",
										"text": " - "
									},
									{
										"kind": "text",
										"text": "aria-invalid"
									},
									{
										"kind": "text",
										"text": "\n"
									},
									{
										"kind": "text",
										"text": " - "
									},
									{
										"kind": "text",
										"text": "aria-describedby."
									},
									{
										"kind": "text",
										"text": "\n"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1651,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Omit.aria-errormessage"
					}
				},
				{
					"id": 907,
					"name": "aria-expanded",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Indicates whether the element, or another grouping element it controls, is currently expanded or collapsed."
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1653,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"name": "Booleanish",
						"qualifiedName": "Booleanish",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Omit.aria-expanded"
					}
				},
				{
					"id": 908,
					"name": "aria-flowto",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Identifies the next element (or elements) in an alternate reading order of content which, at the user's discretion,\nallows assistive technology to override the general default of reading in document source order."
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1658,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Omit.aria-flowto"
					}
				},
				{
					"id": 909,
					"name": "aria-grabbed",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Indicates an element's \"grabbed\" state in a drag-and-drop operation."
							}
						],
						"blockTags": [
							{
								"tag": "@deprecated",
								"content": [
									{
										"kind": "text",
										"text": "in ARIA 1.1"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1663,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"name": "Booleanish",
						"qualifiedName": "Booleanish",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Omit.aria-grabbed"
					}
				},
				{
					"id": 910,
					"name": "aria-haspopup",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Indicates the availability and type of interactive popup element, such as menu or dialog, that can be triggered by an element."
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1665,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "boolean"
							},
							{
								"type": "literal",
								"value": "grid"
							},
							{
								"type": "literal",
								"value": "dialog"
							},
							{
								"type": "literal",
								"value": "menu"
							},
							{
								"type": "literal",
								"value": "listbox"
							},
							{
								"type": "literal",
								"value": "false"
							},
							{
								"type": "literal",
								"value": "true"
							},
							{
								"type": "literal",
								"value": "tree"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Omit.aria-haspopup"
					}
				},
				{
					"id": 911,
					"name": "aria-hidden",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Indicates whether the element is exposed to an accessibility API."
							}
						],
						"blockTags": [
							{
								"tag": "@see",
								"content": [
									{
										"kind": "text",
										"text": "aria-disabled."
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1670,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"name": "Booleanish",
						"qualifiedName": "Booleanish",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Omit.aria-hidden"
					}
				},
				{
					"id": 912,
					"name": "aria-invalid",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Indicates the entered value does not conform to the format expected by the application."
							}
						],
						"blockTags": [
							{
								"tag": "@see",
								"content": [
									{
										"kind": "text",
										"text": "aria-errormessage."
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1675,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "boolean"
							},
							{
								"type": "literal",
								"value": "false"
							},
							{
								"type": "literal",
								"value": "true"
							},
							{
								"type": "literal",
								"value": "grammar"
							},
							{
								"type": "literal",
								"value": "spelling"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Omit.aria-invalid"
					}
				},
				{
					"id": 913,
					"name": "aria-keyshortcuts",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Indicates keyboard shortcuts that an author has implemented to activate or give focus to an element."
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1677,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Omit.aria-keyshortcuts"
					}
				},
				{
					"id": 914,
					"name": "aria-label",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Defines a string value that labels the current element."
							}
						],
						"blockTags": [
							{
								"tag": "@see",
								"content": [
									{
										"kind": "text",
										"text": "aria-labelledby."
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1682,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Omit.aria-label"
					}
				},
				{
					"id": 915,
					"name": "aria-labelledby",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Identifies the element (or elements) that labels the current element."
							}
						],
						"blockTags": [
							{
								"tag": "@see",
								"content": [
									{
										"kind": "text",
										"text": "aria-describedby."
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1687,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Omit.aria-labelledby"
					}
				},
				{
					"id": 916,
					"name": "aria-level",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Defines the hierarchical level of an element within a structure."
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1689,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Omit.aria-level"
					}
				},
				{
					"id": 917,
					"name": "aria-live",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Indicates that an element will be updated, and describes the types of updates the user agents, assistive technologies, and user can expect from the live region."
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1691,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": "off"
							},
							{
								"type": "literal",
								"value": "assertive"
							},
							{
								"type": "literal",
								"value": "polite"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Omit.aria-live"
					}
				},
				{
					"id": 918,
					"name": "aria-modal",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Indicates whether an element is modal when displayed."
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1693,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"name": "Booleanish",
						"qualifiedName": "Booleanish",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Omit.aria-modal"
					}
				},
				{
					"id": 919,
					"name": "aria-multiline",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Indicates whether a text box accepts multiple lines of input or only a single line."
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1695,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"name": "Booleanish",
						"qualifiedName": "Booleanish",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Omit.aria-multiline"
					}
				},
				{
					"id": 920,
					"name": "aria-multiselectable",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Indicates that the user may select more than one item from the current selectable descendants."
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1697,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"name": "Booleanish",
						"qualifiedName": "Booleanish",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Omit.aria-multiselectable"
					}
				},
				{
					"id": 921,
					"name": "aria-orientation",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Indicates whether the element's orientation is horizontal, vertical, or unknown/ambiguous."
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1699,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": "horizontal"
							},
							{
								"type": "literal",
								"value": "vertical"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Omit.aria-orientation"
					}
				},
				{
					"id": 922,
					"name": "aria-owns",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Identifies an element (or elements) in order to define a visual, functional, or contextual parent/child relationship\nbetween DOM elements where the DOM hierarchy cannot be used to represent the relationship."
							}
						],
						"blockTags": [
							{
								"tag": "@see",
								"content": [
									{
										"kind": "text",
										"text": "aria-controls."
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1705,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Omit.aria-owns"
					}
				},
				{
					"id": 923,
					"name": "aria-placeholder",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Defines a short hint (a word or short phrase) intended to aid the user with data entry when the control has no value.\nA hint could be a sample value or a brief description of the expected format."
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1710,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Omit.aria-placeholder"
					}
				},
				{
					"id": 924,
					"name": "aria-posinset",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Defines an element's number or position in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM."
							}
						],
						"blockTags": [
							{
								"tag": "@see",
								"content": [
									{
										"kind": "text",
										"text": "aria-setsize."
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1715,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Omit.aria-posinset"
					}
				},
				{
					"id": 925,
					"name": "aria-pressed",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Indicates the current \"pressed\" state of toggle buttons."
							}
						],
						"blockTags": [
							{
								"tag": "@see",
								"content": [
									{
										"kind": "text",
										"text": " - "
									},
									{
										"kind": "text",
										"text": "aria-checked"
									},
									{
										"kind": "text",
										"text": "\n"
									},
									{
										"kind": "text",
										"text": " - "
									},
									{
										"kind": "text",
										"text": "aria-selected."
									},
									{
										"kind": "text",
										"text": "\n"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1720,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "boolean"
							},
							{
								"type": "literal",
								"value": "mixed"
							},
							{
								"type": "literal",
								"value": "false"
							},
							{
								"type": "literal",
								"value": "true"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Omit.aria-pressed"
					}
				},
				{
					"id": 926,
					"name": "aria-readonly",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Indicates that the element is not editable, but is otherwise operable."
							}
						],
						"blockTags": [
							{
								"tag": "@see",
								"content": [
									{
										"kind": "text",
										"text": "aria-disabled."
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1725,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"name": "Booleanish",
						"qualifiedName": "Booleanish",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Omit.aria-readonly"
					}
				},
				{
					"id": 927,
					"name": "aria-relevant",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Indicates what notifications the user agent will trigger when the accessibility tree within a live region is modified."
							}
						],
						"blockTags": [
							{
								"tag": "@see",
								"content": [
									{
										"kind": "text",
										"text": "aria-atomic."
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1730,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": "all"
							},
							{
								"type": "literal",
								"value": "text"
							},
							{
								"type": "literal",
								"value": "additions"
							},
							{
								"type": "literal",
								"value": "additions removals"
							},
							{
								"type": "literal",
								"value": "additions text"
							},
							{
								"type": "literal",
								"value": "removals"
							},
							{
								"type": "literal",
								"value": "removals additions"
							},
							{
								"type": "literal",
								"value": "removals text"
							},
							{
								"type": "literal",
								"value": "text additions"
							},
							{
								"type": "literal",
								"value": "text removals"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Omit.aria-relevant"
					}
				},
				{
					"id": 928,
					"name": "aria-required",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Indicates that user input is required on the element before a form may be submitted."
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1732,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"name": "Booleanish",
						"qualifiedName": "Booleanish",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Omit.aria-required"
					}
				},
				{
					"id": 929,
					"name": "aria-roledescription",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Defines a human-readable, author-localized description for the role of an element."
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1734,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Omit.aria-roledescription"
					}
				},
				{
					"id": 930,
					"name": "aria-rowcount",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Defines the total number of rows in a table, grid, or treegrid."
							}
						],
						"blockTags": [
							{
								"tag": "@see",
								"content": [
									{
										"kind": "text",
										"text": "aria-rowindex."
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1739,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Omit.aria-rowcount"
					}
				},
				{
					"id": 931,
					"name": "aria-rowindex",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Defines an element's row index or position with respect to the total number of rows within a table, grid, or treegrid."
							}
						],
						"blockTags": [
							{
								"tag": "@see",
								"content": [
									{
										"kind": "text",
										"text": " - "
									},
									{
										"kind": "text",
										"text": "aria-rowcount"
									},
									{
										"kind": "text",
										"text": "\n"
									},
									{
										"kind": "text",
										"text": " - "
									},
									{
										"kind": "text",
										"text": "aria-rowspan."
									},
									{
										"kind": "text",
										"text": "\n"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1744,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Omit.aria-rowindex"
					}
				},
				{
					"id": 932,
					"name": "aria-rowspan",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Defines the number of rows spanned by a cell or gridcell within a table, grid, or treegrid."
							}
						],
						"blockTags": [
							{
								"tag": "@see",
								"content": [
									{
										"kind": "text",
										"text": " - "
									},
									{
										"kind": "text",
										"text": "aria-rowindex"
									},
									{
										"kind": "text",
										"text": "\n"
									},
									{
										"kind": "text",
										"text": " - "
									},
									{
										"kind": "text",
										"text": "aria-colspan."
									},
									{
										"kind": "text",
										"text": "\n"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1749,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Omit.aria-rowspan"
					}
				},
				{
					"id": 933,
					"name": "aria-selected",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Indicates the current \"selected\" state of various widgets."
							}
						],
						"blockTags": [
							{
								"tag": "@see",
								"content": [
									{
										"kind": "text",
										"text": " - "
									},
									{
										"kind": "text",
										"text": "aria-checked"
									},
									{
										"kind": "text",
										"text": "\n"
									},
									{
										"kind": "text",
										"text": " - "
									},
									{
										"kind": "text",
										"text": "aria-pressed."
									},
									{
										"kind": "text",
										"text": "\n"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1754,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"name": "Booleanish",
						"qualifiedName": "Booleanish",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Omit.aria-selected"
					}
				},
				{
					"id": 934,
					"name": "aria-setsize",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Defines the number of items in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM."
							}
						],
						"blockTags": [
							{
								"tag": "@see",
								"content": [
									{
										"kind": "text",
										"text": "aria-posinset."
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1759,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Omit.aria-setsize"
					}
				},
				{
					"id": 935,
					"name": "aria-sort",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Indicates if items in a table or grid are sorted in ascending or descending order."
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1761,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": "none"
							},
							{
								"type": "literal",
								"value": "ascending"
							},
							{
								"type": "literal",
								"value": "descending"
							},
							{
								"type": "literal",
								"value": "other"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Omit.aria-sort"
					}
				},
				{
					"id": 936,
					"name": "aria-valuemax",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Defines the maximum allowed value for a range widget."
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1763,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Omit.aria-valuemax"
					}
				},
				{
					"id": 937,
					"name": "aria-valuemin",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Defines the minimum allowed value for a range widget."
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1765,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Omit.aria-valuemin"
					}
				},
				{
					"id": 938,
					"name": "aria-valuenow",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Defines the current value for a range widget."
							}
						],
						"blockTags": [
							{
								"tag": "@see",
								"content": [
									{
										"kind": "text",
										"text": "aria-valuetext."
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1770,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Omit.aria-valuenow"
					}
				},
				{
					"id": 939,
					"name": "aria-valuetext",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Defines the human readable text alternative of aria-valuenow for a range widget."
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1772,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Omit.aria-valuetext"
					}
				},
				{
					"id": 880,
					"name": "autoCapitalize",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1891,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Omit.autoCapitalize"
					}
				},
				{
					"id": 850,
					"name": "autoComplete",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 2227,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Omit.autoComplete"
					}
				},
				{
					"id": 881,
					"name": "autoCorrect",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1892,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Omit.autoCorrect"
					}
				},
				{
					"id": 851,
					"name": "autoFocus",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 2228,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Omit.autoFocus"
					}
				},
				{
					"id": 882,
					"name": "autoSave",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1893,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Omit.autoSave"
					}
				},
				{
					"id": 852,
					"name": "capture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 2229,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "boolean"
							},
							{
								"type": "literal",
								"value": "environment"
							},
							{
								"type": "literal",
								"value": "user"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Omit.capture"
					}
				},
				{
					"id": 853,
					"name": "checked",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 2230,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Omit.checked"
					}
				},
				{
					"id": 839,
					"name": "children",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1376,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"name": "ReactNode",
						"qualifiedName": "React.ReactNode",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Omit.children"
					}
				},
				{
					"id": 837,
					"name": "className",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1857,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Omit.className"
					}
				},
				{
					"id": 824,
					"name": "color",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1894,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Omit.color"
					}
				},
				{
					"id": 840,
					"name": "contentEditable",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1858,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": "inherit"
							},
							{
								"type": "reference",
								"name": "Booleanish",
								"qualifiedName": "Booleanish",
								"package": "@types/react"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Omit.contentEditable"
					}
				},
				{
					"id": 868,
					"name": "contextMenu",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1859,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Omit.contextMenu"
					}
				},
				{
					"id": 854,
					"name": "crossOrigin",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 2231,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Omit.crossOrigin"
					}
				},
				{
					"id": 943,
					"name": "dangerouslySetInnerHTML",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1377,
							"character": 8
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 944,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 945,
									"name": "__html",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isExternal": true
									},
									"sources": [
										{
											"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
											"line": 1378,
											"character": 12
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										945
									]
								}
							],
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
									"line": 1377,
									"character": 34
								}
							]
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Omit.dangerouslySetInnerHTML"
					}
				},
				{
					"id": 874,
					"name": "datatype",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1882,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Omit.datatype"
					}
				},
				{
					"id": 864,
					"name": "defaultChecked",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1850,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Omit.defaultChecked"
					}
				},
				{
					"id": 865,
					"name": "defaultValue",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1851,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "number"
							},
							{
								"type": "typeOperator",
								"operator": "readonly",
								"target": {
									"type": "array",
									"elementType": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Omit.defaultValue"
					}
				},
				{
					"id": 832,
					"name": "dir",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1860,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Omit.dir"
					}
				},
				{
					"id": 845,
					"name": "disabled",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 2232,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Omit.disabled"
					}
				},
				{
					"id": 835,
					"name": "draggable",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1861,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"name": "Booleanish",
						"qualifiedName": "Booleanish",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Omit.draggable"
					}
				},
				{
					"id": 841,
					"name": "enterKeyHint",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 2233,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": "search"
							},
							{
								"type": "literal",
								"value": "next"
							},
							{
								"type": "literal",
								"value": "done"
							},
							{
								"type": "literal",
								"value": "enter"
							},
							{
								"type": "literal",
								"value": "go"
							},
							{
								"type": "literal",
								"value": "previous"
							},
							{
								"type": "literal",
								"value": "send"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Omit.enterKeyHint"
					}
				},
				{
					"id": 828,
					"name": "form",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 2234,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Omit.form"
					}
				},
				{
					"id": 855,
					"name": "formAction",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 2235,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Omit.formAction"
					}
				},
				{
					"id": 856,
					"name": "formEncType",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 2236,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Omit.formEncType"
					}
				},
				{
					"id": 857,
					"name": "formMethod",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 2237,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Omit.formMethod"
					}
				},
				{
					"id": 858,
					"name": "formNoValidate",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 2238,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Omit.formNoValidate"
					}
				},
				{
					"id": 859,
					"name": "formTarget",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 2239,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Omit.formTarget"
					}
				},
				{
					"id": 821,
					"name": "height",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 2240,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Omit.height"
					}
				},
				{
					"id": 827,
					"name": "hidden",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1862,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Omit.hidden"
					}
				},
				{
					"id": 814,
					"name": "id",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Manually sets the id and accessibility of the "
							},
							{
								"kind": "code",
								"text": "`for`"
							},
							{
								"kind": "text",
								"text": " attribute of the associated label."
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/core/src/ToggleBox/index.tsx",
							"line": 9,
							"character": 4,
							"url": "https://github.com/dilan-dio4/tulsa/blob/3f22e3f/packages/core/src/ToggleBox/index.tsx#L9"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"overwrites": {
						"type": "reference",
						"name": "Omit.id"
					}
				},
				{
					"id": 875,
					"name": "inlist",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1883,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Omit.inlist"
					}
				},
				{
					"id": 842,
					"name": "inputMode",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Hints at the type of data that might be entered by the user while editing the element or its contents"
							}
						],
						"blockTags": [
							{
								"tag": "@see",
								"content": [
									{
										"kind": "text",
										"text": "https://html.spec.whatwg.org/multipage/interaction.html#input-modalities:-the-inputmode-attribute"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1909,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": "search"
							},
							{
								"type": "literal",
								"value": "numeric"
							},
							{
								"type": "literal",
								"value": "none"
							},
							{
								"type": "literal",
								"value": "url"
							},
							{
								"type": "literal",
								"value": "text"
							},
							{
								"type": "literal",
								"value": "tel"
							},
							{
								"type": "literal",
								"value": "email"
							},
							{
								"type": "literal",
								"value": "decimal"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Omit.inputMode"
					}
				},
				{
					"id": 891,
					"name": "is",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Specify that a standard HTML element should behave like a defined custom built-in element"
							}
						],
						"blockTags": [
							{
								"tag": "@see",
								"content": [
									{
										"kind": "text",
										"text": "https://html.spec.whatwg.org/multipage/custom-elements.html#attr-is"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1914,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Omit.is"
					}
				},
				{
					"id": 886,
					"name": "itemID",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1898,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Omit.itemID"
					}
				},
				{
					"id": 883,
					"name": "itemProp",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1895,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Omit.itemProp"
					}
				},
				{
					"id": 887,
					"name": "itemRef",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1899,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Omit.itemRef"
					}
				},
				{
					"id": 884,
					"name": "itemScope",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1896,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Omit.itemScope"
					}
				},
				{
					"id": 885,
					"name": "itemType",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1897,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Omit.itemType"
					}
				},
				{
					"id": 820,
					"name": "key",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 132,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"name": "Key",
						"qualifiedName": "React.Key",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Omit.key"
					}
				},
				{
					"id": 815,
					"name": "label",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Associated label of the box"
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/core/src/ToggleBox/index.tsx",
							"line": 13,
							"character": 4,
							"url": "https://github.com/dilan-dio4/tulsa/blob/3f22e3f/packages/core/src/ToggleBox/index.tsx#L13"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 816,
					"name": "labelProps",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Props that are applied to the root of the label.\n\nFunctions _similarly_ to the diagram below.\n"
							},
							{
								"kind": "code",
								"text": "```jsx\n<label {...tulsaDefaultProps} htmlFor={refId} {...labelProps}>{label}</label>\n```"
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/core/src/ToggleBox/index.tsx",
							"line": 22,
							"character": 4,
							"url": "https://github.com/dilan-dio4/tulsa/blob/3f22e3f/packages/core/src/ToggleBox/index.tsx#L22"
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HTMLLabelElement",
										"qualifiedName": "HTMLLabelElement",
										"package": "typescript"
									}
								],
								"name": "LabelHTMLAttributes",
								"qualifiedName": "React.LabelHTMLAttributes",
								"package": "@types/react"
							},
							{
								"type": "reference",
								"name": "HTMLLabelElement",
								"qualifiedName": "HTMLLabelElement",
								"package": "typescript"
							}
						],
						"name": "DetailedHTMLProps",
						"qualifiedName": "React.DetailedHTMLProps",
						"package": "@types/react"
					}
				},
				{
					"id": 836,
					"name": "lang",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1864,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Omit.lang"
					}
				},
				{
					"id": 860,
					"name": "list",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 2241,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Omit.list"
					}
				},
				{
					"id": 817,
					"name": "max",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 2242,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Omit.max"
					}
				},
				{
					"id": 861,
					"name": "maxLength",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 2243,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Omit.maxLength"
					}
				},
				{
					"id": 862,
					"name": "min",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 2244,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Omit.min"
					}
				},
				{
					"id": 863,
					"name": "minLength",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 2245,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Omit.minLength"
					}
				},
				{
					"id": 846,
					"name": "multiple",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 2246,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Omit.multiple"
					}
				},
				{
					"id": 823,
					"name": "name",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 2247,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Omit.name"
					}
				},
				{
					"id": 843,
					"name": "nonce",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1865,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Omit.nonce"
					}
				},
				{
					"id": 984,
					"name": "onAbort",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1434,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement",
								"qualifiedName": "HTMLInputElement",
								"package": "typescript"
							}
						],
						"name": "ReactEventHandler",
						"qualifiedName": "React.ReactEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Omit.onAbort"
					}
				},
				{
					"id": 985,
					"name": "onAbortCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1435,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement",
								"qualifiedName": "HTMLInputElement",
								"package": "typescript"
							}
						],
						"name": "ReactEventHandler",
						"qualifiedName": "React.ReactEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Omit.onAbortCapture"
					}
				},
				{
					"id": 1102,
					"name": "onAnimationEnd",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1566,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement",
								"qualifiedName": "HTMLInputElement",
								"package": "typescript"
							}
						],
						"name": "AnimationEventHandler",
						"qualifiedName": "React.AnimationEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Omit.onAnimationEnd"
					}
				},
				{
					"id": 1103,
					"name": "onAnimationEndCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1567,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement",
								"qualifiedName": "HTMLInputElement",
								"package": "typescript"
							}
						],
						"name": "AnimationEventHandler",
						"qualifiedName": "React.AnimationEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Omit.onAnimationEndCapture"
					}
				},
				{
					"id": 1104,
					"name": "onAnimationIteration",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1568,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement",
								"qualifiedName": "HTMLInputElement",
								"package": "typescript"
							}
						],
						"name": "AnimationEventHandler",
						"qualifiedName": "React.AnimationEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Omit.onAnimationIteration"
					}
				},
				{
					"id": 1105,
					"name": "onAnimationIterationCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1569,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement",
								"qualifiedName": "HTMLInputElement",
								"package": "typescript"
							}
						],
						"name": "AnimationEventHandler",
						"qualifiedName": "React.AnimationEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Omit.onAnimationIterationCapture"
					}
				},
				{
					"id": 1100,
					"name": "onAnimationStart",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1564,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement",
								"qualifiedName": "HTMLInputElement",
								"package": "typescript"
							}
						],
						"name": "AnimationEventHandler",
						"qualifiedName": "React.AnimationEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Omit.onAnimationStart"
					}
				},
				{
					"id": 1101,
					"name": "onAnimationStartCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1565,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement",
								"qualifiedName": "HTMLInputElement",
								"package": "typescript"
							}
						],
						"name": "AnimationEventHandler",
						"qualifiedName": "React.AnimationEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Omit.onAnimationStartCapture"
					}
				},
				{
					"id": 1030,
					"name": "onAuxClick",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1482,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement",
								"qualifiedName": "HTMLInputElement",
								"package": "typescript"
							}
						],
						"name": "MouseEventHandler",
						"qualifiedName": "React.MouseEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Omit.onAuxClick"
					}
				},
				{
					"id": 1031,
					"name": "onAuxClickCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1483,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement",
								"qualifiedName": "HTMLInputElement",
								"package": "typescript"
							}
						],
						"name": "MouseEventHandler",
						"qualifiedName": "React.MouseEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Omit.onAuxClickCapture"
					}
				},
				{
					"id": 964,
					"name": "onBeforeInput",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1406,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement",
								"qualifiedName": "HTMLInputElement",
								"package": "typescript"
							}
						],
						"name": "FormEventHandler",
						"qualifiedName": "React.FormEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Omit.onBeforeInput"
					}
				},
				{
					"id": 965,
					"name": "onBeforeInputCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1407,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement",
								"qualifiedName": "HTMLInputElement",
								"package": "typescript"
							}
						],
						"name": "FormEventHandler",
						"qualifiedName": "React.FormEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Omit.onBeforeInputCapture"
					}
				},
				{
					"id": 960,
					"name": "onBlur",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1400,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement",
								"qualifiedName": "HTMLInputElement",
								"package": "typescript"
							}
						],
						"name": "FocusEventHandler",
						"qualifiedName": "React.FocusEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Omit.onBlur"
					}
				},
				{
					"id": 961,
					"name": "onBlurCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1401,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement",
								"qualifiedName": "HTMLInputElement",
								"package": "typescript"
							}
						],
						"name": "FocusEventHandler",
						"qualifiedName": "React.FocusEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Omit.onBlurCapture"
					}
				},
				{
					"id": 986,
					"name": "onCanPlay",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1436,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement",
								"qualifiedName": "HTMLInputElement",
								"package": "typescript"
							}
						],
						"name": "ReactEventHandler",
						"qualifiedName": "React.ReactEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Omit.onCanPlay"
					}
				},
				{
					"id": 987,
					"name": "onCanPlayCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1437,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement",
								"qualifiedName": "HTMLInputElement",
								"package": "typescript"
							}
						],
						"name": "ReactEventHandler",
						"qualifiedName": "React.ReactEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Omit.onCanPlayCapture"
					}
				},
				{
					"id": 988,
					"name": "onCanPlayThrough",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1438,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement",
								"qualifiedName": "HTMLInputElement",
								"package": "typescript"
							}
						],
						"name": "ReactEventHandler",
						"qualifiedName": "React.ReactEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Omit.onCanPlayThrough"
					}
				},
				{
					"id": 989,
					"name": "onCanPlayThroughCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1439,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement",
								"qualifiedName": "HTMLInputElement",
								"package": "typescript"
							}
						],
						"name": "ReactEventHandler",
						"qualifiedName": "React.ReactEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Omit.onCanPlayThroughCapture"
					}
				},
				{
					"id": 962,
					"name": "onChange",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 2259,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement",
								"qualifiedName": "HTMLInputElement",
								"package": "typescript"
							}
						],
						"name": "ChangeEventHandler",
						"qualifiedName": "React.ChangeEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Omit.onChange"
					}
				},
				{
					"id": 963,
					"name": "onChangeCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1405,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement",
								"qualifiedName": "HTMLInputElement",
								"package": "typescript"
							}
						],
						"name": "FormEventHandler",
						"qualifiedName": "React.FormEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Omit.onChangeCapture"
					}
				},
				{
					"id": 1032,
					"name": "onClick",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1484,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement",
								"qualifiedName": "HTMLInputElement",
								"package": "typescript"
							}
						],
						"name": "MouseEventHandler",
						"qualifiedName": "React.MouseEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Omit.onClick"
					}
				},
				{
					"id": 1033,
					"name": "onClickCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1485,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement",
								"qualifiedName": "HTMLInputElement",
								"package": "typescript"
							}
						],
						"name": "MouseEventHandler",
						"qualifiedName": "React.MouseEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Omit.onClickCapture"
					}
				},
				{
					"id": 952,
					"name": "onCompositionEnd",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1390,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement",
								"qualifiedName": "HTMLInputElement",
								"package": "typescript"
							}
						],
						"name": "CompositionEventHandler",
						"qualifiedName": "React.CompositionEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Omit.onCompositionEnd"
					}
				},
				{
					"id": 953,
					"name": "onCompositionEndCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1391,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement",
								"qualifiedName": "HTMLInputElement",
								"package": "typescript"
							}
						],
						"name": "CompositionEventHandler",
						"qualifiedName": "React.CompositionEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Omit.onCompositionEndCapture"
					}
				},
				{
					"id": 954,
					"name": "onCompositionStart",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1392,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement",
								"qualifiedName": "HTMLInputElement",
								"package": "typescript"
							}
						],
						"name": "CompositionEventHandler",
						"qualifiedName": "React.CompositionEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Omit.onCompositionStart"
					}
				},
				{
					"id": 955,
					"name": "onCompositionStartCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1393,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement",
								"qualifiedName": "HTMLInputElement",
								"package": "typescript"
							}
						],
						"name": "CompositionEventHandler",
						"qualifiedName": "React.CompositionEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Omit.onCompositionStartCapture"
					}
				},
				{
					"id": 956,
					"name": "onCompositionUpdate",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1394,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement",
								"qualifiedName": "HTMLInputElement",
								"package": "typescript"
							}
						],
						"name": "CompositionEventHandler",
						"qualifiedName": "React.CompositionEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Omit.onCompositionUpdate"
					}
				},
				{
					"id": 957,
					"name": "onCompositionUpdateCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1395,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement",
								"qualifiedName": "HTMLInputElement",
								"package": "typescript"
							}
						],
						"name": "CompositionEventHandler",
						"qualifiedName": "React.CompositionEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Omit.onCompositionUpdateCapture"
					}
				},
				{
					"id": 1034,
					"name": "onContextMenu",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1486,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement",
								"qualifiedName": "HTMLInputElement",
								"package": "typescript"
							}
						],
						"name": "MouseEventHandler",
						"qualifiedName": "React.MouseEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Omit.onContextMenu"
					}
				},
				{
					"id": 1035,
					"name": "onContextMenuCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1487,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement",
								"qualifiedName": "HTMLInputElement",
								"package": "typescript"
							}
						],
						"name": "MouseEventHandler",
						"qualifiedName": "React.MouseEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Omit.onContextMenuCapture"
					}
				},
				{
					"id": 946,
					"name": "onCopy",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1382,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement",
								"qualifiedName": "HTMLInputElement",
								"package": "typescript"
							}
						],
						"name": "ClipboardEventHandler",
						"qualifiedName": "React.ClipboardEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Omit.onCopy"
					}
				},
				{
					"id": 947,
					"name": "onCopyCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1383,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement",
								"qualifiedName": "HTMLInputElement",
								"package": "typescript"
							}
						],
						"name": "ClipboardEventHandler",
						"qualifiedName": "React.ClipboardEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Omit.onCopyCapture"
					}
				},
				{
					"id": 948,
					"name": "onCut",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1384,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement",
								"qualifiedName": "HTMLInputElement",
								"package": "typescript"
							}
						],
						"name": "ClipboardEventHandler",
						"qualifiedName": "React.ClipboardEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Omit.onCut"
					}
				},
				{
					"id": 949,
					"name": "onCutCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1385,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement",
								"qualifiedName": "HTMLInputElement",
								"package": "typescript"
							}
						],
						"name": "ClipboardEventHandler",
						"qualifiedName": "React.ClipboardEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Omit.onCutCapture"
					}
				},
				{
					"id": 1036,
					"name": "onDoubleClick",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1488,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement",
								"qualifiedName": "HTMLInputElement",
								"package": "typescript"
							}
						],
						"name": "MouseEventHandler",
						"qualifiedName": "React.MouseEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Omit.onDoubleClick"
					}
				},
				{
					"id": 1037,
					"name": "onDoubleClickCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1489,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement",
								"qualifiedName": "HTMLInputElement",
								"package": "typescript"
							}
						],
						"name": "MouseEventHandler",
						"qualifiedName": "React.MouseEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Omit.onDoubleClickCapture"
					}
				},
				{
					"id": 1038,
					"name": "onDrag",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1490,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement",
								"qualifiedName": "HTMLInputElement",
								"package": "typescript"
							}
						],
						"name": "DragEventHandler",
						"qualifiedName": "React.DragEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Omit.onDrag"
					}
				},
				{
					"id": 1039,
					"name": "onDragCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1491,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement",
								"qualifiedName": "HTMLInputElement",
								"package": "typescript"
							}
						],
						"name": "DragEventHandler",
						"qualifiedName": "React.DragEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Omit.onDragCapture"
					}
				},
				{
					"id": 1040,
					"name": "onDragEnd",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1492,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement",
								"qualifiedName": "HTMLInputElement",
								"package": "typescript"
							}
						],
						"name": "DragEventHandler",
						"qualifiedName": "React.DragEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Omit.onDragEnd"
					}
				},
				{
					"id": 1041,
					"name": "onDragEndCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1493,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement",
								"qualifiedName": "HTMLInputElement",
								"package": "typescript"
							}
						],
						"name": "DragEventHandler",
						"qualifiedName": "React.DragEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Omit.onDragEndCapture"
					}
				},
				{
					"id": 1042,
					"name": "onDragEnter",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1494,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement",
								"qualifiedName": "HTMLInputElement",
								"package": "typescript"
							}
						],
						"name": "DragEventHandler",
						"qualifiedName": "React.DragEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Omit.onDragEnter"
					}
				},
				{
					"id": 1043,
					"name": "onDragEnterCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1495,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement",
								"qualifiedName": "HTMLInputElement",
								"package": "typescript"
							}
						],
						"name": "DragEventHandler",
						"qualifiedName": "React.DragEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Omit.onDragEnterCapture"
					}
				},
				{
					"id": 1044,
					"name": "onDragExit",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1496,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement",
								"qualifiedName": "HTMLInputElement",
								"package": "typescript"
							}
						],
						"name": "DragEventHandler",
						"qualifiedName": "React.DragEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Omit.onDragExit"
					}
				},
				{
					"id": 1045,
					"name": "onDragExitCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1497,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement",
								"qualifiedName": "HTMLInputElement",
								"package": "typescript"
							}
						],
						"name": "DragEventHandler",
						"qualifiedName": "React.DragEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Omit.onDragExitCapture"
					}
				},
				{
					"id": 1046,
					"name": "onDragLeave",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1498,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement",
								"qualifiedName": "HTMLInputElement",
								"package": "typescript"
							}
						],
						"name": "DragEventHandler",
						"qualifiedName": "React.DragEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Omit.onDragLeave"
					}
				},
				{
					"id": 1047,
					"name": "onDragLeaveCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1499,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement",
								"qualifiedName": "HTMLInputElement",
								"package": "typescript"
							}
						],
						"name": "DragEventHandler",
						"qualifiedName": "React.DragEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Omit.onDragLeaveCapture"
					}
				},
				{
					"id": 1048,
					"name": "onDragOver",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1500,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement",
								"qualifiedName": "HTMLInputElement",
								"package": "typescript"
							}
						],
						"name": "DragEventHandler",
						"qualifiedName": "React.DragEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Omit.onDragOver"
					}
				},
				{
					"id": 1049,
					"name": "onDragOverCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1501,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement",
								"qualifiedName": "HTMLInputElement",
								"package": "typescript"
							}
						],
						"name": "DragEventHandler",
						"qualifiedName": "React.DragEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Omit.onDragOverCapture"
					}
				},
				{
					"id": 1050,
					"name": "onDragStart",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1502,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement",
								"qualifiedName": "HTMLInputElement",
								"package": "typescript"
							}
						],
						"name": "DragEventHandler",
						"qualifiedName": "React.DragEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Omit.onDragStart"
					}
				},
				{
					"id": 1051,
					"name": "onDragStartCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1503,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement",
								"qualifiedName": "HTMLInputElement",
								"package": "typescript"
							}
						],
						"name": "DragEventHandler",
						"qualifiedName": "React.DragEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Omit.onDragStartCapture"
					}
				},
				{
					"id": 1052,
					"name": "onDrop",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1504,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement",
								"qualifiedName": "HTMLInputElement",
								"package": "typescript"
							}
						],
						"name": "DragEventHandler",
						"qualifiedName": "React.DragEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Omit.onDrop"
					}
				},
				{
					"id": 1053,
					"name": "onDropCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1505,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement",
								"qualifiedName": "HTMLInputElement",
								"package": "typescript"
							}
						],
						"name": "DragEventHandler",
						"qualifiedName": "React.DragEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Omit.onDropCapture"
					}
				},
				{
					"id": 990,
					"name": "onDurationChange",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1440,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement",
								"qualifiedName": "HTMLInputElement",
								"package": "typescript"
							}
						],
						"name": "ReactEventHandler",
						"qualifiedName": "React.ReactEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Omit.onDurationChange"
					}
				},
				{
					"id": 991,
					"name": "onDurationChangeCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1441,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement",
								"qualifiedName": "HTMLInputElement",
								"package": "typescript"
							}
						],
						"name": "ReactEventHandler",
						"qualifiedName": "React.ReactEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Omit.onDurationChangeCapture"
					}
				},
				{
					"id": 992,
					"name": "onEmptied",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1442,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement",
								"qualifiedName": "HTMLInputElement",
								"package": "typescript"
							}
						],
						"name": "ReactEventHandler",
						"qualifiedName": "React.ReactEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Omit.onEmptied"
					}
				},
				{
					"id": 993,
					"name": "onEmptiedCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1443,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement",
								"qualifiedName": "HTMLInputElement",
								"package": "typescript"
							}
						],
						"name": "ReactEventHandler",
						"qualifiedName": "React.ReactEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Omit.onEmptiedCapture"
					}
				},
				{
					"id": 994,
					"name": "onEncrypted",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1444,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement",
								"qualifiedName": "HTMLInputElement",
								"package": "typescript"
							}
						],
						"name": "ReactEventHandler",
						"qualifiedName": "React.ReactEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Omit.onEncrypted"
					}
				},
				{
					"id": 995,
					"name": "onEncryptedCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1445,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement",
								"qualifiedName": "HTMLInputElement",
								"package": "typescript"
							}
						],
						"name": "ReactEventHandler",
						"qualifiedName": "React.ReactEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Omit.onEncryptedCapture"
					}
				},
				{
					"id": 996,
					"name": "onEnded",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1446,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement",
								"qualifiedName": "HTMLInputElement",
								"package": "typescript"
							}
						],
						"name": "ReactEventHandler",
						"qualifiedName": "React.ReactEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Omit.onEnded"
					}
				},
				{
					"id": 997,
					"name": "onEndedCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1447,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement",
								"qualifiedName": "HTMLInputElement",
								"package": "typescript"
							}
						],
						"name": "ReactEventHandler",
						"qualifiedName": "React.ReactEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Omit.onEndedCapture"
					}
				},
				{
					"id": 976,
					"name": "onError",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1420,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement",
								"qualifiedName": "HTMLInputElement",
								"package": "typescript"
							}
						],
						"name": "ReactEventHandler",
						"qualifiedName": "React.ReactEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Omit.onError"
					}
				},
				{
					"id": 977,
					"name": "onErrorCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1421,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement",
								"qualifiedName": "HTMLInputElement",
								"package": "typescript"
							}
						],
						"name": "ReactEventHandler",
						"qualifiedName": "React.ReactEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Omit.onErrorCapture"
					}
				},
				{
					"id": 958,
					"name": "onFocus",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1398,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement",
								"qualifiedName": "HTMLInputElement",
								"package": "typescript"
							}
						],
						"name": "FocusEventHandler",
						"qualifiedName": "React.FocusEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Omit.onFocus"
					}
				},
				{
					"id": 959,
					"name": "onFocusCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1399,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement",
								"qualifiedName": "HTMLInputElement",
								"package": "typescript"
							}
						],
						"name": "FocusEventHandler",
						"qualifiedName": "React.FocusEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Omit.onFocusCapture"
					}
				},
				{
					"id": 1092,
					"name": "onGotPointerCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1550,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement",
								"qualifiedName": "HTMLInputElement",
								"package": "typescript"
							}
						],
						"name": "PointerEventHandler",
						"qualifiedName": "React.PointerEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Omit.onGotPointerCapture"
					}
				},
				{
					"id": 1093,
					"name": "onGotPointerCaptureCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1551,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement",
								"qualifiedName": "HTMLInputElement",
								"package": "typescript"
							}
						],
						"name": "PointerEventHandler",
						"qualifiedName": "React.PointerEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Omit.onGotPointerCaptureCapture"
					}
				},
				{
					"id": 966,
					"name": "onInput",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1408,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement",
								"qualifiedName": "HTMLInputElement",
								"package": "typescript"
							}
						],
						"name": "FormEventHandler",
						"qualifiedName": "React.FormEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Omit.onInput"
					}
				},
				{
					"id": 967,
					"name": "onInputCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1409,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement",
								"qualifiedName": "HTMLInputElement",
								"package": "typescript"
							}
						],
						"name": "FormEventHandler",
						"qualifiedName": "React.FormEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Omit.onInputCapture"
					}
				},
				{
					"id": 972,
					"name": "onInvalid",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1414,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement",
								"qualifiedName": "HTMLInputElement",
								"package": "typescript"
							}
						],
						"name": "FormEventHandler",
						"qualifiedName": "React.FormEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Omit.onInvalid"
					}
				},
				{
					"id": 973,
					"name": "onInvalidCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1415,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement",
								"qualifiedName": "HTMLInputElement",
								"package": "typescript"
							}
						],
						"name": "FormEventHandler",
						"qualifiedName": "React.FormEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Omit.onInvalidCapture"
					}
				},
				{
					"id": 978,
					"name": "onKeyDown",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1424,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement",
								"qualifiedName": "HTMLInputElement",
								"package": "typescript"
							}
						],
						"name": "KeyboardEventHandler",
						"qualifiedName": "React.KeyboardEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Omit.onKeyDown"
					}
				},
				{
					"id": 979,
					"name": "onKeyDownCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1425,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement",
								"qualifiedName": "HTMLInputElement",
								"package": "typescript"
							}
						],
						"name": "KeyboardEventHandler",
						"qualifiedName": "React.KeyboardEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Omit.onKeyDownCapture"
					}
				},
				{
					"id": 980,
					"name": "onKeyPress",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"summary": [],
						"blockTags": [
							{
								"tag": "@deprecated",
								"content": []
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1427,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement",
								"qualifiedName": "HTMLInputElement",
								"package": "typescript"
							}
						],
						"name": "KeyboardEventHandler",
						"qualifiedName": "React.KeyboardEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Omit.onKeyPress"
					}
				},
				{
					"id": 981,
					"name": "onKeyPressCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"comment": {
						"summary": [],
						"blockTags": [
							{
								"tag": "@deprecated",
								"content": []
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1429,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement",
								"qualifiedName": "HTMLInputElement",
								"package": "typescript"
							}
						],
						"name": "KeyboardEventHandler",
						"qualifiedName": "React.KeyboardEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Omit.onKeyPressCapture"
					}
				},
				{
					"id": 982,
					"name": "onKeyUp",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1430,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement",
								"qualifiedName": "HTMLInputElement",
								"package": "typescript"
							}
						],
						"name": "KeyboardEventHandler",
						"qualifiedName": "React.KeyboardEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Omit.onKeyUp"
					}
				},
				{
					"id": 983,
					"name": "onKeyUpCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1431,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement",
								"qualifiedName": "HTMLInputElement",
								"package": "typescript"
							}
						],
						"name": "KeyboardEventHandler",
						"qualifiedName": "React.KeyboardEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Omit.onKeyUpCapture"
					}
				},
				{
					"id": 974,
					"name": "onLoad",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1418,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement",
								"qualifiedName": "HTMLInputElement",
								"package": "typescript"
							}
						],
						"name": "ReactEventHandler",
						"qualifiedName": "React.ReactEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Omit.onLoad"
					}
				},
				{
					"id": 975,
					"name": "onLoadCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1419,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement",
								"qualifiedName": "HTMLInputElement",
								"package": "typescript"
							}
						],
						"name": "ReactEventHandler",
						"qualifiedName": "React.ReactEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Omit.onLoadCapture"
					}
				},
				{
					"id": 1002,
					"name": "onLoadStart",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1452,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement",
								"qualifiedName": "HTMLInputElement",
								"package": "typescript"
							}
						],
						"name": "ReactEventHandler",
						"qualifiedName": "React.ReactEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Omit.onLoadStart"
					}
				},
				{
					"id": 1003,
					"name": "onLoadStartCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1453,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement",
								"qualifiedName": "HTMLInputElement",
								"package": "typescript"
							}
						],
						"name": "ReactEventHandler",
						"qualifiedName": "React.ReactEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Omit.onLoadStartCapture"
					}
				},
				{
					"id": 998,
					"name": "onLoadedData",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1448,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement",
								"qualifiedName": "HTMLInputElement",
								"package": "typescript"
							}
						],
						"name": "ReactEventHandler",
						"qualifiedName": "React.ReactEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Omit.onLoadedData"
					}
				},
				{
					"id": 999,
					"name": "onLoadedDataCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1449,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement",
								"qualifiedName": "HTMLInputElement",
								"package": "typescript"
							}
						],
						"name": "ReactEventHandler",
						"qualifiedName": "React.ReactEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Omit.onLoadedDataCapture"
					}
				},
				{
					"id": 1000,
					"name": "onLoadedMetadata",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1450,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement",
								"qualifiedName": "HTMLInputElement",
								"package": "typescript"
							}
						],
						"name": "ReactEventHandler",
						"qualifiedName": "React.ReactEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Omit.onLoadedMetadata"
					}
				},
				{
					"id": 1001,
					"name": "onLoadedMetadataCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1451,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement",
								"qualifiedName": "HTMLInputElement",
								"package": "typescript"
							}
						],
						"name": "ReactEventHandler",
						"qualifiedName": "React.ReactEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Omit.onLoadedMetadataCapture"
					}
				},
				{
					"id": 1094,
					"name": "onLostPointerCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1552,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement",
								"qualifiedName": "HTMLInputElement",
								"package": "typescript"
							}
						],
						"name": "PointerEventHandler",
						"qualifiedName": "React.PointerEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Omit.onLostPointerCapture"
					}
				},
				{
					"id": 1095,
					"name": "onLostPointerCaptureCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1553,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement",
								"qualifiedName": "HTMLInputElement",
								"package": "typescript"
							}
						],
						"name": "PointerEventHandler",
						"qualifiedName": "React.PointerEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Omit.onLostPointerCaptureCapture"
					}
				},
				{
					"id": 1054,
					"name": "onMouseDown",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1506,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement",
								"qualifiedName": "HTMLInputElement",
								"package": "typescript"
							}
						],
						"name": "MouseEventHandler",
						"qualifiedName": "React.MouseEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Omit.onMouseDown"
					}
				},
				{
					"id": 1055,
					"name": "onMouseDownCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1507,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement",
								"qualifiedName": "HTMLInputElement",
								"package": "typescript"
							}
						],
						"name": "MouseEventHandler",
						"qualifiedName": "React.MouseEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Omit.onMouseDownCapture"
					}
				},
				{
					"id": 1056,
					"name": "onMouseEnter",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1508,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement",
								"qualifiedName": "HTMLInputElement",
								"package": "typescript"
							}
						],
						"name": "MouseEventHandler",
						"qualifiedName": "React.MouseEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Omit.onMouseEnter"
					}
				},
				{
					"id": 1057,
					"name": "onMouseLeave",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1509,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement",
								"qualifiedName": "HTMLInputElement",
								"package": "typescript"
							}
						],
						"name": "MouseEventHandler",
						"qualifiedName": "React.MouseEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Omit.onMouseLeave"
					}
				},
				{
					"id": 1058,
					"name": "onMouseMove",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1510,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement",
								"qualifiedName": "HTMLInputElement",
								"package": "typescript"
							}
						],
						"name": "MouseEventHandler",
						"qualifiedName": "React.MouseEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Omit.onMouseMove"
					}
				},
				{
					"id": 1059,
					"name": "onMouseMoveCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1511,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement",
								"qualifiedName": "HTMLInputElement",
								"package": "typescript"
							}
						],
						"name": "MouseEventHandler",
						"qualifiedName": "React.MouseEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Omit.onMouseMoveCapture"
					}
				},
				{
					"id": 1060,
					"name": "onMouseOut",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1512,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement",
								"qualifiedName": "HTMLInputElement",
								"package": "typescript"
							}
						],
						"name": "MouseEventHandler",
						"qualifiedName": "React.MouseEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Omit.onMouseOut"
					}
				},
				{
					"id": 1061,
					"name": "onMouseOutCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1513,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement",
								"qualifiedName": "HTMLInputElement",
								"package": "typescript"
							}
						],
						"name": "MouseEventHandler",
						"qualifiedName": "React.MouseEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Omit.onMouseOutCapture"
					}
				},
				{
					"id": 1062,
					"name": "onMouseOver",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1514,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement",
								"qualifiedName": "HTMLInputElement",
								"package": "typescript"
							}
						],
						"name": "MouseEventHandler",
						"qualifiedName": "React.MouseEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Omit.onMouseOver"
					}
				},
				{
					"id": 1063,
					"name": "onMouseOverCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1515,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement",
								"qualifiedName": "HTMLInputElement",
								"package": "typescript"
							}
						],
						"name": "MouseEventHandler",
						"qualifiedName": "React.MouseEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Omit.onMouseOverCapture"
					}
				},
				{
					"id": 1064,
					"name": "onMouseUp",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1516,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement",
								"qualifiedName": "HTMLInputElement",
								"package": "typescript"
							}
						],
						"name": "MouseEventHandler",
						"qualifiedName": "React.MouseEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Omit.onMouseUp"
					}
				},
				{
					"id": 1065,
					"name": "onMouseUpCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1517,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement",
								"qualifiedName": "HTMLInputElement",
								"package": "typescript"
							}
						],
						"name": "MouseEventHandler",
						"qualifiedName": "React.MouseEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Omit.onMouseUpCapture"
					}
				},
				{
					"id": 950,
					"name": "onPaste",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1386,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement",
								"qualifiedName": "HTMLInputElement",
								"package": "typescript"
							}
						],
						"name": "ClipboardEventHandler",
						"qualifiedName": "React.ClipboardEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Omit.onPaste"
					}
				},
				{
					"id": 951,
					"name": "onPasteCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1387,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement",
								"qualifiedName": "HTMLInputElement",
								"package": "typescript"
							}
						],
						"name": "ClipboardEventHandler",
						"qualifiedName": "React.ClipboardEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Omit.onPasteCapture"
					}
				},
				{
					"id": 1004,
					"name": "onPause",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1454,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement",
								"qualifiedName": "HTMLInputElement",
								"package": "typescript"
							}
						],
						"name": "ReactEventHandler",
						"qualifiedName": "React.ReactEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Omit.onPause"
					}
				},
				{
					"id": 1005,
					"name": "onPauseCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1455,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement",
								"qualifiedName": "HTMLInputElement",
								"package": "typescript"
							}
						],
						"name": "ReactEventHandler",
						"qualifiedName": "React.ReactEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Omit.onPauseCapture"
					}
				},
				{
					"id": 1006,
					"name": "onPlay",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1456,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement",
								"qualifiedName": "HTMLInputElement",
								"package": "typescript"
							}
						],
						"name": "ReactEventHandler",
						"qualifiedName": "React.ReactEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Omit.onPlay"
					}
				},
				{
					"id": 1007,
					"name": "onPlayCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1457,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement",
								"qualifiedName": "HTMLInputElement",
								"package": "typescript"
							}
						],
						"name": "ReactEventHandler",
						"qualifiedName": "React.ReactEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Omit.onPlayCapture"
					}
				},
				{
					"id": 1008,
					"name": "onPlaying",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1458,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement",
								"qualifiedName": "HTMLInputElement",
								"package": "typescript"
							}
						],
						"name": "ReactEventHandler",
						"qualifiedName": "React.ReactEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Omit.onPlaying"
					}
				},
				{
					"id": 1009,
					"name": "onPlayingCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1459,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement",
								"qualifiedName": "HTMLInputElement",
								"package": "typescript"
							}
						],
						"name": "ReactEventHandler",
						"qualifiedName": "React.ReactEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Omit.onPlayingCapture"
					}
				},
				{
					"id": 1082,
					"name": "onPointerCancel",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1540,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement",
								"qualifiedName": "HTMLInputElement",
								"package": "typescript"
							}
						],
						"name": "PointerEventHandler",
						"qualifiedName": "React.PointerEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Omit.onPointerCancel"
					}
				},
				{
					"id": 1083,
					"name": "onPointerCancelCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1541,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement",
								"qualifiedName": "HTMLInputElement",
								"package": "typescript"
							}
						],
						"name": "PointerEventHandler",
						"qualifiedName": "React.PointerEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Omit.onPointerCancelCapture"
					}
				},
				{
					"id": 1076,
					"name": "onPointerDown",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1534,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement",
								"qualifiedName": "HTMLInputElement",
								"package": "typescript"
							}
						],
						"name": "PointerEventHandler",
						"qualifiedName": "React.PointerEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Omit.onPointerDown"
					}
				},
				{
					"id": 1077,
					"name": "onPointerDownCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1535,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement",
								"qualifiedName": "HTMLInputElement",
								"package": "typescript"
							}
						],
						"name": "PointerEventHandler",
						"qualifiedName": "React.PointerEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Omit.onPointerDownCapture"
					}
				},
				{
					"id": 1084,
					"name": "onPointerEnter",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1542,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement",
								"qualifiedName": "HTMLInputElement",
								"package": "typescript"
							}
						],
						"name": "PointerEventHandler",
						"qualifiedName": "React.PointerEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Omit.onPointerEnter"
					}
				},
				{
					"id": 1085,
					"name": "onPointerEnterCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1543,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement",
								"qualifiedName": "HTMLInputElement",
								"package": "typescript"
							}
						],
						"name": "PointerEventHandler",
						"qualifiedName": "React.PointerEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Omit.onPointerEnterCapture"
					}
				},
				{
					"id": 1086,
					"name": "onPointerLeave",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1544,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement",
								"qualifiedName": "HTMLInputElement",
								"package": "typescript"
							}
						],
						"name": "PointerEventHandler",
						"qualifiedName": "React.PointerEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Omit.onPointerLeave"
					}
				},
				{
					"id": 1087,
					"name": "onPointerLeaveCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1545,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement",
								"qualifiedName": "HTMLInputElement",
								"package": "typescript"
							}
						],
						"name": "PointerEventHandler",
						"qualifiedName": "React.PointerEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Omit.onPointerLeaveCapture"
					}
				},
				{
					"id": 1078,
					"name": "onPointerMove",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1536,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement",
								"qualifiedName": "HTMLInputElement",
								"package": "typescript"
							}
						],
						"name": "PointerEventHandler",
						"qualifiedName": "React.PointerEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Omit.onPointerMove"
					}
				},
				{
					"id": 1079,
					"name": "onPointerMoveCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1537,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement",
								"qualifiedName": "HTMLInputElement",
								"package": "typescript"
							}
						],
						"name": "PointerEventHandler",
						"qualifiedName": "React.PointerEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Omit.onPointerMoveCapture"
					}
				},
				{
					"id": 1090,
					"name": "onPointerOut",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1548,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement",
								"qualifiedName": "HTMLInputElement",
								"package": "typescript"
							}
						],
						"name": "PointerEventHandler",
						"qualifiedName": "React.PointerEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Omit.onPointerOut"
					}
				},
				{
					"id": 1091,
					"name": "onPointerOutCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1549,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement",
								"qualifiedName": "HTMLInputElement",
								"package": "typescript"
							}
						],
						"name": "PointerEventHandler",
						"qualifiedName": "React.PointerEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Omit.onPointerOutCapture"
					}
				},
				{
					"id": 1088,
					"name": "onPointerOver",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1546,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement",
								"qualifiedName": "HTMLInputElement",
								"package": "typescript"
							}
						],
						"name": "PointerEventHandler",
						"qualifiedName": "React.PointerEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Omit.onPointerOver"
					}
				},
				{
					"id": 1089,
					"name": "onPointerOverCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1547,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement",
								"qualifiedName": "HTMLInputElement",
								"package": "typescript"
							}
						],
						"name": "PointerEventHandler",
						"qualifiedName": "React.PointerEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Omit.onPointerOverCapture"
					}
				},
				{
					"id": 1080,
					"name": "onPointerUp",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1538,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement",
								"qualifiedName": "HTMLInputElement",
								"package": "typescript"
							}
						],
						"name": "PointerEventHandler",
						"qualifiedName": "React.PointerEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Omit.onPointerUp"
					}
				},
				{
					"id": 1081,
					"name": "onPointerUpCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1539,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement",
								"qualifiedName": "HTMLInputElement",
								"package": "typescript"
							}
						],
						"name": "PointerEventHandler",
						"qualifiedName": "React.PointerEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Omit.onPointerUpCapture"
					}
				},
				{
					"id": 1010,
					"name": "onProgress",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1460,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement",
								"qualifiedName": "HTMLInputElement",
								"package": "typescript"
							}
						],
						"name": "ReactEventHandler",
						"qualifiedName": "React.ReactEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Omit.onProgress"
					}
				},
				{
					"id": 1011,
					"name": "onProgressCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1461,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement",
								"qualifiedName": "HTMLInputElement",
								"package": "typescript"
							}
						],
						"name": "ReactEventHandler",
						"qualifiedName": "React.ReactEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Omit.onProgressCapture"
					}
				},
				{
					"id": 1012,
					"name": "onRateChange",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1462,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement",
								"qualifiedName": "HTMLInputElement",
								"package": "typescript"
							}
						],
						"name": "ReactEventHandler",
						"qualifiedName": "React.ReactEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Omit.onRateChange"
					}
				},
				{
					"id": 1013,
					"name": "onRateChangeCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1463,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement",
								"qualifiedName": "HTMLInputElement",
								"package": "typescript"
							}
						],
						"name": "ReactEventHandler",
						"qualifiedName": "React.ReactEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Omit.onRateChangeCapture"
					}
				},
				{
					"id": 968,
					"name": "onReset",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1410,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement",
								"qualifiedName": "HTMLInputElement",
								"package": "typescript"
							}
						],
						"name": "FormEventHandler",
						"qualifiedName": "React.FormEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Omit.onReset"
					}
				},
				{
					"id": 969,
					"name": "onResetCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1411,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement",
								"qualifiedName": "HTMLInputElement",
								"package": "typescript"
							}
						],
						"name": "FormEventHandler",
						"qualifiedName": "React.FormEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Omit.onResetCapture"
					}
				},
				{
					"id": 1014,
					"name": "onResize",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1464,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement",
								"qualifiedName": "HTMLInputElement",
								"package": "typescript"
							}
						],
						"name": "ReactEventHandler",
						"qualifiedName": "React.ReactEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Omit.onResize"
					}
				},
				{
					"id": 1015,
					"name": "onResizeCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1465,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement",
								"qualifiedName": "HTMLInputElement",
								"package": "typescript"
							}
						],
						"name": "ReactEventHandler",
						"qualifiedName": "React.ReactEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Omit.onResizeCapture"
					}
				},
				{
					"id": 1096,
					"name": "onScroll",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1556,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement",
								"qualifiedName": "HTMLInputElement",
								"package": "typescript"
							}
						],
						"name": "UIEventHandler",
						"qualifiedName": "React.UIEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Omit.onScroll"
					}
				},
				{
					"id": 1097,
					"name": "onScrollCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1557,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement",
								"qualifiedName": "HTMLInputElement",
								"package": "typescript"
							}
						],
						"name": "UIEventHandler",
						"qualifiedName": "React.UIEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Omit.onScrollCapture"
					}
				},
				{
					"id": 1016,
					"name": "onSeeked",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1466,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement",
								"qualifiedName": "HTMLInputElement",
								"package": "typescript"
							}
						],
						"name": "ReactEventHandler",
						"qualifiedName": "React.ReactEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Omit.onSeeked"
					}
				},
				{
					"id": 1017,
					"name": "onSeekedCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1467,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement",
								"qualifiedName": "HTMLInputElement",
								"package": "typescript"
							}
						],
						"name": "ReactEventHandler",
						"qualifiedName": "React.ReactEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Omit.onSeekedCapture"
					}
				},
				{
					"id": 1018,
					"name": "onSeeking",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1468,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement",
								"qualifiedName": "HTMLInputElement",
								"package": "typescript"
							}
						],
						"name": "ReactEventHandler",
						"qualifiedName": "React.ReactEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Omit.onSeeking"
					}
				},
				{
					"id": 1019,
					"name": "onSeekingCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1469,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement",
								"qualifiedName": "HTMLInputElement",
								"package": "typescript"
							}
						],
						"name": "ReactEventHandler",
						"qualifiedName": "React.ReactEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Omit.onSeekingCapture"
					}
				},
				{
					"id": 1066,
					"name": "onSelect",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1520,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement",
								"qualifiedName": "HTMLInputElement",
								"package": "typescript"
							}
						],
						"name": "ReactEventHandler",
						"qualifiedName": "React.ReactEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Omit.onSelect"
					}
				},
				{
					"id": 1067,
					"name": "onSelectCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1521,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement",
								"qualifiedName": "HTMLInputElement",
								"package": "typescript"
							}
						],
						"name": "ReactEventHandler",
						"qualifiedName": "React.ReactEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Omit.onSelectCapture"
					}
				},
				{
					"id": 1020,
					"name": "onStalled",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1470,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement",
								"qualifiedName": "HTMLInputElement",
								"package": "typescript"
							}
						],
						"name": "ReactEventHandler",
						"qualifiedName": "React.ReactEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Omit.onStalled"
					}
				},
				{
					"id": 1021,
					"name": "onStalledCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1471,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement",
								"qualifiedName": "HTMLInputElement",
								"package": "typescript"
							}
						],
						"name": "ReactEventHandler",
						"qualifiedName": "React.ReactEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Omit.onStalledCapture"
					}
				},
				{
					"id": 970,
					"name": "onSubmit",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1412,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement",
								"qualifiedName": "HTMLInputElement",
								"package": "typescript"
							}
						],
						"name": "FormEventHandler",
						"qualifiedName": "React.FormEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Omit.onSubmit"
					}
				},
				{
					"id": 971,
					"name": "onSubmitCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1413,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement",
								"qualifiedName": "HTMLInputElement",
								"package": "typescript"
							}
						],
						"name": "FormEventHandler",
						"qualifiedName": "React.FormEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Omit.onSubmitCapture"
					}
				},
				{
					"id": 1022,
					"name": "onSuspend",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1472,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement",
								"qualifiedName": "HTMLInputElement",
								"package": "typescript"
							}
						],
						"name": "ReactEventHandler",
						"qualifiedName": "React.ReactEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Omit.onSuspend"
					}
				},
				{
					"id": 1023,
					"name": "onSuspendCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1473,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement",
								"qualifiedName": "HTMLInputElement",
								"package": "typescript"
							}
						],
						"name": "ReactEventHandler",
						"qualifiedName": "React.ReactEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Omit.onSuspendCapture"
					}
				},
				{
					"id": 1024,
					"name": "onTimeUpdate",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1474,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement",
								"qualifiedName": "HTMLInputElement",
								"package": "typescript"
							}
						],
						"name": "ReactEventHandler",
						"qualifiedName": "React.ReactEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Omit.onTimeUpdate"
					}
				},
				{
					"id": 1025,
					"name": "onTimeUpdateCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1475,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement",
								"qualifiedName": "HTMLInputElement",
								"package": "typescript"
							}
						],
						"name": "ReactEventHandler",
						"qualifiedName": "React.ReactEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Omit.onTimeUpdateCapture"
					}
				},
				{
					"id": 1068,
					"name": "onTouchCancel",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1524,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement",
								"qualifiedName": "HTMLInputElement",
								"package": "typescript"
							}
						],
						"name": "TouchEventHandler",
						"qualifiedName": "React.TouchEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Omit.onTouchCancel"
					}
				},
				{
					"id": 1069,
					"name": "onTouchCancelCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1525,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement",
								"qualifiedName": "HTMLInputElement",
								"package": "typescript"
							}
						],
						"name": "TouchEventHandler",
						"qualifiedName": "React.TouchEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Omit.onTouchCancelCapture"
					}
				},
				{
					"id": 1070,
					"name": "onTouchEnd",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1526,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement",
								"qualifiedName": "HTMLInputElement",
								"package": "typescript"
							}
						],
						"name": "TouchEventHandler",
						"qualifiedName": "React.TouchEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Omit.onTouchEnd"
					}
				},
				{
					"id": 1071,
					"name": "onTouchEndCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1527,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement",
								"qualifiedName": "HTMLInputElement",
								"package": "typescript"
							}
						],
						"name": "TouchEventHandler",
						"qualifiedName": "React.TouchEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Omit.onTouchEndCapture"
					}
				},
				{
					"id": 1072,
					"name": "onTouchMove",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1528,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement",
								"qualifiedName": "HTMLInputElement",
								"package": "typescript"
							}
						],
						"name": "TouchEventHandler",
						"qualifiedName": "React.TouchEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Omit.onTouchMove"
					}
				},
				{
					"id": 1073,
					"name": "onTouchMoveCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1529,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement",
								"qualifiedName": "HTMLInputElement",
								"package": "typescript"
							}
						],
						"name": "TouchEventHandler",
						"qualifiedName": "React.TouchEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Omit.onTouchMoveCapture"
					}
				},
				{
					"id": 1074,
					"name": "onTouchStart",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1530,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement",
								"qualifiedName": "HTMLInputElement",
								"package": "typescript"
							}
						],
						"name": "TouchEventHandler",
						"qualifiedName": "React.TouchEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Omit.onTouchStart"
					}
				},
				{
					"id": 1075,
					"name": "onTouchStartCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1531,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement",
								"qualifiedName": "HTMLInputElement",
								"package": "typescript"
							}
						],
						"name": "TouchEventHandler",
						"qualifiedName": "React.TouchEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Omit.onTouchStartCapture"
					}
				},
				{
					"id": 1106,
					"name": "onTransitionEnd",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1572,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement",
								"qualifiedName": "HTMLInputElement",
								"package": "typescript"
							}
						],
						"name": "TransitionEventHandler",
						"qualifiedName": "React.TransitionEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Omit.onTransitionEnd"
					}
				},
				{
					"id": 1107,
					"name": "onTransitionEndCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1573,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement",
								"qualifiedName": "HTMLInputElement",
								"package": "typescript"
							}
						],
						"name": "TransitionEventHandler",
						"qualifiedName": "React.TransitionEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Omit.onTransitionEndCapture"
					}
				},
				{
					"id": 1026,
					"name": "onVolumeChange",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1476,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement",
								"qualifiedName": "HTMLInputElement",
								"package": "typescript"
							}
						],
						"name": "ReactEventHandler",
						"qualifiedName": "React.ReactEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Omit.onVolumeChange"
					}
				},
				{
					"id": 1027,
					"name": "onVolumeChangeCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1477,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement",
								"qualifiedName": "HTMLInputElement",
								"package": "typescript"
							}
						],
						"name": "ReactEventHandler",
						"qualifiedName": "React.ReactEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Omit.onVolumeChangeCapture"
					}
				},
				{
					"id": 1028,
					"name": "onWaiting",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1478,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement",
								"qualifiedName": "HTMLInputElement",
								"package": "typescript"
							}
						],
						"name": "ReactEventHandler",
						"qualifiedName": "React.ReactEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Omit.onWaiting"
					}
				},
				{
					"id": 1029,
					"name": "onWaitingCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1479,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement",
								"qualifiedName": "HTMLInputElement",
								"package": "typescript"
							}
						],
						"name": "ReactEventHandler",
						"qualifiedName": "React.ReactEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Omit.onWaitingCapture"
					}
				},
				{
					"id": 1098,
					"name": "onWheel",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1560,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement",
								"qualifiedName": "HTMLInputElement",
								"package": "typescript"
							}
						],
						"name": "WheelEventHandler",
						"qualifiedName": "React.WheelEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Omit.onWheel"
					}
				},
				{
					"id": 1099,
					"name": "onWheelCapture",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1561,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement",
								"qualifiedName": "HTMLInputElement",
								"package": "typescript"
							}
						],
						"name": "WheelEventHandler",
						"qualifiedName": "React.WheelEventHandler",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Omit.onWheelCapture"
					}
				},
				{
					"id": 833,
					"name": "pattern",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 2248,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Omit.pattern"
					}
				},
				{
					"id": 869,
					"name": "placeholder",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 2249,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Omit.placeholder"
					}
				},
				{
					"id": 838,
					"name": "prefix",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1884,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Omit.prefix"
					}
				},
				{
					"id": 876,
					"name": "property",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1885,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Omit.property"
					}
				},
				{
					"id": 871,
					"name": "radioGroup",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1875,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Omit.radioGroup"
					}
				},
				{
					"id": 940,
					"name": "readOnly",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 2250,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Omit.readOnly"
					}
				},
				{
					"id": 847,
					"name": "ref",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 138,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "HTMLInputElement",
								"qualifiedName": "HTMLInputElement",
								"package": "typescript"
							}
						],
						"name": "LegacyRef",
						"qualifiedName": "React.LegacyRef",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Omit.ref"
					}
				},
				{
					"id": 818,
					"name": "required",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 2251,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Omit.required"
					}
				},
				{
					"id": 877,
					"name": "resource",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1886,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Omit.resource"
					}
				},
				{
					"id": 888,
					"name": "results",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1900,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Omit.results"
					}
				},
				{
					"id": 872,
					"name": "role",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1878,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"name": "AriaRole",
						"qualifiedName": "React.AriaRole",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Omit.role"
					}
				},
				{
					"id": 889,
					"name": "security",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1901,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Omit.security"
					}
				},
				{
					"id": 829,
					"name": "slot",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1867,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Omit.slot"
					}
				},
				{
					"id": 870,
					"name": "spellCheck",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1868,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"name": "Booleanish",
						"qualifiedName": "Booleanish",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Omit.spellCheck"
					}
				},
				{
					"id": 941,
					"name": "src",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 2253,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Omit.src"
					}
				},
				{
					"id": 942,
					"name": "step",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 2254,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Omit.step"
					}
				},
				{
					"id": 830,
					"name": "style",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1869,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"name": "CSSProperties",
						"qualifiedName": "React.CSSProperties",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Omit.style"
					}
				},
				{
					"id": 866,
					"name": "suppressContentEditableWarning",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1852,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Omit.suppressContentEditableWarning"
					}
				},
				{
					"id": 867,
					"name": "suppressHydrationWarning",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1853,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Omit.suppressHydrationWarning"
					}
				},
				{
					"id": 844,
					"name": "tabIndex",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1870,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Omit.tabIndex"
					}
				},
				{
					"id": 831,
					"name": "title",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1871,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Omit.title"
					}
				},
				{
					"id": 825,
					"name": "translate",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1872,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": "yes"
							},
							{
								"type": "literal",
								"value": "no"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Omit.translate"
					}
				},
				{
					"id": 819,
					"name": "type",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 2255,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"name": "HTMLInputTypeAttribute",
						"qualifiedName": "React.HTMLInputTypeAttribute",
						"package": "@types/react"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Omit.type"
					}
				},
				{
					"id": 878,
					"name": "typeof",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1887,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Omit.typeof"
					}
				},
				{
					"id": 890,
					"name": "unselectable",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1902,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": "on"
							},
							{
								"type": "literal",
								"value": "off"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Omit.unselectable"
					}
				},
				{
					"id": 826,
					"name": "value",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 2256,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "number"
							},
							{
								"type": "typeOperator",
								"operator": "readonly",
								"target": {
									"type": "array",
									"elementType": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Omit.value"
					}
				},
				{
					"id": 879,
					"name": "vocab",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 1888,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Omit.vocab"
					}
				},
				{
					"id": 822,
					"name": "width",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.0.25/node_modules/@types/react/index.d.ts",
							"line": 2257,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Omit.width"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						873,
						848,
						834,
						849,
						892,
						893,
						894,
						895,
						896,
						897,
						898,
						899,
						900,
						901,
						902,
						903,
						904,
						905,
						906,
						907,
						908,
						909,
						910,
						911,
						912,
						913,
						914,
						915,
						916,
						917,
						918,
						919,
						920,
						921,
						922,
						923,
						924,
						925,
						926,
						927,
						928,
						929,
						930,
						931,
						932,
						933,
						934,
						935,
						936,
						937,
						938,
						939,
						880,
						850,
						881,
						851,
						882,
						852,
						853,
						839,
						837,
						824,
						840,
						868,
						854,
						943,
						874,
						864,
						865,
						832,
						845,
						835,
						841,
						828,
						855,
						856,
						857,
						858,
						859,
						821,
						827,
						814,
						875,
						842,
						891,
						886,
						883,
						887,
						884,
						885,
						820,
						815,
						816,
						836,
						860,
						817,
						861,
						862,
						863,
						846,
						823,
						843,
						984,
						985,
						1102,
						1103,
						1104,
						1105,
						1100,
						1101,
						1030,
						1031,
						964,
						965,
						960,
						961,
						986,
						987,
						988,
						989,
						962,
						963,
						1032,
						1033,
						952,
						953,
						954,
						955,
						956,
						957,
						1034,
						1035,
						946,
						947,
						948,
						949,
						1036,
						1037,
						1038,
						1039,
						1040,
						1041,
						1042,
						1043,
						1044,
						1045,
						1046,
						1047,
						1048,
						1049,
						1050,
						1051,
						1052,
						1053,
						990,
						991,
						992,
						993,
						994,
						995,
						996,
						997,
						976,
						977,
						958,
						959,
						1092,
						1093,
						966,
						967,
						972,
						973,
						978,
						979,
						980,
						981,
						982,
						983,
						974,
						975,
						1002,
						1003,
						998,
						999,
						1000,
						1001,
						1094,
						1095,
						1054,
						1055,
						1056,
						1057,
						1058,
						1059,
						1060,
						1061,
						1062,
						1063,
						1064,
						1065,
						950,
						951,
						1004,
						1005,
						1006,
						1007,
						1008,
						1009,
						1082,
						1083,
						1076,
						1077,
						1084,
						1085,
						1086,
						1087,
						1078,
						1079,
						1090,
						1091,
						1088,
						1089,
						1080,
						1081,
						1010,
						1011,
						1012,
						1013,
						968,
						969,
						1014,
						1015,
						1096,
						1097,
						1016,
						1017,
						1018,
						1019,
						1066,
						1067,
						1020,
						1021,
						970,
						971,
						1022,
						1023,
						1024,
						1025,
						1068,
						1069,
						1070,
						1071,
						1072,
						1073,
						1074,
						1075,
						1106,
						1107,
						1026,
						1027,
						1028,
						1029,
						1098,
						1099,
						833,
						869,
						838,
						876,
						871,
						940,
						847,
						818,
						877,
						888,
						872,
						889,
						829,
						870,
						941,
						942,
						830,
						866,
						867,
						844,
						831,
						825,
						819,
						878,
						890,
						826,
						879,
						822
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/core/src/ToggleBox/index.tsx",
					"line": 5,
					"character": 17,
					"url": "https://github.com/dilan-dio4/tulsa/blob/3f22e3f/packages/core/src/ToggleBox/index.tsx#L5"
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"typeArguments": [
						{
							"type": "reference",
							"typeArguments": [
								{
									"type": "reference",
									"typeArguments": [
										{
											"type": "reference",
											"name": "HTMLInputElement",
											"qualifiedName": "HTMLInputElement",
											"package": "typescript"
										}
									],
									"name": "InputHTMLAttributes",
									"qualifiedName": "React.InputHTMLAttributes",
									"package": "@types/react"
								},
								{
									"type": "reference",
									"name": "HTMLInputElement",
									"qualifiedName": "HTMLInputElement",
									"package": "typescript"
								}
							],
							"name": "DetailedHTMLProps",
							"qualifiedName": "React.DetailedHTMLProps",
							"package": "@types/react"
						},
						{
							"type": "literal",
							"value": "size"
						}
					],
					"name": "Omit",
					"qualifiedName": "Omit",
					"package": "typescript"
				}
			]
		},
		{
			"id": 5,
			"name": "Variant",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {},
			"sources": [
				{
					"fileName": "packages/core/src/Button/index.tsx",
					"line": 20,
					"character": 12,
					"url": "https://github.com/dilan-dio4/tulsa/blob/3f22e3f/packages/core/src/Button/index.tsx#L20"
				}
			],
			"type": {
				"type": "union",
				"types": [
					{
						"type": "literal",
						"value": "Primary"
					},
					{
						"type": "literal",
						"value": "Secondary"
					},
					{
						"type": "literal",
						"value": "Invisible"
					}
				]
			}
		},
		{
			"id": 18,
			"name": "Button",
			"kind": 64,
			"kindString": "Function",
			"flags": {},
			"sources": [
				{
					"fileName": "packages/core/src/Button/index.tsx",
					"line": 209,
					"character": 13,
					"url": "https://github.com/dilan-dio4/tulsa/blob/3f22e3f/packages/core/src/Button/index.tsx#L209"
				}
			],
			"signatures": [
				{
					"id": 19,
					"name": "Button",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"typeParameter": [
						{
							"id": 20,
							"name": "T",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {},
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "any"
									}
								],
								"name": "ElementType",
								"qualifiedName": "React.ElementType",
								"package": "@types/react"
							},
							"default": {
								"type": "literal",
								"value": "button"
							}
						}
					],
					"parameters": [
						{
							"id": 21,
							"name": "__namedParameters",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "intersection",
								"types": [
									{
										"type": "reference",
										"id": 6,
										"typeArguments": [
											{
												"type": "reference",
												"id": 20,
												"name": "T"
											}
										],
										"name": "IButtonProps"
									},
									{
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"typeArguments": [
															{
																"type": "reference",
																"id": 20,
																"name": "T"
															}
														],
														"name": "ComponentProps",
														"qualifiedName": "React.ComponentProps",
														"package": "@types/react"
													}
												],
												"name": "PropsWithoutRef",
												"qualifiedName": "React.PropsWithoutRef",
												"package": "@types/react"
											},
											{
												"type": "literal",
												"value": "size"
											}
										],
										"name": "Omit",
										"qualifiedName": "Omit",
										"package": "typescript"
									}
								]
							}
						}
					],
					"type": {
						"type": "reference",
						"name": "Element",
						"qualifiedName": "global.JSX.Element",
						"package": "@types/react"
					}
				}
			]
		},
		{
			"id": 1122,
			"name": "ButtonGroup",
			"kind": 64,
			"kindString": "Function",
			"flags": {},
			"sources": [
				{
					"fileName": "packages/core/src/ButtonGroup/index.tsx",
					"line": 4,
					"character": 16,
					"url": "https://github.com/dilan-dio4/tulsa/blob/3f22e3f/packages/core/src/ButtonGroup/index.tsx#L4"
				}
			],
			"signatures": [
				{
					"id": 1123,
					"name": "ButtonGroup",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"parameters": [
						{
							"id": 1124,
							"name": "__namedParameters",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"name": "HTMLDivElement",
														"qualifiedName": "HTMLDivElement",
														"package": "typescript"
													}
												],
												"name": "HTMLAttributes",
												"qualifiedName": "React.HTMLAttributes",
												"package": "@types/react"
											},
											{
												"type": "reference",
												"name": "HTMLDivElement",
												"qualifiedName": "HTMLDivElement",
												"package": "typescript"
											}
										],
										"name": "DetailedHTMLProps",
										"qualifiedName": "React.DetailedHTMLProps",
										"package": "@types/react"
									},
									{
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": "key"
											},
											{
												"type": "typeOperator",
												"operator": "keyof",
												"target": {
													"type": "reference",
													"typeArguments": [
														{
															"type": "reference",
															"name": "HTMLDivElement",
															"qualifiedName": "HTMLDivElement",
															"package": "typescript"
														}
													],
													"name": "HTMLAttributes",
													"qualifiedName": "React.HTMLAttributes",
													"package": "@types/react"
												}
											}
										]
									}
								],
								"name": "Pick",
								"qualifiedName": "Pick",
								"package": "typescript"
							}
						}
					],
					"type": {
						"type": "reference",
						"name": "Element",
						"qualifiedName": "global.JSX.Element",
						"package": "@types/react"
					}
				}
			]
		},
		{
			"id": 1108,
			"name": "Checkbox",
			"kind": 64,
			"kindString": "Function",
			"flags": {},
			"sources": [
				{
					"fileName": "packages/core/src/ToggleBox/index.tsx",
					"line": 73,
					"character": 13,
					"url": "https://github.com/dilan-dio4/tulsa/blob/3f22e3f/packages/core/src/ToggleBox/index.tsx#L73"
				}
			],
			"signatures": [
				{
					"id": 1109,
					"name": "Checkbox",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"parameters": [
						{
							"id": 1110,
							"name": "__namedParameters",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "reference",
								"id": 813,
								"name": "IToggleBox"
							}
						}
					],
					"type": {
						"type": "reference",
						"name": "Element",
						"qualifiedName": "global.JSX.Element",
						"package": "@types/react"
					}
				}
			]
		},
		{
			"id": 1389,
			"name": "Dropdown",
			"kind": 64,
			"kindString": "Function",
			"flags": {},
			"sources": [
				{
					"fileName": "packages/core/src/Dropdown/index.tsx",
					"line": 51,
					"character": 16,
					"url": "https://github.com/dilan-dio4/tulsa/blob/3f22e3f/packages/core/src/Dropdown/index.tsx#L51"
				}
			],
			"signatures": [
				{
					"id": 1390,
					"name": "Dropdown",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"parameters": [
						{
							"id": 1391,
							"name": "__namedParameters",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "reference",
								"name": "IDropdownProps"
							}
						}
					],
					"type": {
						"type": "reference",
						"name": "Element",
						"qualifiedName": "global.JSX.Element",
						"package": "@types/react"
					}
				}
			]
		},
		{
			"id": 329,
			"name": "FormControl",
			"kind": 64,
			"kindString": "Function",
			"flags": {},
			"sources": [
				{
					"fileName": "packages/core/src/FormControl/index.tsx",
					"line": 78,
					"character": 13,
					"url": "https://github.com/dilan-dio4/tulsa/blob/3f22e3f/packages/core/src/FormControl/index.tsx#L78"
				}
			],
			"signatures": [
				{
					"id": 330,
					"name": "FormControl",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"typeParameter": [
						{
							"id": 331,
							"name": "T",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {},
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "any"
									}
								],
								"name": "ElementType",
								"qualifiedName": "React.ElementType",
								"package": "@types/react"
							},
							"default": {
								"type": "literal",
								"value": "div"
							}
						}
					],
					"parameters": [
						{
							"id": 332,
							"name": "__namedParameters",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "intersection",
								"types": [
									{
										"type": "reference",
										"id": 324,
										"typeArguments": [
											{
												"type": "reference",
												"id": 331,
												"name": "T"
											}
										],
										"name": "IFormControl"
									},
									{
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"id": 331,
														"name": "T"
													}
												],
												"name": "ComponentProps",
												"qualifiedName": "React.ComponentProps",
												"package": "@types/react"
											}
										],
										"name": "PropsWithoutRef",
										"qualifiedName": "React.PropsWithoutRef",
										"package": "@types/react"
									}
								]
							}
						}
					],
					"type": {
						"type": "reference",
						"name": "Element",
						"qualifiedName": "global.JSX.Element",
						"package": "@types/react"
					}
				}
			]
		},
		{
			"id": 1,
			"name": "IconButton",
			"kind": 64,
			"kindString": "Function",
			"flags": {},
			"sources": [
				{
					"fileName": "packages/core/src/Button/index.tsx",
					"line": 243,
					"character": 16,
					"url": "https://github.com/dilan-dio4/tulsa/blob/3f22e3f/packages/core/src/Button/index.tsx#L243"
				}
			],
			"signatures": [
				{
					"id": 2,
					"name": "IconButton",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"typeParameter": [
						{
							"id": 3,
							"name": "T",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {},
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "any"
									}
								],
								"name": "ElementType",
								"qualifiedName": "React.ElementType",
								"package": "@types/react"
							},
							"default": {
								"type": "literal",
								"value": "button"
							}
						}
					],
					"parameters": [
						{
							"id": 4,
							"name": "__namedParameters",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "intersection",
								"types": [
									{
										"type": "reference",
										"id": 22,
										"typeArguments": [
											{
												"type": "reference",
												"id": 3,
												"name": "T"
											}
										],
										"name": "IIconButtonProps"
									},
									{
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"typeArguments": [
															{
																"type": "reference",
																"id": 3,
																"name": "T"
															}
														],
														"name": "ComponentProps",
														"qualifiedName": "React.ComponentProps",
														"package": "@types/react"
													}
												],
												"name": "PropsWithoutRef",
												"qualifiedName": "React.PropsWithoutRef",
												"package": "@types/react"
											},
											{
												"type": "literal",
												"value": "size"
											}
										],
										"name": "Omit",
										"qualifiedName": "Omit",
										"package": "typescript"
									}
								]
							}
						}
					],
					"type": {
						"type": "reference",
						"name": "Element",
						"qualifiedName": "global.JSX.Element",
						"package": "@types/react"
					}
				}
			]
		},
		{
			"id": 1386,
			"name": "Menu",
			"kind": 64,
			"kindString": "Function",
			"flags": {},
			"sources": [
				{
					"fileName": "packages/core/src/Menu/index.tsx",
					"line": 12,
					"character": 13,
					"url": "https://github.com/dilan-dio4/tulsa/blob/3f22e3f/packages/core/src/Menu/index.tsx#L12"
				}
			],
			"signatures": [
				{
					"id": 1387,
					"name": "Menu",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "**NOTE**: Exotic components are not callable."
							}
						]
					},
					"parameters": [
						{
							"id": 1388,
							"name": "props",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "intersection",
								"types": [
									{
										"type": "reference",
										"id": 1125,
										"name": "IMenuProps"
									},
									{
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "HTMLUListElement",
												"qualifiedName": "HTMLUListElement",
												"package": "typescript"
											}
										],
										"name": "RefAttributes",
										"qualifiedName": "React.RefAttributes",
										"package": "@types/react"
									}
								]
							}
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "any"
							},
							{
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "JSXElementConstructor",
										"qualifiedName": "React.JSXElementConstructor",
										"package": "@types/react"
									}
								]
							}
						],
						"name": "ReactElement",
						"qualifiedName": "React.ReactElement",
						"package": "@types/react"
					}
				}
			]
		},
		{
			"id": 1111,
			"name": "Radio",
			"kind": 64,
			"kindString": "Function",
			"flags": {},
			"sources": [
				{
					"fileName": "packages/core/src/ToggleBox/index.tsx",
					"line": 74,
					"character": 13,
					"url": "https://github.com/dilan-dio4/tulsa/blob/3f22e3f/packages/core/src/ToggleBox/index.tsx#L74"
				}
			],
			"signatures": [
				{
					"id": 1112,
					"name": "Radio",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"parameters": [
						{
							"id": 1113,
							"name": "__namedParameters",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "reference",
								"id": 813,
								"name": "IToggleBox"
							}
						}
					],
					"type": {
						"type": "reference",
						"name": "Element",
						"qualifiedName": "global.JSX.Element",
						"package": "@types/react"
					}
				}
			]
		},
		{
			"id": 1114,
			"name": "Select",
			"kind": 64,
			"kindString": "Function",
			"flags": {},
			"sources": [
				{
					"fileName": "packages/core/src/Select/index.tsx",
					"line": 34,
					"character": 13,
					"url": "https://github.com/dilan-dio4/tulsa/blob/3f22e3f/packages/core/src/Select/index.tsx#L34"
				}
			],
			"signatures": [
				{
					"id": 1115,
					"name": "Select",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"parameters": [
						{
							"id": 1116,
							"name": "__namedParameters",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "intersection",
								"types": [
									{
										"type": "reference",
										"name": "ISelect"
									},
									{
										"type": "reference",
										"id": 6,
										"typeArguments": [
											{
												"type": "literal",
												"value": "select"
											}
										],
										"name": "IButtonProps"
									}
								]
							}
						}
					],
					"type": {
						"type": "reference",
						"name": "Element",
						"qualifiedName": "global.JSX.Element",
						"package": "@types/react"
					}
				}
			]
		},
		{
			"id": 333,
			"name": "Spinner",
			"kind": 64,
			"kindString": "Function",
			"flags": {},
			"sources": [
				{
					"fileName": "packages/core/src/Spinner/index.tsx",
					"line": 13,
					"character": 16,
					"url": "https://github.com/dilan-dio4/tulsa/blob/3f22e3f/packages/core/src/Spinner/index.tsx#L13"
				}
			],
			"signatures": [
				{
					"id": 334,
					"name": "Spinner",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"parameters": [
						{
							"id": 335,
							"name": "__namedParameters",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "reference",
								"id": 336,
								"name": "ISpinner"
							}
						}
					],
					"type": {
						"type": "reference",
						"name": "Element",
						"qualifiedName": "global.JSX.Element",
						"package": "@types/react"
					}
				}
			]
		},
		{
			"id": 1117,
			"name": "Switch",
			"kind": 64,
			"kindString": "Function",
			"flags": {},
			"sources": [
				{
					"fileName": "packages/core/src/Switch/index.tsx",
					"line": 7,
					"character": 16,
					"url": "https://github.com/dilan-dio4/tulsa/blob/3f22e3f/packages/core/src/Switch/index.tsx#L7"
				}
			],
			"signatures": [
				{
					"id": 1118,
					"name": "Switch",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"parameters": [
						{
							"id": 1119,
							"name": "__namedParameters",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "intersection",
								"types": [
									{
										"type": "reflection",
										"declaration": {
											"id": 1120,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 1121,
													"name": "size",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "packages/core/src/Switch/index.tsx",
															"line": 7,
															"character": 75,
															"url": "https://github.com/dilan-dio4/tulsa/blob/3f22e3f/packages/core/src/Switch/index.tsx#L7"
														}
													],
													"type": {
														"type": "union",
														"types": [
															{
																"type": "literal",
																"value": "sm"
															},
															{
																"type": "literal",
																"value": "md"
															},
															{
																"type": "literal",
																"value": "lg"
															}
														]
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														1121
													]
												}
											],
											"sources": [
												{
													"fileName": "packages/core/src/Switch/index.tsx",
													"line": 7,
													"character": 73,
													"url": "https://github.com/dilan-dio4/tulsa/blob/3f22e3f/packages/core/src/Switch/index.tsx#L7"
												}
											]
										}
									},
									{
										"type": "reference",
										"id": 813,
										"name": "IToggleBox"
									}
								]
							}
						}
					],
					"type": {
						"type": "reference",
						"name": "Element",
						"qualifiedName": "global.JSX.Element",
						"package": "@types/react"
					}
				}
			]
		},
		{
			"id": 45,
			"name": "TextArea",
			"kind": 64,
			"kindString": "Function",
			"flags": {},
			"sources": [
				{
					"fileName": "packages/core/src/TextArea/index.tsx",
					"line": 7,
					"character": 16,
					"url": "https://github.com/dilan-dio4/tulsa/blob/3f22e3f/packages/core/src/TextArea/index.tsx#L7"
				}
			],
			"signatures": [
				{
					"id": 46,
					"name": "TextArea",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"parameters": [
						{
							"id": 47,
							"name": "__namedParameters",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "reference",
								"id": 48,
								"name": "ITextArea"
							}
						}
					],
					"type": {
						"type": "reference",
						"name": "Element",
						"qualifiedName": "global.JSX.Element",
						"package": "@types/react"
					}
				}
			]
		},
		{
			"id": 30,
			"name": "TextInput",
			"kind": 64,
			"kindString": "Function",
			"flags": {},
			"sources": [
				{
					"fileName": "packages/core/src/TextInput/index.tsx",
					"line": 55,
					"character": 16,
					"url": "https://github.com/dilan-dio4/tulsa/blob/3f22e3f/packages/core/src/TextInput/index.tsx#L55"
				}
			],
			"signatures": [
				{
					"id": 31,
					"name": "TextInput",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"typeParameter": [
						{
							"id": 32,
							"name": "T",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {},
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "any"
									}
								],
								"name": "ElementType",
								"qualifiedName": "React.ElementType",
								"package": "@types/react"
							},
							"default": {
								"type": "literal",
								"value": "input"
							}
						}
					],
					"parameters": [
						{
							"id": 33,
							"name": "__namedParameters",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "intersection",
								"types": [
									{
										"type": "reference",
										"id": 34,
										"typeArguments": [
											{
												"type": "reference",
												"id": 32,
												"name": "T"
											}
										],
										"name": "IInput"
									},
									{
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"id": 32,
														"name": "T"
													}
												],
												"name": "ComponentProps",
												"qualifiedName": "React.ComponentProps",
												"package": "@types/react"
											}
										],
										"name": "PropsWithoutRef",
										"qualifiedName": "React.PropsWithoutRef",
										"package": "@types/react"
									}
								]
							}
						}
					],
					"type": {
						"type": "reference",
						"name": "Element",
						"qualifiedName": "global.JSX.Element",
						"package": "@types/react"
					}
				}
			]
		}
	],
	"groups": [
		{
			"title": "Interfaces",
			"children": [
				16,
				6,
				324,
				22,
				34,
				1125,
				336,
				48,
				813
			]
		},
		{
			"title": "Type Aliases",
			"children": [
				5
			]
		},
		{
			"title": "Functions",
			"children": [
				18,
				1122,
				1108,
				1389,
				329,
				1,
				1386,
				1111,
				1114,
				333,
				1117,
				45,
				30
			]
		}
	],
	"sources": [
		{
			"fileName": "packages/core/src/index.tsx",
			"line": 1,
			"character": 0,
			"url": "https://github.com/dilan-dio4/tulsa/blob/3f22e3f/packages/core/src/index.tsx#L1"
		}
	]
}