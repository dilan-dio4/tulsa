"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[257],{7403:(e,t,o)=>{o.r(t),o.d(t,{assets:()=>b,contentTitle:()=>p,default:()=>u,frontMatter:()=>r,metadata:()=>d,toc:()=>k});var a=o(5402),s=o(2983),n=o(4993),i=o(3987),l=o(8173),c=o(8405);const r={sidebar_position:8,title:"Checkbox"},p=void 0,d={unversionedId:"components/checkbox",id:"components/checkbox",title:"Checkbox",description:"<Container",source:"@site/docs/components/checkbox.mdx",sourceDirName:"components",slug:"/components/checkbox",permalink:"/tulsa/components/checkbox",draft:!1,editUrl:"https://github.com/dilan-dio4/tulsa/tree/main/packages/docs/docs/components/checkbox.mdx",tags:[],version:"current",sidebarPosition:8,frontMatter:{sidebar_position:8,title:"Checkbox"},sidebar:"tutorialSidebar",previous:{title:"Spinner",permalink:"/tulsa/components/spinner"},next:{title:"Radio",permalink:"/tulsa/components/radio"}},b={},k=[{value:"Props",id:"props",level:2}],m={toc:k};function u(e){let{components:t,...o}=e;return(0,n.kt)("wrapper",(0,a.Z)({},m,o,{components:t,mdxType:"MDXLayout"}),(0,n.kt)(l.Z,{vertical:!0,components:(0,n.kt)(s.Fragment,null,(0,n.kt)(i.XZ,{mdxType:"Checkbox"}),(0,n.kt)(i.XZ,{label:"With a label",checked:!0,mdxType:"Checkbox"}),(0,n.kt)(i.XZ,{label:"Disabled",disabled:!0,mdxType:"Checkbox"})),mdxType:"Container"},(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-jsx"},"import { Checkbox } from '@tulsa/core';\n\n<Checkbox />\n<Checkbox label='With a label' checked />\n<Checkbox label='Disabled' disabled />\n"))),(0,n.kt)("h2",{id:"props"},"Props"),(0,n.kt)(c.Z,{data:[{name:"id",isRequired:!1,type:"string",description:"Manually sets the id and accessibility of the `for` attribute of the associated label",default:""},{name:"label",isRequired:!1,type:"string",description:"Associated label of the box",default:""},{name:"labelProps",isRequired:!1,type:'HTMLProps<"label">',description:"Props that are applied to the root of the label",default:""}],mdxType:"PropsTable"}),(0,n.kt)("blockquote",null,(0,n.kt)("p",{parentName:"blockquote"},"Native props are forwarded to the root component.")))}u.isMDXComponent=!0}}]);