"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[812],{8770:(t,e,n)=>{n.r(e),n.d(e,{assets:()=>c,contentTitle:()=>d,default:()=>B,frontMatter:()=>p,metadata:()=>m,toc:()=>k});var o=n(5402),a=n(2983),i=n(4993),r=n(3987),s=n(8173),l=n(9126),u=n(8405);const p={sidebar_position:2,title:"Button"},d=void 0,m={unversionedId:"components/button",id:"components/button",title:"Button",description:"<Container",source:"@site/docs/components/button.mdx",sourceDirName:"components",slug:"/components/button",permalink:"/tulsa/components/button",draft:!1,editUrl:"https://github.com/dilan-dio4/tulsa/tree/main/packages/docs/docs/components/button.mdx",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2,title:"Button"},sidebar:"tutorialSidebar",previous:{title:"Installation",permalink:"/tulsa/installation"},next:{title:"IconButton",permalink:"/tulsa/components/icon-button"}},c={},k=[{value:"Props",id:"props",level:2},{value:"Examples",id:"examples",level:2},{value:"Sizes",id:"sizes",level:3},{value:"As an <em>a</em> tag",id:"as-an-a-tag",level:3},{value:"Display Button",id:"display-button",level:3},{value:"With a counter",id:"with-a-counter",level:3},{value:"Button.Counter",id:"buttoncounter",level:2},{value:"Props",id:"props-1",level:3}],h={toc:k};function B(t){let{components:e,...n}=t;return(0,i.kt)("wrapper",(0,o.Z)({},h,n,{components:e,mdxType:"MDXLayout"}),(0,i.kt)(s.Z,{components:(0,i.kt)(a.Fragment,null,(0,i.kt)(r.zx,{variant:"Primary",mdxType:"Button"},"Primary"),(0,i.kt)(r.zx,{variant:"Secondary",mdxType:"Button"},"Secondary"),(0,i.kt)(r.zx,{variant:"Invisible",mdxType:"Button"},"Invisible")),mdxType:"Container"},(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-jsx"},'import { Button } from \'@tulsa/core\';\n\n<Button variant={"Primary"}>Primary</Button>\n<Button variant={"Secondary"}>Secondary</Button>\n<Button variant={"Invisible"}>Invisible</Button>\n'))),(0,i.kt)("h2",{id:"props"},"Props"),(0,i.kt)(u.Z,{data:[{name:"leadingVisual",isRequired:!1,type:"React.ReactElement",description:"An element that will appear before the button's content",default:""},{name:"leadingVisualProps",isRequired:!1,type:"HTMLProps<T>",description:"Props that will be applied to the root component of the leading visual",default:""},{name:"trailingVisual",isRequired:!1,type:"React.ReactElement",description:"An element that will appear after the button's content",default:""},{name:"trailingVisualProps",isRequired:!1,type:"HTMLProps<T>",description:"Props that will be applied to the root component of the trailing visual",default:""},{name:"size",isRequired:!1,type:"'xs' | 'sm' | 'md' | 'lg'",description:"Controls the relative size of the button",default:'"md"'},{name:"variant",isRequired:!1,type:"'Primary' | 'Secondary' | 'Invisible'",description:"Controls the look & feel of the button",default:'"Primary"'},{name:"as",isRequired:!1,type:"T",description:"Controls the root element that is used by the button. Can be an HTML element string or a React component.",default:'"button"'},{name:"selected",isRequired:!1,type:"boolean",description:"Sets whether or not the button is displayed as selected or not. Particularly useful in a `ButtonGroup`",default:""}],mdxType:"PropsTable"}),(0,i.kt)("blockquote",null,(0,i.kt)("p",{parentName:"blockquote"},"Native props are forwarded to the root component.")),(0,i.kt)("br",null),(0,i.kt)("h2",{id:"examples"},"Examples"),(0,i.kt)("h3",{id:"sizes"},"Sizes"),(0,i.kt)(s.Z,{components:(0,i.kt)(a.Fragment,null,(0,i.kt)(r.zx,{size:"xs",mdxType:"Button"},"X Small"),(0,i.kt)(r.zx,{size:"sm",mdxType:"Button"},"Small"),(0,i.kt)(r.zx,{size:"md",mdxType:"Button"},"Medium"),(0,i.kt)(r.zx,{size:"lg",mdxType:"Button"},"Large")),mdxType:"Container"},(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-jsx"},'<Button size="xs">X Small</Button>\n<Button size="sm">Small</Button>\n<Button size="md">Medium</Button>\n<Button size="lg">Large</Button>\n'))),(0,i.kt)("h3",{id:"as-an-a-tag"},"As an ",(0,i.kt)("em",{parentName:"h3"},"a")," tag"),(0,i.kt)(s.Z,{components:(0,i.kt)(r.zx,{as:"a",href:"/",leadingVisual:(0,i.kt)(l.Goc,{size:"1.1em",color:"inherit",mdxType:"BiSearch"}),mdxType:"Button"},"This is a link"),mdxType:"Container"},(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-jsx"},'<Button as="a" href="/" leadingVisual={<BiSearch size={"1.1em"} color="inherit" />}>This is a link</Button>\n'))),(0,i.kt)("h3",{id:"display-button"},"Display Button"),(0,i.kt)(s.Z,{components:(0,i.kt)(r.zx,{leadingVisual:(0,i.kt)(l.Goc,{size:"1.1em",color:"inherit",mdxType:"BiSearch"}),trailingVisual:(0,i.kt)(l.lU2,{size:"1.4em",color:"inherit",mdxType:"BiChevronRight"}),trailingVisualProps:{style:{marginLeft:"auto"}},style:{minWidth:400},mdxType:"Button"},"Next Page"),mdxType:"Container"},(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-jsx"},'<Button\n    className=\'w-full\'\n    leadingVisual={<BiSearch size={"1.1em"} color="inherit" />}\n    trailingVisual={\n        <BiChevronRight\n            size={"1.4em"}\n            color="inherit"\n        />\n    }\n    trailingVisualProps={{ className: "ml-auto" }}\n>\n    Next Page\n</Button>\n'))),(0,i.kt)("h3",{id:"with-a-counter"},"With a counter"),(0,i.kt)(s.Z,{components:(0,i.kt)(a.Fragment,null,(0,i.kt)(r.zx,{trailingVisual:(0,i.kt)(r.zx.Counter,null,"2"),mdxType:"Button"},"Users"),(0,i.kt)(r.zx,{variant:"Secondary",trailingVisual:(0,i.kt)(r.zx.Counter,null,"2"),mdxType:"Button"},"Users"),(0,i.kt)(r.zx,{variant:"Invisible",trailingVisual:(0,i.kt)(r.zx.Counter,null,"2"),mdxType:"Button"},"Users")),mdxType:"Container"},(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-jsx"},'<Button trailingVisual={<Button.Counter>2</Button.Counter>}>Users</Button>\n<Button variant="Secondary" trailingVisual={<Button.Counter>2</Button.Counter>}>Users</Button>\n<Button variant="Invisible" trailingVisual={<Button.Counter>2</Button.Counter>}>Users</Button>\n'))),(0,i.kt)("h2",{id:"buttoncounter"},"Button.Counter"),(0,i.kt)("h3",{id:"props-1"},"Props"),(0,i.kt)(u.Z,{data:[{name:"children",isRequired:!1,type:"string",description:"Sets the number to display. Cast a numbers to a string",default:""}],mdxType:"PropsTable"}),(0,i.kt)("blockquote",null,(0,i.kt)("p",{parentName:"blockquote"},"Native props are forwarded to the root component.")))}B.isMDXComponent=!0}}]);